[{"D:\\Projects\\Real\\forex-dashboard\\src\\index.tsx":"1","D:\\Projects\\Real\\forex-dashboard\\src\\reportWebVitals.ts":"2","D:\\Projects\\Real\\forex-dashboard\\src\\App.tsx":"3","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\index.ts":"4","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\AuthRoutes.tsx":"5","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\store\\index.tsx":"6","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\LocaleProvider.tsx":"7","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\CremaThemeProvider\\index.tsx":"8","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\ContextProvider\\index.tsx":"9","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\CremaStyleProvider\\index.tsx":"10","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\index.tsx":"11","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\constants\\AppConst.ts":"12","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\AppContext.tsx":"13","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\index.tsx":"14","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\Utils.tsx":"15","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\AppHooks.tsx":"16","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\auth\\jwt-auth\\jwt-api.tsx":"17","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\auth\\index.ts":"18","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\index.ts":"19","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\index.ts":"20","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\constants\\AppEnums.ts":"21","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\ContextProvider\\ContextReducer.tsx":"22","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\ContextProvider\\defaultConfig.tsx":"23","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\index.tsx":"24","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Layouts.tsx":"25","D:\\Projects\\Real\\forex-dashboard\\src\\types\\actions\\Auth.actions.ts":"26","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\jss\\common\\common.style.tsx":"27","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\Common.ts":"28","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\JWTAuth.ts":"29","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\Setting.ts":"30","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\zh-Hans-CN.ts":"31","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\en-US.ts":"32","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\it_IT.ts":"33","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\fr_FR.ts":"34","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\es_ES.ts":"35","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\ar_SA.ts":"36","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\CommonReducer.ts":"37","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\Auth.ts":"38","D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\Setting.ts":"39","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\index.tsx":"40","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Scrollbar\\index.tsx":"41","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppSuspense\\index.tsx":"42","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Badge\\index.tsx":"43","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Loader\\index.tsx":"44","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ComponentCard\\index.tsx":"45","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppNavLink\\index.tsx":"46","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\GridContainer\\index.tsx":"47","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\MessageView\\index.tsx":"48","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\index.tsx":"49","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\InfoView\\index.tsx":"50","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ComponentHeader\\index.tsx":"51","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ContentView\\index.tsx":"52","D:\\Projects\\Real\\forex-dashboard\\src\\types\\actions\\Settings.action.ts":"53","D:\\Projects\\Real\\forex-dashboard\\src\\types\\actions\\Common.action.tsx":"54","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\index.tsx":"55","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\index.tsx":"56","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\index.tsx":"57","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\index.tsx":"58","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\index.tsx":"59","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\index.tsx":"60","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\index.tsx":"61","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\index.tsx":"62","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\index.tsx":"63","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\index.tsx":"64","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\index.tsx":"65","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\constants\\ColorSets.ts":"66","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\AppFooter.tsx":"67","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\CustomColorCell.tsx":"68","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\index.style.tsx":"69","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\IntlMessages.tsx":"70","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\SidebarColorPicker.tsx":"71","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\db\\navigationStyle.tsx":"72","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\SecondaryColorPicker.tsx":"73","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\PrimaryColorPicker.tsx":"74","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\index.tsx":"75","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppErrorBoundary\\index.tsx":"76","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppAnimate\\index.tsx":"77","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppFixedFooter.tsx":"78","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppFixedFooter.tsx":"79","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\index.style.tsx":"80","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppSidebar.tsx":"81","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppHeader.tsx":"82","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppFixedFooter.tsx":"83","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppSidebar.tsx":"84","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\index.style.tsx":"85","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppHeader.tsx":"86","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\CustomColorCell.style.tsx":"87","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\index.style.tsx":"88","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppHeader.tsx":"89","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppSidebar.tsx":"90","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppSidebar.tsx":"91","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppFixedFooter.tsx":"92","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppFooter.tsx":"93","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppHeader.tsx":"94","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\index.style.tsx":"95","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppFixedFooter.tsx":"96","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\index.style.tsx":"97","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppSidebar.tsx":"98","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppHeader.tsx":"99","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppSidebar.style.tsx":"100","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppHeader.style.tsx":"101","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppSidebar.style.tsx":"102","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppSidebar.style.tsx":"103","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppSidebar.style.tsx":"104","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppHeader.style.tsx":"105","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorUserInfo.tsx":"106","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\NotificationBar.tsx":"107","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppSidebar.style.tsx":"108","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\SearchBar\\index.tsx":"109","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Notifications\\index.tsx":"110","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\HeaderMessages\\index.tsx":"111","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\AppLogo\\index.tsx":"112","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\HeaderUser\\index.tsx":"113","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\index.tsx":"114","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\UserInfo\\index.tsx":"115","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\LanguageSwitcher\\index.tsx":"116","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\AppLogoWhite\\index.tsx":"117","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppHeader.style.tsx":"118","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppHeader.style.tsx":"119","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\HeaderMessages\\MessageItem.tsx":"120","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalNavGroup.tsx":"121","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalItem.tsx":"122","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalCollapse.tsx":"123","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\routesConfig.tsx":"124","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\LanguageSwitcher\\data.ts":"125","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\index.tsx":"126","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalNavGroup.style.tsx":"127","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalItem.style.tsx":"128","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalCollapase.style.tsx":"129","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Notifications\\NotificationItem.tsx":"130","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\db\\messages\\messages.tsx":"131","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\db\\notifications\\notification.tsx":"132","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalCollapse.tsx":"133","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalGroup.tsx":"134","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalItem.tsx":"135","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalGroup.style.tsx":"136","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\ClientPortal.tsx":"137","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalItem.style.tsx":"138","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppHeader.style.tsx":"139","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppSidebar.tsx":"140","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppFixedFooter.tsx":"141","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\Error404\\index.tsx":"142","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppFooter.tsx":"143","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\index.style.tsx":"144","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppHeader.tsx":"145","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\index.style.tsx":"146","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppHeader.tsx":"147","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppSidebar.tsx":"148","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppFixedFooter.tsx":"149","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\index.style.tsx":"150","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppSidebar.tsx":"151","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppHeader.tsx":"152","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppFixedFooter.tsx":"153","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\index.style.tsx":"154","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppSidebar.tsx":"155","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppHeader.tsx":"156","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppFixedFooter.tsx":"157","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\index.style.tsx":"158","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppFixedFooter.tsx":"159","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppSidebar.tsx":"160","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppHeader.tsx":"161","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppFooter.tsx":"162","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\index.style.tsx":"163","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppSidebar.tsx":"164","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppHeader.tsx":"165","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ComponentCard\\highlightTheme.tsx":"166","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\ForgetPassword\\index.tsx":"167","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signin\\index.tsx":"168","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signup\\index.tsx":"169","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppSidebar.style.tsx":"170","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppHeader.style.tsx":"171","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\NotificationBar.tsx":"172","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\index.tsx":"173","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppHeader.style.tsx":"174","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppSidebar.style.tsx":"175","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\sample\\index.tsx":"176","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppSidebar.style.tsx":"177","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppHeader.style.tsx":"178","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppSidebar.style.tsx":"179","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppHeader.style.tsx":"180","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppHeader.style.tsx":"181","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppSidebar.style.tsx":"182","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\NotificationBar.tsx":"183","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppSidebar.style.tsx":"184","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppHeader.style.tsx":"185","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\BucketMinibar.tsx":"186","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\ForgetPassword\\ForgetPasswordJwtAuth.tsx":"187","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signup\\SignupJwtAuth.tsx":"188","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signin\\SigninJwtAuth.tsx":"189","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\sample\\Pages\\PageOne.tsx":"190","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\sample\\Pages\\PageTwo.tsx":"191","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\Maintenance\\index.tsx":"192","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\ComingSoon\\index.tsx":"193","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\Error500\\index.tsx":"194","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\index.tsx":"195","D:\\Projects\\Real\\forex-dashboard\\src\\hooks\\hooks.ts":"196","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessageCard.tsx":"197","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\createTicket.tsx":"198","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets\\tickets.tsx":"199","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\help-desk\\index.tsx":"200","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\help-desk\\TicketPage.tsx":"201","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\signals\\index.tsx":"202","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\signals\\Page\\Signals.tsx":"203","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\shop\\index.tsx":"204","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\shop\\shopPage.tsx":"205","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\index.tsx":"206","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\index.tsx":"207","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\index.tsx":"208","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\index.tsx":"209","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppsHeader.tsx":"210","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppsContent.tsx":"211","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\ProductsCategory.tsx":"212","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\PriceSelector.tsx":"213","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\ColorCell.tsx":"214","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\CheckedCell.tsx":"215","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\RatingCell.tsx":"216","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\index.style.tsx":"217","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppSidebar.tsx":"218","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductGrid\\index.tsx":"219","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\index.tsx":"220","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductHeader\\index.tsx":"221","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppGrid\\index.tsx":"222","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductGrid\\GridItem.tsx":"223","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\ListEmptyResult.tsx":"224","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\ListView.tsx":"225","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\ListFooter.tsx":"226","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppGrid\\GridView.tsx":"227","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppGrid\\GridFooter.tsx":"228","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppAnimateGroup\\index.tsx":"229","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Signals\\SignalCard\\index.tsx":"230","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Signals\\index.tsx":"231","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\analyses\\index.tsx":"232","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\analyses\\analysePage.tsx":"233","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\websites\\index.tsx":"234","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\websites\\WebsitesPages.tsx":"235","D:\\Projects\\Real\\forex-dashboard\\src\\components\\web-sites\\index.tsx":"236","D:\\Projects\\Real\\forex-dashboard\\src\\components\\web-sites\\WebSiteCard\\index.tsx":"237","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chart\\index.tsx":"238","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chart\\ChartPage.tsx":"239","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chart\\index.tsx":"240","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chart\\StaticsGraph.tsx":"241","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppCard\\index.tsx":"242","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppSelect\\index.tsx":"243","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chat\\index.tsx":"244","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chat\\chatPage.tsx":"245","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\index.tsx":"246","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\index.tsx":"247","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\index.tsx":"248","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\AddNewMessage.tsx":"249","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\MessagesList.tsx":"250","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\Header.tsx":"251","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppsFooter.tsx":"252","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\SenderMessageItem.tsx":"253","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\ReceiverMessageItem.tsx":"254","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\UserInfo.tsx":"255","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\MessageItem.style.tsx":"256","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ConfirmationDialog\\index.tsx":"257","D:\\Projects\\Real\\forex-dashboard\\src\\gate\\index.ts":"258","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\index.tsx":"259","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppTableContainer\\index.tsx":"260","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppMenu\\index.tsx":"261","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Modal\\index.tsx":"262","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Signals\\SihnalDetails\\index.tsx":"263","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Reviews\\index.tsx":"264","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Reviews\\ReviewCell.tsx":"265","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppCircularProgress\\index.tsx":"266","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLinearProgress\\index.tsx":"267","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\NewAnalyze\\index.tsx":"268","D:\\Projects\\Real\\forex-dashboard\\src\\lib\\index.ts":"269","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\UserDetail\\index.tsx":"270","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\UserDetail\\ContactActions.tsx":"271","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\UserDetail\\PersonalDetails.tsx":"272","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsStarredIcon\\index.tsx":"273","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\EditUser\\index.tsx":"274","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\EditUser\\EditUserForm.tsx":"275","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzeDetail\\index.tsx":"276","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\subscription\\index.tsx":"277","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\subscription\\SubscriptionPage.tsx":"278","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Subscriptions\\index.tsx":"279","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Subscriptions\\PlanCard\\index.tsx":"280","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\index.tsx":"281","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\AddNewMessage.tsx":"282","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\MessagesList.tsx":"283","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\Header.tsx":"284","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\ReceiverMessageItem.tsx":"285","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\SenderMessageItem.tsx":"286","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\UserInfo.tsx":"287","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\MessageItem.style.tsx":"288","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Reviews\\AddNewComment.tsx":"289","D:\\Projects\\Real\\forex-dashboard\\src\\hooks\\isMobile.ts":"290","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\SendingSpinner\\index.tsx":"291","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\orders\\index.tsx":"292","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\orders\\OrdersPage.tsx":"293","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\index.tsx":"294","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\TableItem.tsx":"295","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\TableHeading.tsx":"296","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\TableItem.style.tsx":"297","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\index.tsx":"298","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\Pages\\AmountRequestsPage.tsx":"299","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\Pages\\PromotionsPage.tsx":"300","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\index.tsx":"301","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\TableHeading.tsx":"302","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\TableItem.tsx":"303","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\TableItem.style.tsx":"304","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\table\\index.tsx":"305","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\table\\TablePage.tsx":"306","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\Pages\\AmountRequest\\index.tsx":"307","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Skeleton\\ChatListSkeleton.tsx":"308","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\index.tsx":"309","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\Header.tsx":"310","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\ProductView\\index.tsx":"311","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\ProductImage\\index.tsx":"312","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\index.tsx":"313","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\index.tsx":"314","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsPagination\\index.tsx":"315","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\TableItem.tsx":"316","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\TableHeading.tsx":"317","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\OrderActions.tsx":"318","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\TableItem.style.tsx":"319"},{"size":724,"mtime":1619009102225,"results":"320","hashOfConfig":"321"},{"size":441,"mtime":1607874786000,"results":"322","hashOfConfig":"321"},{"size":1455,"mtime":1621345758691,"results":"323","hashOfConfig":"321"},{"size":48,"mtime":1607875548000,"results":"324","hashOfConfig":"321"},{"size":3817,"mtime":1621349164325,"results":"325","hashOfConfig":"321"},{"size":1655,"mtime":1621346480393,"results":"326","hashOfConfig":"321"},{"size":728,"mtime":1607873730000,"results":"327","hashOfConfig":"321"},{"size":3590,"mtime":1607875770000,"results":"328","hashOfConfig":"321"},{"size":3768,"mtime":1607873730000,"results":"329","hashOfConfig":"321"},{"size":416,"mtime":1607873730000,"results":"330","hashOfConfig":"321"},{"size":1580,"mtime":1618852931284,"results":"331","hashOfConfig":"321"},{"size":592,"mtime":1621349241083,"results":"332","hashOfConfig":"321"},{"size":228,"mtime":1594294884000,"results":"333","hashOfConfig":"321"},{"size":1114,"mtime":1607873730000,"results":"334","hashOfConfig":"321"},{"size":4054,"mtime":1607875548000,"results":"335","hashOfConfig":"321"},{"size":2149,"mtime":1621268843571,"results":"336","hashOfConfig":"321"},{"size":1389,"mtime":1621272431799,"results":"337","hashOfConfig":"321"},{"size":30,"mtime":1607875548000,"results":"338","hashOfConfig":"321"},{"size":83,"mtime":1607875548000,"results":"339","hashOfConfig":"321"},{"size":373,"mtime":1594294906000,"results":"340","hashOfConfig":"321"},{"size":1271,"mtime":1607873730000,"results":"341","hashOfConfig":"321"},{"size":4903,"mtime":1607873730000,"results":"342","hashOfConfig":"321"},{"size":3451,"mtime":1618855609870,"results":"343","hashOfConfig":"321"},{"size":227,"mtime":1607875548000,"results":"344","hashOfConfig":"321"},{"size":1122,"mtime":1607873730000,"results":"345","hashOfConfig":"321"},{"size":621,"mtime":1607873730000,"results":"346","hashOfConfig":"321"},{"size":1095,"mtime":1607873730000,"results":"347","hashOfConfig":"321"},{"size":737,"mtime":1594295202000,"results":"348","hashOfConfig":"321"},{"size":3104,"mtime":1621262088486,"results":"349","hashOfConfig":"321"},{"size":351,"mtime":1607873730000,"results":"350","hashOfConfig":"321"},{"size":220,"mtime":1594294906000,"results":"351","hashOfConfig":"321"},{"size":215,"mtime":1594294906000,"results":"352","hashOfConfig":"321"},{"size":215,"mtime":1594294906000,"results":"353","hashOfConfig":"321"},{"size":215,"mtime":1594294906000,"results":"354","hashOfConfig":"321"},{"size":212,"mtime":1594294906000,"results":"355","hashOfConfig":"321"},{"size":149,"mtime":1594294906000,"results":"356","hashOfConfig":"321"},{"size":1534,"mtime":1607873730000,"results":"357","hashOfConfig":"321"},{"size":807,"mtime":1607873730000,"results":"358","hashOfConfig":"321"},{"size":828,"mtime":1621349331684,"results":"359","hashOfConfig":"321"},{"size":1534,"mtime":1621349781951,"results":"360","hashOfConfig":"321"},{"size":1104,"mtime":1607873730000,"results":"361","hashOfConfig":"321"},{"size":312,"mtime":1607873730000,"results":"362","hashOfConfig":"321"},{"size":947,"mtime":1607873730000,"results":"363","hashOfConfig":"321"},{"size":623,"mtime":1594295200000,"results":"364","hashOfConfig":"321"},{"size":4353,"mtime":1607873730000,"results":"365","hashOfConfig":"321"},{"size":250,"mtime":1607873730000,"results":"366","hashOfConfig":"321"},{"size":469,"mtime":1607873730000,"results":"367","hashOfConfig":"321"},{"size":2623,"mtime":1607873730000,"results":"368","hashOfConfig":"321"},{"size":15345,"mtime":1607873730000,"results":"369","hashOfConfig":"321"},{"size":758,"mtime":1607873730000,"results":"370","hashOfConfig":"321"},{"size":2101,"mtime":1607873730000,"results":"371","hashOfConfig":"321"},{"size":1713,"mtime":1618853271326,"results":"372","hashOfConfig":"321"},{"size":565,"mtime":1607873730000,"results":"373","hashOfConfig":"321"},{"size":951,"mtime":1594295202000,"results":"374","hashOfConfig":"321"},{"size":1472,"mtime":1607873730000,"results":"375","hashOfConfig":"321"},{"size":1391,"mtime":1607873730000,"results":"376","hashOfConfig":"321"},{"size":1723,"mtime":1607873730000,"results":"377","hashOfConfig":"321"},{"size":1740,"mtime":1618685891276,"results":"378","hashOfConfig":"321"},{"size":1482,"mtime":1607873730000,"results":"379","hashOfConfig":"321"},{"size":1434,"mtime":1607873730000,"results":"380","hashOfConfig":"321"},{"size":1769,"mtime":1607873730000,"results":"381","hashOfConfig":"321"},{"size":1464,"mtime":1607873730000,"results":"382","hashOfConfig":"321"},{"size":1728,"mtime":1607873730000,"results":"383","hashOfConfig":"321"},{"size":1710,"mtime":1607873730000,"results":"384","hashOfConfig":"321"},{"size":1649,"mtime":1618596278138,"results":"385","hashOfConfig":"321"},{"size":1294,"mtime":1607873730000,"results":"386","hashOfConfig":"321"},{"size":1907,"mtime":1607873730000,"results":"387","hashOfConfig":"321"},{"size":2012,"mtime":1604895840000,"results":"388","hashOfConfig":"321"},{"size":3376,"mtime":1607873730000,"results":"389","hashOfConfig":"321"},{"size":224,"mtime":1594294886000,"results":"390","hashOfConfig":"321"},{"size":1912,"mtime":1607873730000,"results":"391","hashOfConfig":"321"},{"size":1588,"mtime":1607873730000,"results":"392","hashOfConfig":"321"},{"size":1945,"mtime":1607875548000,"results":"393","hashOfConfig":"321"},{"size":2028,"mtime":1607873730000,"results":"394","hashOfConfig":"321"},{"size":767,"mtime":1621349059200,"results":"395","hashOfConfig":"321"},{"size":1401,"mtime":1607873730000,"results":"396","hashOfConfig":"321"},{"size":1227,"mtime":1607873730000,"results":"397","hashOfConfig":"321"},{"size":1926,"mtime":1607873730000,"results":"398","hashOfConfig":"321"},{"size":1655,"mtime":1607873730000,"results":"399","hashOfConfig":"321"},{"size":3780,"mtime":1607873730000,"results":"400","hashOfConfig":"321"},{"size":2675,"mtime":1618597011127,"results":"401","hashOfConfig":"321"},{"size":3406,"mtime":1618596221524,"results":"402","hashOfConfig":"321"},{"size":1757,"mtime":1607873730000,"results":"403","hashOfConfig":"321"},{"size":2258,"mtime":1607873730000,"results":"404","hashOfConfig":"321"},{"size":3386,"mtime":1607873730000,"results":"405","hashOfConfig":"321"},{"size":3376,"mtime":1607873730000,"results":"406","hashOfConfig":"321"},{"size":1011,"mtime":1594295200000,"results":"407","hashOfConfig":"321"},{"size":3559,"mtime":1607873730000,"results":"408","hashOfConfig":"321"},{"size":3378,"mtime":1607873730000,"results":"409","hashOfConfig":"321"},{"size":2287,"mtime":1607873730000,"results":"410","hashOfConfig":"321"},{"size":2011,"mtime":1607873730000,"results":"411","hashOfConfig":"321"},{"size":1644,"mtime":1607873730000,"results":"412","hashOfConfig":"321"},{"size":1724,"mtime":1607873730000,"results":"413","hashOfConfig":"321"},{"size":3930,"mtime":1607873730000,"results":"414","hashOfConfig":"321"},{"size":2953,"mtime":1607873730000,"results":"415","hashOfConfig":"321"},{"size":1928,"mtime":1607873730000,"results":"416","hashOfConfig":"321"},{"size":3813,"mtime":1607873730000,"results":"417","hashOfConfig":"321"},{"size":2487,"mtime":1607873730000,"results":"418","hashOfConfig":"321"},{"size":3220,"mtime":1607873730000,"results":"419","hashOfConfig":"321"},{"size":2664,"mtime":1618597390074,"results":"420","hashOfConfig":"321"},{"size":2023,"mtime":1604601572000,"results":"421","hashOfConfig":"321"},{"size":1005,"mtime":1607873730000,"results":"422","hashOfConfig":"321"},{"size":3842,"mtime":1607873730000,"results":"423","hashOfConfig":"321"},{"size":948,"mtime":1607873730000,"results":"424","hashOfConfig":"321"},{"size":2286,"mtime":1594295200000,"results":"425","hashOfConfig":"321"},{"size":3103,"mtime":1607875548000,"results":"426","hashOfConfig":"321"},{"size":2145,"mtime":1594295200000,"results":"427","hashOfConfig":"321"},{"size":4632,"mtime":1607873730000,"results":"428","hashOfConfig":"321"},{"size":4670,"mtime":1607873730000,"results":"429","hashOfConfig":"321"},{"size":5128,"mtime":1607873730000,"results":"430","hashOfConfig":"321"},{"size":5086,"mtime":1607873730000,"results":"431","hashOfConfig":"321"},{"size":1506,"mtime":1621350736241,"results":"432","hashOfConfig":"321"},{"size":5010,"mtime":1607875548000,"results":"433","hashOfConfig":"321"},{"size":843,"mtime":1607873730000,"results":"434","hashOfConfig":"321"},{"size":5521,"mtime":1621350567082,"results":"435","hashOfConfig":"321"},{"size":5323,"mtime":1607873730000,"results":"436","hashOfConfig":"321"},{"size":952,"mtime":1607873730000,"results":"437","hashOfConfig":"321"},{"size":2484,"mtime":1607873730000,"results":"438","hashOfConfig":"321"},{"size":3383,"mtime":1607873730000,"results":"439","hashOfConfig":"321"},{"size":1495,"mtime":1607873730000,"results":"440","hashOfConfig":"321"},{"size":2008,"mtime":1607873730000,"results":"441","hashOfConfig":"321"},{"size":1880,"mtime":1607873730000,"results":"442","hashOfConfig":"321"},{"size":3856,"mtime":1607873730000,"results":"443","hashOfConfig":"321"},{"size":2624,"mtime":1621349967990,"results":"444","hashOfConfig":"321"},{"size":728,"mtime":1594294880000,"results":"445","hashOfConfig":"321"},{"size":1144,"mtime":1607873730000,"results":"446","hashOfConfig":"321"},{"size":1599,"mtime":1619028579964,"results":"447","hashOfConfig":"321"},{"size":2540,"mtime":1618597976384,"results":"448","hashOfConfig":"321"},{"size":2641,"mtime":1619028694438,"results":"449","hashOfConfig":"321"},{"size":1522,"mtime":1607873730000,"results":"450","hashOfConfig":"321"},{"size":733,"mtime":1607873730000,"results":"451","hashOfConfig":"321"},{"size":1363,"mtime":1607873730000,"results":"452","hashOfConfig":"321"},{"size":6632,"mtime":1607873730000,"results":"453","hashOfConfig":"321"},{"size":5074,"mtime":1607873730000,"results":"454","hashOfConfig":"321"},{"size":2105,"mtime":1607873730000,"results":"455","hashOfConfig":"321"},{"size":1338,"mtime":1607873730000,"results":"456","hashOfConfig":"321"},{"size":619,"mtime":1594295200000,"results":"457","hashOfConfig":"321"},{"size":898,"mtime":1607873730000,"results":"458","hashOfConfig":"321"},{"size":2216,"mtime":1594295200000,"results":"459","hashOfConfig":"321"},{"size":1881,"mtime":1607873730000,"results":"460","hashOfConfig":"321"},{"size":1657,"mtime":1607873730000,"results":"461","hashOfConfig":"321"},{"size":2442,"mtime":1607873730000,"results":"462","hashOfConfig":"321"},{"size":1748,"mtime":1607873730000,"results":"463","hashOfConfig":"321"},{"size":2960,"mtime":1607873730000,"results":"464","hashOfConfig":"321"},{"size":3926,"mtime":1607873730000,"results":"465","hashOfConfig":"321"},{"size":2619,"mtime":1607873730000,"results":"466","hashOfConfig":"321"},{"size":1323,"mtime":1607873730000,"results":"467","hashOfConfig":"321"},{"size":2693,"mtime":1607873730000,"results":"468","hashOfConfig":"321"},{"size":1930,"mtime":1607873730000,"results":"469","hashOfConfig":"321"},{"size":3478,"mtime":1607873730000,"results":"470","hashOfConfig":"321"},{"size":3966,"mtime":1618686741996,"results":"471","hashOfConfig":"321"},{"size":3569,"mtime":1618927842068,"results":"472","hashOfConfig":"321"},{"size":1926,"mtime":1607873730000,"results":"473","hashOfConfig":"321"},{"size":3569,"mtime":1607873730000,"results":"474","hashOfConfig":"321"},{"size":2400,"mtime":1607873730000,"results":"475","hashOfConfig":"321"},{"size":3284,"mtime":1607873730000,"results":"476","hashOfConfig":"321"},{"size":1811,"mtime":1607873730000,"results":"477","hashOfConfig":"321"},{"size":2140,"mtime":1607873730000,"results":"478","hashOfConfig":"321"},{"size":1609,"mtime":1607873730000,"results":"479","hashOfConfig":"321"},{"size":1892,"mtime":1607873730000,"results":"480","hashOfConfig":"321"},{"size":3128,"mtime":1604674974000,"results":"481","hashOfConfig":"321"},{"size":1761,"mtime":1607873730000,"results":"482","hashOfConfig":"321"},{"size":2953,"mtime":1607873730000,"results":"483","hashOfConfig":"321"},{"size":2018,"mtime":1607873730000,"results":"484","hashOfConfig":"321"},{"size":3930,"mtime":1607873730000,"results":"485","hashOfConfig":"321"},{"size":1263,"mtime":1607873730000,"results":"486","hashOfConfig":"321"},{"size":213,"mtime":1607875548000,"results":"487","hashOfConfig":"321"},{"size":2211,"mtime":1621350325075,"results":"488","hashOfConfig":"321"},{"size":2188,"mtime":1621350333445,"results":"489","hashOfConfig":"321"},{"size":948,"mtime":1607873730000,"results":"490","hashOfConfig":"321"},{"size":3459,"mtime":1607873730000,"results":"491","hashOfConfig":"321"},{"size":2145,"mtime":1594295200000,"results":"492","hashOfConfig":"321"},{"size":879,"mtime":1621349502810,"results":"493","hashOfConfig":"321"},{"size":777,"mtime":1607873730000,"results":"494","hashOfConfig":"321"},{"size":1999,"mtime":1607873730000,"results":"495","hashOfConfig":"321"},{"size":414,"mtime":1607875548000,"results":"496","hashOfConfig":"321"},{"size":1653,"mtime":1618686629117,"results":"497","hashOfConfig":"321"},{"size":2382,"mtime":1594295200000,"results":"498","hashOfConfig":"321"},{"size":4242,"mtime":1607873730000,"results":"499","hashOfConfig":"321"},{"size":2448,"mtime":1594295200000,"results":"500","hashOfConfig":"321"},{"size":2218,"mtime":1594295200000,"results":"501","hashOfConfig":"321"},{"size":1051,"mtime":1607873730000,"results":"502","hashOfConfig":"321"},{"size":2050,"mtime":1607873730000,"results":"503","hashOfConfig":"321"},{"size":948,"mtime":1607873730000,"results":"504","hashOfConfig":"321"},{"size":2731,"mtime":1607873730000,"results":"505","hashOfConfig":"321"},{"size":2548,"mtime":1607873730000,"results":"506","hashOfConfig":"321"},{"size":5779,"mtime":1621350267232,"results":"507","hashOfConfig":"321"},{"size":10192,"mtime":1621350190382,"results":"508","hashOfConfig":"321"},{"size":6554,"mtime":1621350225526,"results":"509","hashOfConfig":"321"},{"size":354,"mtime":1618250121772,"results":"510","hashOfConfig":"321"},{"size":497,"mtime":1607875548000,"results":"511","hashOfConfig":"321"},{"size":2391,"mtime":1607873730000,"results":"512","hashOfConfig":"321"},{"size":4226,"mtime":1607873730000,"results":"513","hashOfConfig":"321"},{"size":2450,"mtime":1607873730000,"results":"514","hashOfConfig":"321"},{"size":3134,"mtime":1619440284917,"results":"515","hashOfConfig":"321"},{"size":2906,"mtime":1621344222477,"results":"516","hashOfConfig":"321"},{"size":8896,"mtime":1618680568698,"results":"517","hashOfConfig":"321"},{"size":3021,"mtime":1619390851302,"results":"518","hashOfConfig":"321"},{"size":4880,"mtime":1619037101614,"results":"519","hashOfConfig":"321"},{"size":259,"mtime":1621350058854,"results":"520","hashOfConfig":"321"},{"size":357,"mtime":1618251395045,"results":"521","hashOfConfig":"321"},{"size":258,"mtime":1621350007236,"results":"522","hashOfConfig":"321"},{"size":646,"mtime":1621274408201,"results":"523","hashOfConfig":"321"},{"size":250,"mtime":1621350017546,"results":"524","hashOfConfig":"321"},{"size":487,"mtime":1621274465930,"results":"525","hashOfConfig":"321"},{"size":413,"mtime":1619364681668,"results":"526","hashOfConfig":"321"},{"size":2247,"mtime":1619367325678,"results":"527","hashOfConfig":"321"},{"size":4862,"mtime":1618300444097,"results":"528","hashOfConfig":"321"},{"size":2802,"mtime":1607873730000,"results":"529","hashOfConfig":"321"},{"size":867,"mtime":1607873730000,"results":"530","hashOfConfig":"321"},{"size":2058,"mtime":1607874718000,"results":"531","hashOfConfig":"321"},{"size":1020,"mtime":1618300390810,"results":"532","hashOfConfig":"321"},{"size":1930,"mtime":1618294653285,"results":"533","hashOfConfig":"534"},{"size":976,"mtime":1607873730000,"results":"535","hashOfConfig":"534"},{"size":851,"mtime":1618295179807,"results":"536","hashOfConfig":"321"},{"size":812,"mtime":1607873730000,"results":"537","hashOfConfig":"534"},{"size":3154,"mtime":1607873730000,"results":"538","hashOfConfig":"321"},{"size":1378,"mtime":1607873730000,"results":"539","hashOfConfig":"321"},{"size":1739,"mtime":1619390328773,"results":"540","hashOfConfig":"321"},{"size":824,"mtime":1607873730000,"results":"541","hashOfConfig":"321"},{"size":1779,"mtime":1619011212489,"results":"542","hashOfConfig":"321"},{"size":965,"mtime":1607873730000,"results":"543","hashOfConfig":"321"},{"size":5402,"mtime":1619365231675,"results":"544","hashOfConfig":"321"},{"size":2142,"mtime":1607873730000,"results":"545","hashOfConfig":"321"},{"size":2154,"mtime":1607873730000,"results":"546","hashOfConfig":"321"},{"size":1143,"mtime":1607873730000,"results":"547","hashOfConfig":"321"},{"size":4229,"mtime":1618298646596,"results":"548","hashOfConfig":"321"},{"size":1181,"mtime":1607873730000,"results":"549","hashOfConfig":"321"},{"size":5103,"mtime":1618607416572,"results":"550","hashOfConfig":"321"},{"size":7357,"mtime":1619034271358,"results":"551","hashOfConfig":"321"},{"size":1572,"mtime":1618849708388,"results":"552","hashOfConfig":"321"},{"size":259,"mtime":1621350112046,"results":"553","hashOfConfig":"321"},{"size":608,"mtime":1621274561449,"results":"554","hashOfConfig":"321"},{"size":264,"mtime":1621349978675,"results":"555","hashOfConfig":"321"},{"size":470,"mtime":1621274522135,"results":"556","hashOfConfig":"321"},{"size":665,"mtime":1618659174005,"results":"557","hashOfConfig":"321"},{"size":3180,"mtime":1618659811389,"results":"558","hashOfConfig":"321"},{"size":228,"mtime":1618332562871,"results":"559","hashOfConfig":"321"},{"size":1851,"mtime":1618333533690,"results":"560","hashOfConfig":"321"},{"size":1955,"mtime":1618333600732,"results":"561","hashOfConfig":"321"},{"size":1636,"mtime":1618333012379,"results":"562","hashOfConfig":"321"},{"size":4019,"mtime":1607873730000,"results":"563","hashOfConfig":"321"},{"size":1744,"mtime":1607873730000,"results":"564","hashOfConfig":"321"},{"size":250,"mtime":1621350087567,"results":"565","hashOfConfig":"321"},{"size":409,"mtime":1618902086950,"results":"566","hashOfConfig":"321"},{"size":318,"mtime":1618774903067,"results":"567","hashOfConfig":"321"},{"size":1239,"mtime":1618777369965,"results":"568","hashOfConfig":"321"},{"size":6109,"mtime":1618910709452,"results":"569","hashOfConfig":"321"},{"size":3357,"mtime":1621285151519,"results":"570","hashOfConfig":"321"},{"size":1394,"mtime":1618777408814,"results":"571","hashOfConfig":"321"},{"size":3017,"mtime":1618778328787,"results":"572","hashOfConfig":"321"},{"size":877,"mtime":1619392500039,"results":"573","hashOfConfig":"321"},{"size":4014,"mtime":1618901923760,"results":"574","hashOfConfig":"321"},{"size":2431,"mtime":1618911164461,"results":"575","hashOfConfig":"321"},{"size":2914,"mtime":1618682320996,"results":"576","hashOfConfig":"321"},{"size":2431,"mtime":1618778119880,"results":"577","hashOfConfig":"321"},{"size":1998,"mtime":1607873730000,"results":"578","hashOfConfig":"321"},{"size":2419,"mtime":1621343602532,"results":"579","hashOfConfig":"321"},{"size":3622,"mtime":1619029544155,"results":"580","hashOfConfig":"321"},{"size":1010,"mtime":1619393440825,"results":"581","hashOfConfig":"321"},{"size":1301,"mtime":1618767588957,"results":"582","hashOfConfig":"321"},{"size":1161,"mtime":1618850358070,"results":"583","hashOfConfig":"321"},{"size":2896,"mtime":1621284817647,"results":"584","hashOfConfig":"321"},{"size":1057,"mtime":1619046616203,"results":"585","hashOfConfig":"321"},{"size":4318,"mtime":1618848372359,"results":"586","hashOfConfig":"321"},{"size":3497,"mtime":1607873730000,"results":"587","hashOfConfig":"321"},{"size":2369,"mtime":1607873730000,"results":"588","hashOfConfig":"321"},{"size":3918,"mtime":1618850906910,"results":"589","hashOfConfig":"321"},{"size":1512,"mtime":1619009389989,"results":"590","hashOfConfig":"321"},{"size":3015,"mtime":1618758997083,"results":"591","hashOfConfig":"321"},{"size":774,"mtime":1618697951790,"results":"592","hashOfConfig":"321"},{"size":2126,"mtime":1618697846228,"results":"593","hashOfConfig":"321"},{"size":614,"mtime":1607873730000,"results":"594","hashOfConfig":"321"},{"size":5323,"mtime":1618761038868,"results":"595","hashOfConfig":"321"},{"size":5297,"mtime":1619032414591,"results":"596","hashOfConfig":"321"},{"size":708,"mtime":1618850869703,"results":"597","hashOfConfig":"321"},{"size":272,"mtime":1621349997464,"results":"598","hashOfConfig":"321"},{"size":501,"mtime":1618773015404,"results":"599","hashOfConfig":"321"},{"size":949,"mtime":1618774216213,"results":"600","hashOfConfig":"321"},{"size":4846,"mtime":1618778968149,"results":"601","hashOfConfig":"321"},{"size":7467,"mtime":1619433187241,"results":"602","hashOfConfig":"321"},{"size":3050,"mtime":1619393125059,"results":"603","hashOfConfig":"321"},{"size":1564,"mtime":1618914021441,"results":"604","hashOfConfig":"321"},{"size":3261,"mtime":1619390947992,"results":"605","hashOfConfig":"321"},{"size":2685,"mtime":1618928653915,"results":"606","hashOfConfig":"321"},{"size":4827,"mtime":1618928619968,"results":"607","hashOfConfig":"321"},{"size":2908,"mtime":1618837900485,"results":"608","hashOfConfig":"321"},{"size":2428,"mtime":1618837874812,"results":"609","hashOfConfig":"321"},{"size":3953,"mtime":1618903057511,"results":"610","hashOfConfig":"321"},{"size":496,"mtime":1618849547086,"results":"611","hashOfConfig":"321"},{"size":308,"mtime":1618913178276,"results":"612","hashOfConfig":"321"},{"size":259,"mtime":1621350048338,"results":"613","hashOfConfig":"321"},{"size":491,"mtime":1621274496886,"results":"614","hashOfConfig":"321"},{"size":1109,"mtime":1621343713632,"results":"615","hashOfConfig":"321"},{"size":1520,"mtime":1619354385650,"results":"616","hashOfConfig":"321"},{"size":1133,"mtime":1619030743570,"results":"617","hashOfConfig":"321"},{"size":903,"mtime":1619030733635,"results":"618","hashOfConfig":"321"},{"size":483,"mtime":1621350037159,"results":"619","hashOfConfig":"321"},{"size":2393,"mtime":1621273627830,"results":"620","hashOfConfig":"321"},{"size":2721,"mtime":1619354494960,"results":"621","hashOfConfig":"321"},{"size":902,"mtime":1619012034000,"results":"622","hashOfConfig":"321"},{"size":897,"mtime":1619012034000,"results":"623","hashOfConfig":"321"},{"size":1578,"mtime":1619029634332,"results":"624","hashOfConfig":"321"},{"size":818,"mtime":1619029577474,"results":"625","hashOfConfig":"321"},{"size":253,"mtime":1621349988066,"results":"626","hashOfConfig":"321"},{"size":1097,"mtime":1621344456514,"results":"627","hashOfConfig":"321"},{"size":4746,"mtime":1619361531858,"results":"628","hashOfConfig":"321"},{"size":510,"mtime":1619046111721,"results":"629","hashOfConfig":"321"},{"size":795,"mtime":1619367373122,"results":"630","hashOfConfig":"321"},{"size":2041,"mtime":1619366948779,"results":"631","hashOfConfig":"321"},{"size":966,"mtime":1619367056523,"results":"632","hashOfConfig":"321"},{"size":3526,"mtime":1619367683324,"results":"633","hashOfConfig":"321"},{"size":4772,"mtime":1619441517563,"results":"634","hashOfConfig":"321"},{"size":961,"mtime":1619394217123,"results":"635","hashOfConfig":"321"},{"size":863,"mtime":1619435566267,"results":"636","hashOfConfig":"321"},{"size":1289,"mtime":1619389340692,"results":"637","hashOfConfig":"321"},{"size":1239,"mtime":1619388186535,"results":"638","hashOfConfig":"321"},{"size":1389,"mtime":1607873730000,"results":"639","hashOfConfig":"321"},{"size":722,"mtime":1619388902848,"results":"640","hashOfConfig":"321"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},"15zntuw",{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"643"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"643"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"643"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"643"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"643"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"643"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024","usedDeprecatedRules":"643"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029","usedDeprecatedRules":"643"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"643"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043","usedDeprecatedRules":"643"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"643"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051","usedDeprecatedRules":"1052"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1057","usedDeprecatedRules":"643"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"643"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"643"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"643"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"643"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076","usedDeprecatedRules":"1077"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1077"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1088"},"1mrmemh",{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1088"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1077"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1088"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"643"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"643"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"643"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"643"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"643"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1138","usedDeprecatedRules":"643"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1141","usedDeprecatedRules":"643"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1144","usedDeprecatedRules":"643"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"643"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"643"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"643"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"643"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171","usedDeprecatedRules":"643"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1178","usedDeprecatedRules":"643"},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"643"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"643"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"643"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"643"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1203","usedDeprecatedRules":"643"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"643"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1213","usedDeprecatedRules":"643"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1216"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1216"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1221","usedDeprecatedRules":"643"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"643"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"643"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230","usedDeprecatedRules":"643"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1233","usedDeprecatedRules":"643"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1236"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"643"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"643"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"643"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252","usedDeprecatedRules":"643"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"643"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"643"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261","usedDeprecatedRules":"643"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"643"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"643"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"643"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1052"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1281","usedDeprecatedRules":"643"},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"643"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"643"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"643"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"643"},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1310","messages":"1311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312","usedDeprecatedRules":"643"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319","usedDeprecatedRules":"643"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322","usedDeprecatedRules":"643"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1325"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"643"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"643"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1338","usedDeprecatedRules":"643"},{"filePath":"1339","messages":"1340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1341","messages":"1342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1343"},{"filePath":"1344","messages":"1345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1052"},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"643"},"D:\\Projects\\Real\\forex-dashboard\\src\\index.tsx",[],["1352","1353"],"D:\\Projects\\Real\\forex-dashboard\\src\\reportWebVitals.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\App.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\index.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\AuthRoutes.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\store\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\LocaleProvider.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\CremaThemeProvider\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\ContextProvider\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\CremaStyleProvider\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\constants\\AppConst.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\AppContext.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\Utils.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\AppHooks.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\auth\\jwt-auth\\jwt-api.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\auth\\index.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\index.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\index.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\constants\\AppEnums.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\ContextProvider\\ContextReducer.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\ContextProvider\\defaultConfig.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Layouts.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\types\\actions\\Auth.actions.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\jss\\common\\common.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\Common.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\JWTAuth.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\actions\\Setting.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\zh-Hans-CN.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\en-US.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\it_IT.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\fr_FR.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\es_ES.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\localization\\entries\\ar_SA.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\CommonReducer.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\Auth.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\redux\\reducers\\Setting.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Scrollbar\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppSuspense\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Badge\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Loader\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ComponentCard\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppNavLink\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\GridContainer\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\MessageView\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\InfoView\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ComponentHeader\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ContentView\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\types\\actions\\Settings.action.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\types\\actions\\Common.action.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\index.tsx",["1354"],"import React, {useContext} from 'react';\r\nimport AppHeader from './AppHeader';\r\nimport AppSidebar from './AppSidebar';\r\nimport {ContentView, ThemeSetting} from '../../../index';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './index.style';\r\nimport clsx from 'clsx';\r\nimport AppContext from '../../../utility/AppContext';\r\nimport AppFixedFooter from './AppFixedFooter';\r\nimport {LayoutType} from '../../../../shared/constants/AppEnums';\r\nimport AppContextPropsType from '../../../../types/AppContextPropsType';\r\n\r\ninterface StandardLayoutProps {\r\n  props?: any;\r\n}\r\n\r\nconst StandardLayout: React.FC<StandardLayoutProps> = () => {\r\n  const {footer, themeStyle, layoutType, footerType} = useContext<\r\n    AppContextPropsType\r\n  >(AppContext);\r\n  const classes = useStyles({footer, themeStyle});\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(\r\n        classes.appMain,\r\n        layoutType === LayoutType.BOXED ? classes.boxedLayout : '',\r\n        {\r\n          appMainFooter: footer && footerType === 'fluid',\r\n          appMainFixedFooter: footer && footerType === 'fixed',\r\n        },\r\n      )}>\r\n      <AppSidebar />\r\n\r\n      <Box className={classes.mainContent}>\r\n        <Hidden mdDown>\r\n          <Box className={classes.mainContainer}>\r\n            <AppHeader />\r\n            <ContentView />\r\n            <AppFixedFooter />\r\n          </Box>\r\n        </Hidden>\r\n\r\n        <Hidden lgUp>\r\n          <Box className={classes.mainContainerFull}>\r\n            <AppHeader />\r\n            <ContentView />\r\n            <AppFixedFooter />\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n      {/* <ThemeSetting /> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StandardLayout;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\index.tsx",["1355"],"import React, {useContext} from 'react';\r\nimport AppHeader from './AppHeader';\r\nimport AppSidebar from './AppSidebar';\r\nimport {ContentView, ThemeSetting} from '../../../index';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './index.style';\r\nimport AppFixedFooter from './AppFixedFooter';\r\nimport clsx from 'clsx';\r\nimport AppContext from '../../../utility/AppContext';\r\nimport {LayoutType} from '../../../../shared/constants/AppEnums';\r\nimport AppContextPropsType from '../../../../types/AppContextPropsType';\r\n\r\ninterface DefaultLayoutProps {}\r\n\r\nconst DefaultLayout: React.FC<DefaultLayoutProps> = () => {\r\n  const {themeStyle, footer, layoutType, footerType} = useContext<\r\n    AppContextPropsType\r\n  >(AppContext);\r\n  const classes = useStyles({themeStyle, footer});\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(\r\n        classes.appMain,\r\n        layoutType === LayoutType.BOXED ? classes.boxedLayout : '',\r\n        {\r\n          appMainFooter: footer && footerType === 'fluid',\r\n          appMainFixedFooter: footer && footerType === 'fixed',\r\n        },\r\n      )}>\r\n      <AppHeader />\r\n      <Box className={classes.mainContent}>\r\n        <AppSidebar />\r\n\r\n        <Hidden mdDown>\r\n          <Box className={classes.mainContainer}>\r\n            <ContentView />\r\n          </Box>\r\n        </Hidden>\r\n\r\n        <Hidden lgUp>\r\n          <Box className={classes.mainContainerFull}>\r\n            <ContentView />\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n      <AppFixedFooter />\r\n      {/* <ThemeSetting /> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DefaultLayout;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\shared\\constants\\ColorSets.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\AppFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\CustomColorCell.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\utility\\IntlMessages.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\SidebarColorPicker.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\db\\navigationStyle.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\SecondaryColorPicker.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\PrimaryColorPicker.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppErrorBoundary\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppAnimate\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppHeader.tsx",["1356","1357","1358","1359"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport {toggleNavCollapsed} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport HeaderMessages from '../../HeaderMessages';\r\nimport Notifications from '../../Notifications';\r\nimport SearchBar from '../../SearchBar';\r\nimport useStyles from './AppHeader.style';\r\nimport AppLogo from '../../../../shared/components/AppLogo';\r\n\r\ninterface AppHeaderProps {}\r\n\r\nconst AppHeader: React.FC<AppHeaderProps> = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [\r\n    mobileMoreAnchorEl,\r\n    setMobileMoreAnchorEl,\r\n  ] = React.useState<null | HTMLElement>(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMobileMenuOpen(event: React.MouseEvent<HTMLElement>) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}>\r\n      {/* <MenuItem className={classes.menuItemRoot}>\r\n        <HeaderMessages />\r\n      </MenuItem> */}\r\n      <MenuItem className={classes.menuItemRoot}>\r\n        <Notifications />\r\n      </MenuItem>\r\n      {/* <LanguageSwitcher /> */}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar className='app-bar' color='inherit'>\r\n        <Toolbar className={classes.appToolbar}>\r\n          <Hidden lgUp>\r\n            <IconButton\r\n              edge='start'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={() => dispatch(toggleNavCollapsed())}>\r\n              <MenuIcon className={classes.menuIcon} />\r\n            </IconButton>\r\n          </Hidden>\r\n\r\n          {/* <AppLogo /> */}\r\n          <h1 style={{fontSize: '30px', fontWeight: 'bold'}}>Bitcoin Galaxy</h1>\r\n          <Box className={classes.grow} />\r\n          {/* <SearchBar borderLight placeholder='Search…' /> */}\r\n          <Box className={classes.sectionDesktop}>\r\n            {/* <LanguageSwitcher /> */}\r\n            {/* <HeaderMessages /> */}\r\n            <Notifications />\r\n          </Box>\r\n          <Box className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label='show more'\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup='true'\r\n              onClick={handleMobileMenuOpen}\r\n              color='inherit'>\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </>\r\n  );\r\n};\r\nexport default AppHeader;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ThemeSetting\\CustomColorCell.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DefaultLayout\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeaderMini\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorUserInfo.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\NotificationBar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\SearchBar\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Notifications\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\HeaderMessages\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\AppLogo\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\HeaderUser\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\UserInfo\\index.tsx",["1360"],"import React, {useContext, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useDispatch} from 'react-redux';\r\nimport {onJWTAuthSignout} from '../../../redux/actions';\r\nimport {useAuthUser} from '../../../@crema/utility/AppHooks';\r\nimport AppContext from '../../../@crema/utility/AppContext';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Box from '@material-ui/core/Box';\r\nimport {orange} from '@material-ui/core/colors';\r\nimport {Fonts, ThemeMode} from '../../constants/AppEnums';\r\nimport AppContextPropsType from '../../../types/AppContextPropsType';\r\nimport {AuthUser} from '../../../types/models/AuthUser';\r\nimport { withRouter } from 'react-router';\r\nimport UserDetail from 'components/user-profile/UserDetail';\r\nimport EditUser from 'components/user-profile/EditUser';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    crUserInfo: {\r\n      backgroundColor: 'rgba(0,0,0,.08)',\r\n      paddingTop: 9,\r\n      paddingBottom: 9,\r\n      minHeight: 56,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        minHeight: 70,\r\n      },\r\n    },\r\n    profilePic: {\r\n      fontSize: 24,\r\n      backgroundColor: orange[500],\r\n    },\r\n    userInfo: {\r\n      width: 'calc(100% - 75px)',\r\n    },\r\n    userName: {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      fontSize: 16,\r\n      fontWeight: Fonts.MEDIUM,\r\n      color: (props: {themeMode: ThemeMode}) =>\r\n        props.themeMode === ThemeMode.LIGHT ? '#313541' : 'white',\r\n    },\r\n    designation: {\r\n      marginTop: -2,\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      color: 'white',\r\n    },\r\n    pointer: {\r\n      cursor: 'pointer',\r\n    },\r\n  };\r\n});\r\n\r\nconst UserInfo: React.FC<any> = (props) => {\r\n  const {themeMode} = useContext<AppContextPropsType>(AppContext);\r\n  const dispatch = useDispatch();\r\n  const user: AuthUser | null = useAuthUser();\r\n  const [isShowDetail, onShowDetail] = useState<boolean>(false);\r\n  const [isShowEdit, setIsShowEdit] = useState<boolean>(false);\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const subscribeHandler = () => {\r\n    props.history.push(`${process.env.PUBLIC_URL}/subscription`);\r\n    handleClose();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const getUserAvatar = () => {\r\n    if (user && user.displayName) {\r\n      return user.displayName.charAt(0).toUpperCase();\r\n    }\r\n    if (user && user.email) {\r\n      return user.email.charAt(0).toUpperCase();\r\n    }\r\n  };\r\n\r\n  const classes = useStyles({themeMode});\r\n\r\n  const onGoToProfileHandler = () => {\r\n    props.history.push('/profile');\r\n    handleClose();\r\n  }\r\n\r\n\r\n\r\n  const onViewUserDetail = () => {\r\n    onShowDetail(true);\r\n    handleClose();\r\n  };\r\n\r\n  const onOpenEditUser = () => {\r\n    setIsShowEdit(true);\r\n  };\r\n\r\n  const onCloseEditUser = () => {\r\n    setIsShowEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      px={{xs: 4, xl: 7}}\r\n      className={clsx(classes.crUserInfo, 'cr-user-info')}>\r\n      <Box display='flex' alignItems='center'>\r\n        {user && user.profile_photo ? (\r\n          <Avatar\r\n            style={{cursor: 'pointer'}}\r\n            onClick={onViewUserDetail}\r\n            className={classes.profilePic}\r\n            src={user.profile_photo}\r\n          />\r\n        ) : (\r\n          <Avatar\r\n            style={{cursor: 'pointer'}}\r\n            onClick={onViewUserDetail}\r\n            className={classes.profilePic}>\r\n            {getUserAvatar()}\r\n          </Avatar>\r\n        )}\r\n        <Box ml={4} className={clsx(classes.userInfo, 'user-info')}>\r\n          <Box\r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='space-between'>\r\n            <Box mb={0} className={clsx(classes.userName)}>\r\n              {user && (user.displayName ? user.displayName : 'Admin User ')}\r\n            </Box>\r\n\r\n            <EditUser\r\n              isEditUser={isShowEdit}\r\n              handleEditUserClose={onCloseEditUser}\r\n            />\r\n\r\n            <UserDetail\r\n              isShowDetail={isShowDetail}\r\n              onShowDetail={onShowDetail}\r\n              onOpenEditUser={onOpenEditUser}\r\n            />\r\n            <Box\r\n              ml={3}\r\n              className={classes.pointer}\r\n              color={themeMode === 'light' ? '#313541' : 'white'}>\r\n              <ExpandMoreIcon onClick={handleClick} />\r\n              <Menu\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}>\r\n                <MenuItem onClick={onViewUserDetail}>My account</MenuItem>\r\n                <MenuItem onClick={subscribeHandler}>Subscriptions</MenuItem>\r\n                <MenuItem onClick={() => dispatch(onJWTAuthSignout())}>\r\n                  Logout\r\n                </MenuItem>\r\n              </Menu>\r\n            </Box>\r\n          </Box>\r\n          {/* <Box className={classes.designation}>System Manager</Box> */}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserInfo);\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\LanguageSwitcher\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\shared\\components\\AppLogoWhite\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebarToggle\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorLightNav\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\HeaderMessages\\MessageItem.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalNavGroup.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalItem.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalCollapse.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\routesConfig.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\LanguageSwitcher\\data.ts",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalNavGroup.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalItem.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\VerticleNav\\VerticalCollapase.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Notifications\\NotificationItem.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\db\\messages\\messages.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\services\\db\\notifications\\notification.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalCollapse.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalGroup.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalItem.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalGroup.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\ClientPortal.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Navigation\\HorizontalNav\\HorizontalItem.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\UserHeader\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\Error404\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppSidebar.tsx",["1361","1362","1363","1364"],"import React, {useContext} from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport clsx from 'clsx';\r\nimport UserInfo from '../../../../shared/components/UserInfo';\r\nimport Navigation from '../../Navigation/VerticleNav';\r\nimport {toggleNavCollapsed} from '../../../../redux/actions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './AppSidebar.style';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport AppContext from '../../../utility/AppContext';\r\nimport {AppState} from '../../../../redux/store';\r\nimport AppContextPropsType from '../../../../types/AppContextPropsType';\r\nimport {\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  TelegramIcon,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n} from 'react-share';\r\n\r\ninterface AppSidebarProps {\r\n  position?: 'left' | 'bottom' | 'right' | 'top';\r\n  variant?: string;\r\n}\r\n\r\nconst AppSidebar: React.FC<AppSidebarProps> = ({\r\n  position = 'left',\r\n  variant = '',\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {navCollapsed} = useSelector<AppState, AppState['settings']>(\r\n    ({settings}) => settings,\r\n  );\r\n  const {themeMode} = useContext<AppContextPropsType>(AppContext);\r\n  const shareUrl = 'http://crema-react.firebaseapp.com/';\r\n\r\n  const handleToggleDrawer = () => {\r\n    dispatch(toggleNavCollapsed());\r\n  };\r\n  const classes = useStyles({themeMode});\r\n  let sidebarClasses = classes.sidebarStandard;\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor={position}\r\n          open={navCollapsed}\r\n          onClose={() => handleToggleDrawer()}\r\n          classes={{\r\n            root: clsx(variant),\r\n            paper: clsx(variant),\r\n          }}\r\n          style={{position: 'absolute'}}>\r\n          <Box height='100%' className={classes.container}>\r\n            <Box className={clsx(classes.sidebarBg, sidebarClasses)}>\r\n              <UserInfo />\r\n              <Scrollbar className={classes.drawerScrollAppSidebar}>\r\n                <Navigation />\r\n\r\n                <Box className={classes.socialButtons}>\r\n               \r\n                  <LinkedinShareButton url={shareUrl} style={{marginRight: 10}}>\r\n                    <LinkedinIcon size={32} round={true} />\r\n                  </LinkedinShareButton>\r\n                  <FacebookShareButton url={shareUrl} style={{marginRight: 10}}>\r\n                    <FacebookIcon size={32} round={true} />\r\n                  </FacebookShareButton>\r\n                  <TwitterShareButton url={shareUrl}>\r\n                    <TwitterIcon size={30} round={true} />\r\n                  </TwitterShareButton>\r\n                </Box>\r\n              </Scrollbar>\r\n            </Box>\r\n          </Box>\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Box height='100%' className={clsx(classes.container, 'app-sidebar')}>\r\n          <Box className={clsx(classes.sidebarBg, sidebarClasses)}>\r\n            <UserInfo />\r\n            <Scrollbar className={classes.scrollAppSidebar}>\r\n              <Navigation />\r\n              <Box className={classes.socialButtons}>\r\n               \r\n                  <LinkedinShareButton url={shareUrl} style={{marginRight: 10}}>\r\n                    <LinkedinIcon size={32} round={true} />\r\n                  </LinkedinShareButton>\r\n                  <FacebookShareButton url={shareUrl} style={{marginRight: 10}}>\r\n                    <FacebookIcon size={32} round={true} />\r\n                  </FacebookShareButton>\r\n                  <TwitterShareButton url={shareUrl}>\r\n                    <TwitterIcon size={30} round={true} />\r\n                  </TwitterShareButton>\r\n                </Box>\r\n            </Scrollbar>\r\n            <UserInfo />\r\n          </Box>\r\n        </Box>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppHeader.tsx",["1365","1366","1367"],"import React, {useState} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport {toggleNavCollapsed} from '../../../../redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport SearchBar from '../../SearchBar';\r\nimport useStyles from './AppHeader.style';\r\nimport HeaderMessages from '../../HeaderMessages';\r\nimport Notifications from '../../Notifications';\r\nimport AppLogo from '../../../../shared/components/AppLogo';\r\nimport clsx from 'clsx';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\n\r\ninterface AppHeaderProps {}\r\n\r\nconst AppHeader: React.FC<AppHeaderProps> = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [\r\n    mobileMoreAnchorEl,\r\n    setMobileMoreAnchorEl,\r\n  ] = useState<null | HTMLElement>(null);\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMobileMenuOpen(event: React.MouseEvent<HTMLElement>) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n      open={Boolean(mobileMoreAnchorEl)}\r\n      onClose={handleMobileMenuClose}>\r\n      {/* <MenuItem className={classes.menuItemRoot}>\r\n        <HeaderMessages />\r\n      </MenuItem> */}\r\n      <MenuItem className={classes.menuItemRoot}>\r\n        <Notifications />\r\n      </MenuItem>\r\n      {/* <LanguageSwitcher /> */}\r\n    </Menu>\r\n  );\r\n\r\n  const isMobile = useCheckMobileScreen();\r\n\r\n  return (\r\n    <>\r\n      <AppBar color='inherit' className={clsx(classes.appBar, 'app-bar')}>\r\n        <Toolbar className={classes.appToolbar}>\r\n          <Hidden lgUp>\r\n            <IconButton\r\n              edge='start'\r\n              className={classes.menuButton}\r\n              color='inherit'\r\n              aria-label='open drawer'\r\n              onClick={() => dispatch(toggleNavCollapsed())}>\r\n              <MenuIcon className={classes.menuIcon} />\r\n            </IconButton>\r\n          </Hidden>\r\n          <AppLogo />\r\n          {!isMobile && (\r\n            <div style={{fontWeight: 'bold', fontSize: '25px'}}>\r\n              Bitcoin Galaxy\r\n            </div>\r\n          )}\r\n          <Box className={classes.grow} />\r\n          {/* <SearchBar borderLight placeholder='Search…' /> */}\r\n          <Box className={classes.sectionDesktop}>\r\n            {/* <LanguageSwitcher />\r\n            <HeaderMessages /> */}\r\n            <Notifications />\r\n          </Box>\r\n          <Box className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label='show more'\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup='true'\r\n              onClick={handleMobileMenuOpen}\r\n              color='inherit'>\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </>\r\n  );\r\n};\r\nexport default AppHeader;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppFixedFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ComponentCard\\highlightTheme.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\ForgetPassword\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signin\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signup\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDarkLayout\\NotificationBar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\sample\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\Standard\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\MiniSidebar\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\DrawerLayout\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\NotificationBar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppSidebar.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\HorDefault\\AppHeader.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLayout\\BitBucket\\BucketMinibar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\ForgetPassword\\ForgetPasswordJwtAuth.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signup\\SignupJwtAuth.tsx",["1368"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport InfoView from '@crema/core/InfoView';\r\nimport {onJwtUserSignUp} from '../../../redux/actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {GridContainer} from '../../../@crema';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\nimport {useIntl} from 'react-intl';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.LIGHT,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  btnRootFull: {\r\n    width: '100%',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 10,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst SignupFirebase: React.FC<{}> = () => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const {messages} = useIntl();\r\n  const validationSchema = yup.object({\r\n    userName: yup\r\n      .string()\r\n      .required(messages['validation.nameRequired'] as string),\r\n    firstName: yup.string(),\r\n    lastName: yup.string(),\r\n    promotion_code: yup.string(),\r\n    email: yup\r\n      .string()\r\n      .email(messages['validation.emailFormat'] as string)\r\n      .required(messages['validation.emailRequired'] as string),\r\n    password: yup\r\n      .string()\r\n      .required(messages['validation.passwordRequired'] as string)\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n        'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character',\r\n      ),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(messages['validation.reTypePassword'] as string),\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            userName: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            promotion_code: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setErrors, setSubmitting}) => {\r\n            if (data.password !== data.confirmPassword) {\r\n              setErrors({\r\n                confirmPassword: messages[\r\n                  'validation.passwordMisMatch'\r\n                ] as string,\r\n              });\r\n            } else if(data.userName.length < 4) {\r\n              setErrors({\r\n                userName: 'username must be more than 4 characters!'\r\n              });\r\n            }\r\n             \r\n            else {\r\n              setSubmitting(true);\r\n              dispatch(\r\n                onJwtUserSignUp({\r\n                  username: data.userName,\r\n                  first_name: data.firstName,\r\n                  last_name: data.lastName,\r\n                  email: data.email,\r\n                  promotion_code: data.promotion_code,\r\n                  password: data.password,\r\n                }),\r\n              );\r\n              setSubmitting(false);\r\n            }\r\n          }}>\r\n          {({isSubmitting}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label='User Name'\r\n                  name='userName'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label='First Name'\r\n                  name='firstName'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label='Last Name'\r\n                  name='lastName'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label={<IntlMessages id='common.email' />}\r\n                  name='email'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  label='Promotion Code'\r\n                  name='promotion_code'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <GridContainer>\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 0, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.password' />}\r\n                      name='password'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <Box mb={{xs: 3, xl: 4}}>\r\n                    <MyTextField\r\n                      label={<IntlMessages id='common.retypePassword' />}\r\n                      name='confirmPassword'\r\n                      type='password'\r\n                      variant='outlined'\r\n                      className={classes.myTextFieldRoot}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              </GridContainer>\r\n\r\n              <Box\r\n                mb={{xs: 3, xl: 4}}\r\n                display='flex'\r\n                alignItems='center'\r\n                fontSize={15}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Checkbox\r\n                    color='primary'\r\n                    className={classes.checkboxRoot}\r\n                    checked={isChecked}\r\n                    onChange={() => setIsChecked(!isChecked)}\r\n                  />\r\n                  <Box\r\n                    className={classes.textGrey}\r\n                    component='span'\r\n                    mr={2}\r\n                    fontSize={15}>\r\n                    <IntlMessages id='common.iAgreeTo' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  color='primary.main'\r\n                  component='span'\r\n                  fontSize={15}\r\n                  className={classes.pointer}>\r\n                  <IntlMessages id='common.termConditions' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  disabled={!isChecked}\r\n                  className={classes.btnRoot}\r\n                  type='submit'>\r\n                  <IntlMessages id='common.signup' />\r\n                </Button>\r\n\r\n                <Box\r\n                  ml={{sm: 4}}\r\n                  mt={{xs: 3, sm: 0}}\r\n                  color='text.secondary'\r\n                  fontSize={15}>\r\n                  <Box className={classes.textGrey} component='span' mr={1}>\r\n                    <IntlMessages id='common.alreadyHaveAccount' />\r\n                  </Box>\r\n                  <Box component='span'>\r\n                    <Link\r\n                      to={`${process.env.PUBLIC_URL}/signin`}\r\n                      className={clsx(\r\n                        classes.underlineNone,\r\n                        classes.colorTextPrimary,\r\n                      )}>\r\n                      <IntlMessages id='common.signIn' />\r\n                    </Link>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      {/* <Box\r\n        bgcolor={grey[100]}\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        py={{xs: 3, xl: 4}}\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          type='submit'\r\n          className={clsx(classes.btnRoot, classes.btnRootFull)}>\r\n          <IntlMessages id='auth.signupWithJwt' />\r\n        </Button>\r\n      </Box> */}\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupFirebase;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\auth\\Signin\\SigninJwtAuth.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\sample\\Pages\\PageOne.tsx",["1369"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport HelpDesk from 'components/help-desk';\r\n\r\nconst PageOne = () => {\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n       <HelpDesk />\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default PageOne;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\sample\\Pages\\PageTwo.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\Maintenance\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\ComingSoon\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\errorPages\\Error500\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\index.tsx",["1370","1371","1372","1373","1374","1375","1376","1377"],"import { useEffect, useState } from \"react\";\r\n\r\nimport Tickets from \"./tickets/tickets\";\r\nimport CreateTicket from \"./createTicket\";\r\nimport MessageCard from \"./MessageCard\";\r\nimport { useWindowDimensions } from \"../../hooks/hooks\";\r\nimport React from \"react\";\r\nimport MessagesScreen from \"./MessagesScreen\";\r\nimport { useQuery } from \"react-query\";\r\nimport gate from \"gate\";\r\nimport TicketsSection from \"./tickets-section\";\r\n\r\nconst HelpDesk = () => {\r\n  const [page, setPage] = useState('tickets');\r\n    const [ticket, setTicket] = useState(null);\r\n    const { height, width } = useWindowDimensions();\r\n    const [isShowMessage, setIsShowMessage] = useState<boolean>(false);\r\n    const { data }: any = useQuery('tickets', gate.tickets);\r\n\r\n\r\n\r\n  const handleShowMessage = () => {\r\n      setIsShowMessage(!isShowMessage);\r\n  };\r\n\r\n  const onTicketClickHandler = (id: any) => {\r\n    console.log('tickets detail', id);\r\n    setTicket(id);\r\n    setIsShowMessage(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isShowMessage? (\r\n        <TicketsSection\r\n          tickets={data && data}\r\n          onRowClick={onTicketClickHandler}\r\n        />\r\n      ) : (\r\n        <MessagesScreen\r\n          handleShowMessage={handleShowMessage}\r\n          showBackBtn={true}\r\n          ticketNumber={ticket}\r\n        />\r\n      )}\r\n    </>\r\n    // <div className='lg:flex transition-all'>\r\n    //   {width !== null && width >= 1024 ? (\r\n    //     <>\r\n    //       {page === 'tickets' ? (\r\n    //         <Tickets\r\n    //           handleShowMessage={handleShowMessage}\r\n    //           back={() => setPage('create')}\r\n    //           setTickets={(t: any) => setTicket(t)}\r\n    //           ticketId={ticket}\r\n    //           ticketData={data && data?.data}\r\n    //         />\r\n    //       ) : (\r\n    //         <CreateTicket back={() => setPage('tickets')} />\r\n    //       )}\r\n    //       {ticket !== '' && (\r\n    //         <MessagesScreen\r\n    //           handleShowMessage={handleShowMessage}\r\n    //           showBackBtn={false}\r\n    //           ticketNumber={ticket}\r\n    //           selectedUser={{id: 1, name: 'Admin', isOnline: true}}\r\n    //         />\r\n    //       )}\r\n    //     </>\r\n    //   ) : (\r\n    //     <>\r\n    //       {isShowMessage == false && page == 'tickets' ? (\r\n    //         <Tickets\r\n    //           handleShowMessage={handleShowMessage}\r\n    //           back={() => setPage('create')}\r\n    //           setTickets={(t: any) => setTicket(t)}\r\n    //           ticketId={ticket}\r\n    //           ticketData={data && data?.data}\r\n    //         />\r\n    //       ) : (\r\n    //         isShowMessage === false && (\r\n    //           <CreateTicket back={() => setPage('tickets')} />\r\n    //         )\r\n    //       )}\r\n    //       {isShowMessage === true && (\r\n    //         <MessagesScreen\r\n    //           handleShowMessage={handleShowMessage}\r\n    //           showBackBtn={true}\r\n    //           ticketNumber={ticket}\r\n    //           selectedUser={{id: 1, name: 'Admin', isOnline: true}}\r\n    //         />\r\n    //       )}\r\n    //     </>\r\n    //   )}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default HelpDesk;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\hooks\\hooks.ts",["1378","1379","1380"],"import gate from 'gate/index';\r\nimport {useEffect, useState} from 'react';\r\nimport {useQuery} from 'react-query';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nconst useGetSignals = () => {\r\n  return useQuery('signals', gate.getSignals, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetWebsites = () => {\r\n  return useQuery('web-sites', gate.getWbsites, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetSubscriptions = () => {\r\n  return useQuery('user-plans', gate.getSubscriptions, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetPlans = () => {\r\n  return useQuery('plans', gate.getPlans, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetAnalyzes = () => {\r\n  return useQuery('analyzes', gate.getAnalyzes, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetProducts = () => {\r\n  return useQuery('products', gate.getProducts, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetOrders = () => {\r\n  return useQuery('orders', gate.getOrders, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetPromotions = () => {\r\n  return useQuery('promotions', gate.getPromotions, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetWithdraws = () => {\r\n  return useQuery('withdraws', gate.getWithdraws, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useGetUser = () => {\r\n  return useQuery('user', gate.getUser, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\n\r\nconst useGetTableData = () => {\r\n  return useQuery('table-data', gate.getTableData, {\r\n    retry: 1,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n  const hasWindow = typeof window !== 'undefined';\r\n\r\n  function getWindowDimensions() {\r\n    const width = hasWindow ? window.innerWidth : null;\r\n    const height = hasWindow ? window.innerHeight : null;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions(),\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (hasWindow) {\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n\r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [hasWindow]);\r\n\r\n  return windowDimensions;\r\n};\r\n\r\nexport {useWindowDimensions};\r\n\r\nfunction useMutation(\r\n  signIn: any,\r\n  arg1: {onSuccess: (data: any) => void; onError: (data: any) => void},\r\n) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\nexport {\r\n  useGetSignals,\r\n  useGetWebsites,\r\n  useGetAnalyzes,\r\n  useGetUser,\r\n  useGetPlans,\r\n  useGetSubscriptions,\r\n  useGetProducts,\r\n  useGetOrders,\r\n  useGetPromotions,\r\n  useGetWithdraws,\r\n  useGetTableData,\r\n};\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessageCard.tsx",["1381","1382","1383","1384"],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\createTicket.tsx",["1385","1386","1387","1388","1389","1390","1391"],"import gate from 'gate';\r\nimport {useMutation} from 'react-query';\r\nimport React, {FC} from 'react';\r\nimport BackIcon from '@material-ui/icons/NavigateBefore';\r\nimport {\r\n  Button,\r\n  Fab,\r\n  Input,\r\n  TextareaAutosize,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {showError, showMessage} from 'lib';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\nimport { queryClient } from 'App';\r\n\r\nconst validationSchema = yup.object({\r\n  subject: yup.string().required('subject required'),\r\n});\r\n\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      style={{width: '300px'}}\r\n    />\r\n  );\r\n};\r\nconst CreateTicket: FC<any> = (props) => {\r\n  const {mutate: createTicket, isLoading} = useMutation(gate.createTicket);\r\n  const isMobile = useCheckMobileScreen();\r\n\r\n  const onSubmit = (value: any) => {\r\n    createTicket(\r\n      {subject: value?.subject},\r\n      {\r\n        onSuccess: () => {\r\n          showMessage('Your Ticket Has Been Created');\r\n          queryClient.invalidateQueries('tickets');\r\n          props.back();\r\n\r\n        },\r\n        onError: (d: any) => {\r\n          console.log(d);\r\n          showError(d.data, {\r\n            color: 'red',\r\n            gravity: 'bottom',\r\n            position: 'left',\r\n          });\r\n        },\r\n      },\r\n    );\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      validateOnChange={true}\r\n      initialValues={{\r\n        subject: '',\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(data, {setSubmitting, resetForm}) => {\r\n        setSubmitting(true);\r\n        onSubmit(data);\r\n\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}>\r\n      {({isSubmitting}) => (\r\n        <Form\r\n          noValidate\r\n          autoComplete='off'\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            minHeight: '300px',\r\n            background: '#fff',\r\n            borderRadius: '10px',\r\n            // boxShadow: 'rgba(100, 100, 111, 0.2) 0px 7px 29px 0px',\r\n          }}>\r\n          <div>\r\n            <MyTextField\r\n              placeholder='Subject'\r\n              name='subject'\r\n              label='Subject'\r\n              variant='outlined'\r\n              // className='mt-5'\r\n            />\r\n          </div>\r\n          <div style={{marginTop: '2rem'}}>\r\n            <Button\r\n              disabled={isSubmitting}\r\n              variant='contained'\r\n              color='primary'\r\n              type='submit'>\r\n              create ticket\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nexport default CreateTicket;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets\\tickets.tsx",["1392","1393","1394"],"// import { Button, CheckBox } from \"@components/ui\";\r\nimport {FC, useState} from 'react';\r\nimport Moment from 'react-moment';\r\nimport styles from './styles.module.css';\r\nimport React from 'react';\r\nimport {Button, Fab} from '@material-ui/core';\r\nimport {useQuery} from 'react-query';\r\nimport gate from 'gate';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst Tickets: FC<any> = ({\r\n  back,\r\n  setTickets,\r\n  ticketId,\r\n  handleShowMessage,\r\n  ticketData,\r\n}) => {\r\n  const {data}: any = useQuery('tickets', gate.tickets);\r\n  const closedTickets: any = [\r\n    ticketData?.filter((f: any) => f?.complete == true),\r\n  ];\r\n  const [isShowClosedTicket, setIsShowClosedTicket] = useState(false);\r\n  const isMobile = useCheckMobileScreen();\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        background: '#fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 'rgba(100, 100, 111, 0.2) 0px 7px 29px 0px',\r\n      }}\r\n      className='h-screen relative flex-col items-center justify-between flex w-full lg:w-4/12'>\r\n      <div className='overflow-x-hidden left-3 right-3 overscroll-y-auto h-screen absolute hide-scrollbar transition py-5 flex flex-col justify-between'>\r\n        <div className='left-0 right-0'>\r\n          {/* <div className=\"flex items-center my-3\">\r\n                        <CheckBox onChange={() => setIsShowClosedTicket(!isShowClosedTicket)} />\r\n                        <span className=\"text-xs\">Show closed ticket</span>\r\n                    </div> */}\r\n\r\n          {isMobile && (\r\n            <Fab\r\n              size='small'\r\n              color='primary'\r\n              aria-label='add'\r\n              style={{textAlign: 'right'}}\r\n              title='create ticket'>\r\n              <AddIcon onClick={() => back()} />\r\n            </Fab>\r\n          )}\r\n\r\n          {isShowClosedTicket === false &&\r\n            data &&\r\n            data?.data?.map((ticket: any) => (\r\n              <div\r\n                style={{background: '#F4F7FE'}}\r\n                className={`${\r\n                  ticketId === ticket.id && 'border border-gray-200'\r\n                } rounded-lg  p-4 text-sm my-3 cursor-pointer`}\r\n                onClick={() => {\r\n                  setTickets(ticket.id);\r\n                  handleShowMessage();\r\n                }}>\r\n                <div className='flex'>\r\n                  <span className='text-main-green'>{ticket.id} | </span>{' '}\r\n                  <span className='mx-2'>{ticket.subject}</span>\r\n                </div>\r\n                <p className='text-gray-400 font-medium my-3'>\r\n                  {ticket.describe}\r\n                </p>\r\n                <div className='flex justify-between items-center'>\r\n                  <button\r\n                    className={\r\n                      !!ticket.complete\r\n                        ? 'py-2 px-4 rounded-lg bg-green-500 text-white my-2'\r\n                        : 'py-2 px-4 rounded-lg bg-yellow-500 text-white my-2'\r\n                    }>\r\n                    {!!ticket.complete ? 'complete' : 'pending'}\r\n                  </button>\r\n                  <small className='text-gray-400'>\r\n                    <Moment date={ticket.created_at} fromNow />\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {!!isShowClosedTicket &&\r\n            closedTickets?.map((ticket: any) => (\r\n              <div\r\n                className={`${\r\n                  ticketId === ticket.id && 'border border-gray-200'\r\n                } rounded-lg bg-lighten-5 p-4 text-sm my-3 cursor-pointer`}\r\n                onClick={() => {\r\n                  setTickets(ticket.id);\r\n                  handleShowMessage();\r\n                }}>\r\n                <div className='flex'>\r\n                  <span className='text-main-green'>{ticket.id} | </span>{' '}\r\n                  <span className='mx-2'>{ticket.subject}</span>\r\n                </div>\r\n                <p className='text-gray-400 font-medium my-3'>\r\n                  {ticket.describe}\r\n                </p>\r\n                <div className='flex justify-between items-center'>\r\n                  <button className='py-2 px-4 rounded-lg bg-muted my-2'>\r\n                    {!!ticket.complete ? 'complete' : 'pending'}\r\n                  </button>\r\n                  <small className='text-gray-400'>\r\n                    <Moment date={ticket.created_at} fromNow />\r\n                    {ticket.created_at}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        {!isMobile && (\r\n          <div className='top-0 sticky shadow-sm'>\r\n            <Button variant='contained' color='primary' onClick={() => back()}>\r\n              New Ticket\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Tickets;\r\n",["1395","1396"],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\help-desk\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\help-desk\\TicketPage.tsx",["1397"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport HelpDesk from 'components/help-desk';\r\n\r\nconst TicketPage = () => {\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n       <HelpDesk />\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default TicketPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\signals\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\signals\\Page\\Signals.tsx",["1398","1399","1400","1401","1402","1403"],"import { Loader } from '@crema';\r\nimport classNames from 'classnames';\r\nimport Signals from 'components/Signals';\r\nimport SignalCard from 'components/Signals/SignalCard';\r\nimport { useGetSignals } from 'hooks/hooks';\r\nimport React, {FC, useEffect} from 'react';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport styles from './styles.module.css';\r\nconst DashBoardSignals: FC = () => {\r\n  const { data, isLoading, isFetching }: any = useGetSignals();\r\n\r\n  console.log('signals', data)\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? <Loader />: <Signals data={data?.data} /> }  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashBoardSignals;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\shop\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\shop\\shopPage.tsx",["1404"],"import React from 'react';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport Products from 'components/Shop';\r\nimport { useGetProducts } from 'hooks/hooks';\r\nimport { Loader } from '@crema';\r\n\r\nconst ShopPage = () => {\r\n  const {data, isFetching}: any = useGetProducts();\r\n\r\n  console.log('products', data)\r\n  return (\r\n    <>\r\n      {isFetching ? <Loader /> : <Products loding={isFetching} products={data && data?.data} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\index.tsx",["1405","1406","1407"],"import React, { FC } from 'react';\r\nimport ProductListing from './ProductListing';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '../../@crema/core/AppsContainer';\r\nimport ProductsSidebar from './ProductsSidebar';\r\n\r\nconst Products: FC<any> = ({products, loding, isOrder}) => {\r\n  return <ProductListing loding={loding} products={products} isOrder={isOrder} />;\r\n};\r\n\r\nexport default Products;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\index.tsx",["1408","1409","1410","1411","1412","1413","1414","1415"],"import React, {FC, useContext, useEffect, useState} from 'react';\r\nimport AppsHeader from '../../../@crema/core/AppsContainer/AppsHeader';\r\nimport ProductHeader from '../ProductHeader';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport BitcoinPic from '../../../assets/images/Bitcoin.png';\r\n// import {VIEW_TYPE} from '../../../../redux/reducers/Ecommerce';\r\nimport ProductGrid from './ProductGrid';\r\n// import {\r\n//   onGetEcommerceData,\r\n//   setFilters,\r\n// } from '../../../../redux/actions/Ecommerce';\r\nimport AppsContent from '../../../@crema/core/AppsContainer/AppsContent';\r\nimport {Box, fade} from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport {AppContext} from '../../../@crema';\r\nimport {AppState} from '../../../redux/store';\r\nimport { useGetProducts } from 'hooks/hooks';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > div': {\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProductListing: FC<any> = ({products, loding, isOrder}) => {\r\n  const [productsData, setProductsData] = useState(products)\r\n  const { mutate: searchProducts, data }: any = useMutation(gate.searchProducts);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const {theme} = useContext(AppContext);\r\n  \r\n\r\n  const searchProduct = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('title', e.target.value);\r\n      searchProducts(e.target.value)\r\n      \r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if(data)\r\n    setProductsData(data?.data);\r\n  }, [data])\r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n      <AppsHeader>\r\n        <ProductHeader\r\n          isOrder={isOrder}\r\n          viewType={'Grid'}\r\n          onChange={searchProduct}\r\n        />\r\n      </AppsHeader>\r\n\r\n      {/* <AppsContent style={{backgroundColor: 'red'}}> */}\r\n        <Box className={classes.root} flex={1} display='flex' p={2} height={1}>\r\n          <ProductGrid\r\n            isOrder={isOrder}\r\n            ecommerceList={isOrder ? products : productsData}\r\n            loading={loding}\r\n          />\r\n        </Box>\r\n      {/* </AppsContent> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListing;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\index.tsx",["1416","1417","1418","1419","1420","1421","1422","1423","1424"],"import React, {useEffect, useState} from 'react';\r\nimport ProductsCategory from './ProductsCategory';\r\nimport {Box} from '@material-ui/core';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport PriceSelector from './PriceSelector';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Scrollbar from '../../../@crema/core/Scrollbar';\r\nimport AppList from '../../../@crema/core/AppList';\r\nimport CheckedCell from './CheckedCell';\r\n// import {\r\n//   brandData,\r\n//   discountList,\r\n//   idealFor,\r\n//   productColors,\r\n// } from '../../../@crema/services/db/ecommerce/ecommerceData';\r\nimport AppGrid from '../../../@crema/core/AppGrid';\r\nimport ColorCell from './ColorCell';\r\nimport RatingCell from './RatingCell';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n// import {setFilters} from '../../../../redux/actions/Ecommerce';\r\nimport {AppState} from '../../../redux/store';\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    marginTop: 16,\r\n  },\r\n});\r\nconst ProductSidebar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // const {filterData} = useSelector<AppState, AppState['ecommerce']>(\r\n  //   ({ecommerce}) => ecommerce,\r\n  // );\r\n  // const [selectedBrand, setSelectedBrand] = useState<number[]>(\r\n  //   filterData.brand,\r\n  // );\r\n  // const [selectedFor, setSelectedFor] = useState<number[]>(filterData.ideaFor);\r\n  // const [selectedDiscount, setSelectedDiscount] = useState<number[]>(\r\n  //   filterData.discount,\r\n  // );\r\n  // const [selectedColor, setSelectedColor] = useState<any[]>(filterData.color);\r\n  // const [customerRating, setCustomerRating] = useState<any[]>(\r\n  //   filterData.rating,\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(\r\n  //   //   setFilters({\r\n  //   //     title: filterData.title,\r\n  //   //     brand: selectedBrand,\r\n  //   //     ideaFor: selectedFor,\r\n  //   //     discount: selectedDiscount,\r\n  //   //     color: selectedColor,\r\n  //   //     rating: customerRating,\r\n  //   //   }),\r\n  //   // );\r\n  // }, [\r\n  //   dispatch,\r\n  //   filterData.title,\r\n  //   selectedBrand,\r\n  //   selectedFor,\r\n  //   selectedDiscount,\r\n  //   selectedColor,\r\n  //   customerRating,\r\n  // ]);\r\n\r\n  // const onSelectBrand = (brandId: any) => {\r\n  //   if (selectedBrand.some(brand => brand === brandId)) {\r\n  //     setSelectedBrand(selectedBrand.filter(brand => brand !== brandId));\r\n  //   } else {\r\n  //     setSelectedBrand(selectedBrand.concat(brandId));\r\n  //   }\r\n  // };\r\n\r\n  // const onSelectFor = (id: any) => {\r\n  //   if (selectedFor.some(item => item === id)) {\r\n  //     setSelectedFor(selectedFor.filter(item => item !== id));\r\n  //   } else {\r\n  //     setSelectedFor(selectedFor.concat(id));\r\n  //   }\r\n  // };\r\n\r\n  // const onSelectDiscount = (id: any) => {\r\n  //   if (selectedDiscount.some(item => item === id)) {\r\n  //     setSelectedDiscount(selectedDiscount.filter(item => item !== id));\r\n  //   } else {\r\n  //     setSelectedDiscount(selectedDiscount.concat(id));\r\n  //   }\r\n  // };\r\n\r\n  // const onSelectColor = (color: any) => {\r\n  //   if (selectedColor.some(item => item === color)) {\r\n  //     setSelectedColor(selectedColor.filter(item => item !== color));\r\n  //   } else {\r\n  //     setSelectedColor(selectedColor.concat(color));\r\n  //   }\r\n  // };\r\n\r\n  // const onSelectRating = (id: any) => {\r\n  //   if (customerRating.some(item => item === id)) {\r\n  //     setCustomerRating(customerRating.filter(item => item !== id));\r\n  //   } else {\r\n  //     setCustomerRating(customerRating.concat(id));\r\n  //   }\r\n  // };\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      name: '60% or more',\r\n    },\r\n\r\n    {\r\n      id: 2,\r\n      name: '50% or more',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '40% or more',\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      name: '30% or more',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: '20% or more',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Scrollbar className='scroll-app-sidebar'>\r\n      <Box p={6}>\r\n        <Box component='h5' mb={2} fontWeight={Fonts.MEDIUM}>\r\n          Filter By\r\n        </Box>\r\n        <div style={{marginTop: '1rem'}}></div>\r\n        <Box color='text.secondary' mb={4} fontWeight={Fonts.MEDIUM}>\r\n          CATEGORIES\r\n        </Box>\r\n\r\n        <ProductsCategory />\r\n        <Divider className={classes.divider} />\r\n        <Box color='text.secondary' my={4} fontWeight={Fonts.MEDIUM}>\r\n          DISCOUNT\r\n          <AppList\r\n            data={data}\r\n            renderRow={data => (\r\n              <CheckedCell\r\n                key={data.id}\r\n                data={data}\r\n                onChange={() => {}}\r\n                selected={[]}\r\n              />\r\n            )}\r\n          />\r\n        </Box>\r\n        <Divider className={classes.divider} />\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n};\r\n\r\nexport default ProductSidebar;\r\n",["1425","1426"],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppsHeader.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppsContent.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\ProductsCategory.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\PriceSelector.tsx",[],["1427","1428"],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\ColorCell.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\CheckedCell.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductsSidebar\\RatingCell.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\index.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppSidebar.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductGrid\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductHeader\\index.tsx",["1429","1430","1431","1432"],"import React from 'react';\r\nimport {Box, Hidden} from '@material-ui/core';\r\nimport AppSearch from '../../../@crema/core/SearchBar';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport {useDispatch} from 'react-redux';\r\n// import {setViewType} from '../../../../redux/actions/Ecommerce';\r\n// import {VIEW_TYPE} from '../../../../redux/reducers/Ecommerce';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\ninterface ProductHeaderProps {\r\n  onChange: (value: string) => void;\r\n  viewType: any;\r\n  isOrder?: Boolean;\r\n}\r\n\r\nconst ProductHeader: React.FC<ProductHeaderProps> = ({\r\n  onChange,\r\n  viewType,\r\n  isOrder,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box display='flex' flex={1} alignItems='center'>\r\n      <Box display='flex' flex={1}>\r\n        <Box fontWeight={Fonts.BOLD} mr={3}>\r\n          {isOrder ? 'My Orders' : 'Products'}\r\n        </Box>\r\n        <Hidden only='xs'>\r\n          <Box component='span'>\r\n            {/* (Showing 1 – 40 products of 93,723 products) */}\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n      <Box display='flex' alignItems='center'>\r\n        {!isOrder && (\r\n          <AppSearch\r\n            placeholder='Search here'\r\n            onKeyDown={onChange}    \r\n          />\r\n        )}\r\n        {/* <IconButton onClick={() => {}}>\r\n          <ListIcon\r\n            color={viewType === 'LIST' ? 'primary' : 'inherit'}\r\n          />\r\n        </IconButton>\r\n        <IconButton onClick={() => {}}>\r\n          <AppsIcon\r\n            color={viewType === 'GRID' ? 'primary' : 'inherit'}\r\n          />\r\n        </IconButton> */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductHeader;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppGrid\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductGrid\\GridItem.tsx",["1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport {Button, Checkbox, makeStyles} from '@material-ui/core';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {green} from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../../shared/constants/AppEnums';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {CremaTheme} from '../../../../types/AppContextPropsType';\r\nimport {useMutation} from 'react-query';\r\nimport gate from 'gate';\r\nimport {queryClient} from 'App';\r\nimport {showError, showMessage} from 'lib';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n  lineThrough: {\r\n    textDecoration: 'line-through',\r\n  },\r\n  textBase: {\r\n    fontSize: 16,\r\n  },\r\n  textSm: {\r\n    fontSize: 14,\r\n  },\r\n  textXs: {\r\n    fontSize: 12,\r\n  },\r\n  textRes: {\r\n    fontSize: 12,\r\n    [theme.breakpoints.up('xl')]: {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  btn: {\r\n    fontWeight: Fonts.MEDIUM,\r\n    padding: '4px 12px',\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\ninterface GridItemProps {\r\n  item: any;\r\n  isOrder?: boolean;\r\n  onClick?: any;\r\n}\r\n\r\nconst GridItem: React.FC<GridItemProps> = ({item, isOrder, onClick}) => {\r\n  const accessToken = localStorage.getItem('token');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    mutate: buyProduct,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.buyProduct);\r\n\r\n  const onBuyItemHandler = () => {\r\n    console.log('productID', item.id);\r\n    buyProduct(\r\n      {product: item.id},\r\n      {\r\n        onSuccess: (d: any) => {\r\n          console.log(d);\r\n          showMessage('You Successfully Bought The Item');\r\n        },\r\n        onError: (d: any) => {\r\n          console.log(d);\r\n          showError(d.data, {\r\n            color: 'red',\r\n            gravity: 'bottom',\r\n            position: 'left',\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box\r\n      p={5}\r\n      m={2}\r\n      style={{borderRadius: '20px', minHeight: '300px'}}\r\n      className='pointer item-hover'\r\n      clone>\r\n      <Card>\r\n        <Box mt={2} mb={5} display='flex' justifyContent='center'>\r\n          <div\r\n            style={{\r\n              position: 'relative',\r\n              marginBottom: '0.2rem',\r\n            }}\r\n            onClick={() => onClick(item)}>\r\n            <img\r\n              style={{\r\n                minWidth: '350px',\r\n                marginTop: '-30px',\r\n                maxHeight: '200px',\r\n              }}\r\n              src={item?.photo}\r\n              alt='watch'\r\n            />\r\n          </div>\r\n        </Box>\r\n        <div style={{padding: '5px'}}>\r\n          <Box\r\n            mb={1}\r\n            color='text.primary'\r\n            fontWeight={Fonts.BOLD}\r\n            fontSize={16}\r\n            component='h3'\r\n            className={classes.truncate}>\r\n            {item?.title}\r\n          </Box>\r\n\r\n          <Box\r\n            mb={10}\r\n            mr={6}\r\n            color='text.secondary'\r\n            className={clsx(classes.truncate, classes.textSm)}>\r\n            {item?.description}\r\n          </Box>\r\n\r\n          <Box\r\n            mx={-1}\r\n            display='flex'\r\n            // flexWrap='wrap'\r\n            alignItems='center'\r\n            fontWeight={Fonts.MEDIUM}\r\n            justifyContent='space-between'\r\n            className={classes.textRes}>\r\n            <Box px={1} mb={2} component='span' color='text.primary'>\r\n              $ {item?.discount_price ? item?.discount_price : +item?.price}\r\n            </Box>\r\n\r\n            {item?.discount_price && (\r\n              <Box\r\n                px={1}\r\n                mb={2}\r\n                component='span'\r\n                color='text.disabled'\r\n                className={classes.lineThrough}>\r\n                ${item?.price}\r\n              </Box>\r\n            )}\r\n            {item?.discount_price && (\r\n              <Box px={1} mb={2} component='span' color={green[500]}>\r\n                {Math.floor(\r\n                  ((item?.price - item?.discount_price) / item?.price) * 100,\r\n                )}\r\n                % <IntlMessages id='ecommerce.off' />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <hr></hr>\r\n        </div>\r\n        {!isOrder ? (\r\n          <Button\r\n            onClick={onBuyItemHandler}\r\n            color='primary'\r\n            variant='contained'\r\n            fullWidth={true}\r\n            style={{marginTop: '1rem'}}>\r\n            Buy Now\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            color='primary'\r\n            variant='contained'\r\n            fullWidth={true}\r\n            style={{marginTop: '1rem'}}>\r\n            <a href={`${item?.file}/?token=${accessToken}`} target='_blank'>\r\n              Download File\r\n            </a>\r\n          </Button>\r\n        )}\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GridItem;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\ListEmptyResult.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\ListView.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppList\\ListFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppGrid\\GridView.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppGrid\\GridFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppAnimateGroup\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Signals\\SignalCard\\index.tsx",["1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464"],"import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport moment from 'moment';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport {Button, Checkbox, makeStyles} from '@material-ui/core';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {green} from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\nimport Modal from 'components/UI/Modal';\r\nimport { AppState } from 'redux/store';\r\nimport gate from 'gate';\r\nimport { useMutation } from 'react-query';\r\nimport { queryClient } from 'App';\r\nimport { showError } from 'lib';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n  lineThrough: {\r\n    textDecoration: 'line-through',\r\n  },\r\n  textBase: {\r\n    fontSize: 16,\r\n  },\r\n  textSm: {\r\n    fontSize: 14,\r\n  },\r\n  textXs: {\r\n    fontSize: 12,\r\n  },\r\n  textRes: {\r\n    fontSize: 12,\r\n    [theme.breakpoints.up('xl')]: {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  btn: {\r\n    fontWeight: Fonts.MEDIUM,\r\n    padding: '4px 12px',\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst SignalCard: React.FC<any> = ({item, onClick}) => {\r\n  const dispatch = useDispatch();\r\n  const {id} = useSelector((state: any) => state.auth.user);\r\n  const history = useHistory();\r\n  const [isParticipated, setIsParticipated] = useState<any>('start');\r\n  const {\r\n    mutate: reqParticipate,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.reqParticipate);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onParticipateHandler = () => {\r\n    reqParticipate(\r\n      {id: item.id},\r\n      {\r\n        onSuccess: (d: any) => {\r\n          console.log(d);\r\n          queryClient.invalidateQueries('signals');\r\n        },\r\n        onError: (d: any) => {\r\n          console.log(d);\r\n          showError(d.data, {\r\n            color: 'red',\r\n            gravity: 'bottom',\r\n            position: 'left',\r\n          });\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <Box\r\n      p={5}\r\n      m={2}\r\n      style={{borderRadius: '20px'}}\r\n      className='pointer item-hover'\r\n      clone>\r\n      <Card>\r\n        <Box display='flex' justifyContent='center'>\r\n          <div style={{position: 'relative', marginBottom: '0.2rem'}}>\r\n            <img\r\n              onClick={() => onClick(item)}\r\n              style={{\r\n                minWidth: '350px',\r\n                marginTop: '-20px',\r\n                maxHeight: '200px',\r\n              }}\r\n              src={item.image}\r\n              alt='watch'\r\n            />\r\n            <div>\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  bottom: 35,\r\n                  left: '16%',\r\n                  fontSize: '18px',\r\n                  fontWeight: 'bold',\r\n                  color: '#fff',\r\n                }}>\r\n                {moment(item?.signal_date).format('MMMM, Do, YYYY, h:mm:ss')}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  bottom: 5,\r\n                  left: '16%',\r\n                  fontSize: '15px',\r\n                  color: '#fff',\r\n                }}>\r\n                {item?.subtitle}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Box>\r\n        <hr></hr>\r\n\r\n        <Box\r\n          mb={1}\r\n          mt={4}\r\n          color={\r\n            item?.status === 'WON'\r\n              ? 'green'\r\n              : item?.status === 'PENDING'\r\n              ? '#F1CD15'\r\n              : 'red'\r\n          }\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={16}\r\n          component='h3'\r\n          className={classes.truncate}\r\n          style={{textAlign: 'center'}}>\r\n          {item?.status}\r\n        </Box>\r\n\r\n        <Box\r\n          mb={1}\r\n          color='#000'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={18}\r\n          component='h1'\r\n          className={classes.truncate}\r\n          style={{textAlign: 'center'}}>\r\n          Banckroll {item?.bankroll_percent}$\r\n        </Box>\r\n\r\n        <Box\r\n          mb={1}\r\n          color='#000'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={18}\r\n          component='h1'\r\n          className={classes.truncate}\r\n          style={{textAlign: 'center'}}>\r\n          {item?.odd} %\r\n        </Box>\r\n\r\n        <Box\r\n          mb={1}\r\n          mt={4}\r\n          color='text.primary'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={16}\r\n          component='h3'\r\n          className={classes.truncate}>\r\n          {item?.title}\r\n        </Box>\r\n\r\n        <Box\r\n          mb={3}\r\n          mr={6}\r\n          color='text.secondary'\r\n          className={clsx(classes.truncate, classes.textSm)}>\r\n          {item?.description}\r\n        </Box>\r\n\r\n        <hr></hr>\r\n        {/* <Box\r\n          mb={4}\r\n          mt={4}\r\n          color='gray'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={13}\r\n          component='h1'\r\n          className={classes.truncate}\r\n          style={{textAlign: 'center'}}>\r\n          {moment(item?.created_at, 'YYYYMMDD').fromNow()}\r\n        </Box>\r\n        <hr></hr>\r\n        <Box\r\n          mx={-1}\r\n          display='flex'\r\n          // flexWrap='wrap'\r\n          alignItems='center'\r\n          fontWeight={Fonts.MEDIUM}\r\n          justifyContent='space-between'\r\n          className={classes.textRes}>\r\n          {!item?.users?.includes(id) ? (\r\n            <>\r\n              {' '}\r\n              <Button\r\n                onClick={onParticipateHandler}\r\n                color='primary'\r\n                variant='contained'\r\n                // fullWidth={true}\r\n                style={{marginTop: '1rem'}}>\r\n                Yes\r\n              </Button>\r\n              <Button\r\n                onClick={() => setIsParticipated(false)}\r\n                color='secondary'\r\n                variant='contained'\r\n                // fullWidth={true}\r\n                style={{marginTop: '1rem'}}>\r\n                No\r\n              </Button>{' '}\r\n            </>\r\n          ) : item?.users?.includes(id) ? (\r\n            <Button\r\n              variant='contained'\r\n              fullWidth={true}\r\n              style={{marginTop: '1rem', background: '#00AA45', color: '#fff'}}>\r\n              Participated\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              color='secondary'\r\n              variant='contained'\r\n              fullWidth={true}\r\n              style={{marginTop: '1rem'}}>\r\n              Not Participated\r\n            </Button>\r\n          )}\r\n        </Box> */}\r\n        {/* <Button\r\n          color='primary'\r\n          variant='contained'\r\n          fullWidth={true}\r\n          style={{marginTop: '1rem'}}>\r\n          Buy Now\r\n        </Button> */}\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignalCard;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Signals\\index.tsx",["1465","1466"],"import AppGrid from '@crema/core/AppGrid';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport React, {FC, useState} from 'react';\r\nimport AppsContainer from '../../@crema/core/AppsContainer';\r\nimport SignalCard from './SignalCard';\r\nimport Bitcoin from 'assets/images/trade.png';\r\nimport Modal from 'components/UI/Modal';\r\nimport SignalDetails from './SihnalDetails';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\n\r\nconst Signals: FC<any> = ({data}) => {\r\n  const [signal, setSignal] = useState<any>(null);\r\n  const [showModal, setShowModal] = useState<any>(false);\r\n\r\n  const handleSignalClick = (item: any) => {\r\n    console.log('signal click', item);\r\n    setSignal(item);\r\n    setShowModal(true);\r\n  };\r\n\r\n  console.log('showModal', showModal);\r\n\r\n  const isMobile = useCheckMobileScreen();\r\n\r\n  console.log({isMobile});\r\n\r\n  return (\r\n    <>\r\n      <AppGrid\r\n        delay={200}\r\n        responsive={{\r\n          xs: 1,\r\n          sm: 2,\r\n          md: 3,\r\n          lg: 4,\r\n          xl: 4,\r\n        }}\r\n        data={data}\r\n        renderRow={(item) => (\r\n          <SignalCard onClick={handleSignalClick} item={item} key={item.id} />\r\n        )}\r\n        ListEmptyComponent={\r\n          <ListEmptyResult content='No item found' loading={false} />\r\n        }\r\n      />\r\n      <Modal\r\n        visible={showModal}\r\n        isFullScreen={isMobile}\r\n        onClose={() => setShowModal(false)}\r\n        modalTitle={signal?.title}>\r\n        <SignalDetails signal={signal} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signals;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\analyses\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\analyses\\analysePage.tsx",["1467","1468","1469","1470"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport HelpDesk from 'components/help-desk';\r\nimport Products from 'components/Shop';\r\nimport AnalyzesRequests from 'components/Analyzes';\r\nimport {useGetAnalyzes} from 'hooks/hooks';\r\nimport { Loader } from '@crema';\r\n\r\nconst AnalyzePage = () => {\r\n  const {data, isFetching}: any = useGetAnalyzes();\r\n\r\n  console.log('analyzes', data);\r\n  return (\r\n    <>\r\n      {isFetching? <Loader /> : <AnalyzesRequests data={data?.data} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyzePage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\websites\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\websites\\WebsitesPages.tsx",["1471"],"import React from 'react';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport WebSites from 'components/web-sites';\r\nimport { useGetWebsites } from 'hooks/hooks';\r\nimport { Loader } from '@crema';\r\n\r\nconst WebSitesPage = () => {\r\n  const { data, isFetching }: any = useGetWebsites();\r\n\r\n  console.log('websites', data)\r\n  return (\r\n    <>\r\n      {isFetching ? <Loader /> : <WebSites data={data?.data} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WebSitesPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\web-sites\\index.tsx",["1472"],"import AppGrid from '@crema/core/AppGrid';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport React, { FC } from 'react';\r\nimport Bitcoin from 'assets/images/Bitcoin.png';\r\nimport WebSiteCard from './WebSiteCard';\r\n\r\nconst WebSites: FC<any> = ({data}) => {\r\n  return (\r\n    <AppGrid\r\n      delay={200}\r\n      responsive={{\r\n        xs: 1,\r\n        sm: 3,\r\n        lg: 4,\r\n        xl: 4,\r\n      }}\r\n      data={data}\r\n      renderRow={(item) => <WebSiteCard item={item} key={item.id} />}\r\n      ListEmptyComponent={\r\n        <ListEmptyResult content='No item found' loading={false} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default WebSites;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\web-sites\\WebSiteCard\\index.tsx",["1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487"],"import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport {Button, Checkbox, makeStyles} from '@material-ui/core';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {green} from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n  lineThrough: {\r\n    textDecoration: 'line-through',\r\n  },\r\n  textBase: {\r\n    fontSize: 16,\r\n  },\r\n  textSm: {\r\n    fontSize: 14,\r\n  },\r\n  textXs: {\r\n    fontSize: 12,\r\n  },\r\n  textRes: {\r\n    fontSize: 12,\r\n    [theme.breakpoints.up('xl')]: {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  btn: {\r\n    fontWeight: Fonts.MEDIUM,\r\n    padding: '4px 12px',\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nconst WebSiteCard: React.FC<any> = ({item}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [isParticipated, setIsParticipated] = useState<any>('start');\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box\r\n      p={5}\r\n      m={2}\r\n      style={{borderRadius: '20px'}}\r\n      className='pointer item-hover'\r\n      clone>\r\n      <Card>\r\n        <Box mt={2} mb={5} display='flex' justifyContent='space-between'>\r\n          <Box\r\n            component='span'\r\n            maxHeight={28}\r\n            width={48}\r\n            color='primary.contrastText'\r\n            // bgcolor={green[500]}\r\n            py={1}\r\n            px={2}\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            fontWeight={Fonts.MEDIUM}\r\n            borderRadius={8}\r\n            className={classes.textSm}>\r\n            {/* 4\r\n            <Box component='span' ml={1}>\r\n              <StarBorderIcon className={classes.textBase} />\r\n            </Box> */}\r\n          </Box>\r\n          <div style={{position: 'relative', marginBottom: '0.5rem'}}>\r\n            <img src={item?.photo} alt={item?.name} />\r\n          </div>\r\n        </Box>\r\n        <hr></hr>\r\n\r\n        <Box\r\n          mb={1}\r\n          mt={1}\r\n          color='#000'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={20}\r\n          component='h3'\r\n          className={classes.truncate}\r\n          style={{textAlign: 'center'}}>\r\n          {item?.name}\r\n        </Box>\r\n\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          fullWidth={true}\r\n          style={{marginTop: '1rem'}}>\r\n          <a href={item?.url} target='_blank'>\r\n            Join Now\r\n          </a>\r\n        </Button>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default WebSiteCard;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chart\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chart\\ChartPage.tsx",["1488","1489","1490"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport HelpDesk from 'components/help-desk';\r\nimport Products from 'components/Shop';\r\nimport Chart from 'components/Chart';\r\n\r\nconst ChartPage = () => {\r\n\r\n  const sampleData =  { \r\n    dataOne: [\r\n      {month: 'Jan', number: 150},\r\n      {month: 'Feb', number: 280},\r\n      {month: 'Mar', number: 180},\r\n      {month: 'Apr', number: 290},\r\n      {month: 'May', number: 190},\r\n      {month: 'Jun', number: 320},\r\n      {month: 'Jul', number: 240},\r\n      {month: 'Aug', number: 300},\r\n      {month: 'Sep', number: 270},\r\n      {month: 'Oct', number: 350},\r\n      {month: 'Nov', number: 280},\r\n      {month: 'Dec', number: 380},\r\n    ],\r\n    dataTwo: [\r\n      {month: 'Jan', number: 20},\r\n      {month: 'Feb', number: 170},\r\n      {month: 'Mar', number: 40},\r\n      {month: 'Apr', number: 200},\r\n      {month: 'May', number: 70},\r\n      {month: 'Jun', number: 270},\r\n      {month: 'Jul', number: 100},\r\n      {month: 'Aug', number: 310},\r\n      {month: 'Sep', number: 130},\r\n      {month: 'Oct', number: 350},\r\n      {month: 'Nov', number: 170},\r\n      {month: 'Dec', number: 200},\r\n    ],\r\n    dataThree: [\r\n      {month: 'Jan', number: 110},\r\n      {month: 'Feb', number: 230},\r\n      {month: 'Mar', number: 100},\r\n      {month: 'Apr', number: 290},\r\n      {month: 'May', number: 160},\r\n      {month: 'Jun', number: 320},\r\n      {month: 'Jul', number: 220},\r\n      {month: 'Aug', number: 450},\r\n      {month: 'Sep', number: 260},\r\n      {month: 'Oct', number: 490},\r\n      {month: 'Nov', number: 240},\r\n      {month: 'Dec', number: 200},\r\n    ],\r\n  };\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n       <Chart data={sampleData} />\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default ChartPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chart\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chart\\StaticsGraph.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppCard\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppSelect\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chat\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\chat\\chatPage.tsx",["1491","1492","1493"],"import React, {useEffect} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport Chat from 'components/Chat';\r\nimport {w3cwebsocket as W3CWebSocket} from 'websocket';\r\n\r\nconst ChatPage = () => {\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <Chat />\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\index.tsx",["1494","1495","1496","1497"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport ChatContent from './ChatContent';\r\nimport {useIntl} from 'react-intl';\r\nimport AppsContainer from '../../@crema/core/AppsContainer';\r\n\r\nconst Chat: React.FC<any> = () => {\r\n  return <ChatContent />;\r\n};\r\n\r\nexport default Chat;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\index.tsx",["1498","1499","1500"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useSelector} from 'react-redux';\r\nimport MessagesScreen from './MessagesScreen';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\nimport {AppState} from '../../../redux/store';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  messagesScreenRoot: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  scrollChatNoUser: {\r\n    fontSize: 18,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    height: 'calc(100vh - 169px) !important',\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: 20,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '3rem',\r\n      color: '#BDBDBD',\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '5rem',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatContent = () => {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.messagesScreenRoot}>\r\n        <MessagesScreen selectedUser={{id:1, name: 'Chat Room', isOnline: true}} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\index.tsx",["1501","1502","1503","1504","1505","1506","1507","1508","1509"],"import React, {useEffect, useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport AddNewMessage from './AddNewMessage';\r\nimport MessagesList from './MessagesList';\r\nimport {useAuthUser} from '../../../../@crema/utility/AppHooks';\r\nimport moment from 'moment';\r\nimport Header from './Header';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport AppsHeader from '../../../../@crema/core/AppsContainer/AppsHeader';\r\nimport {useAppsContentStyles} from '../../../../@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '../../../../@crema/core/AppsContainer/AppsFooter';\r\nimport {w3cwebsocket as W3CWebSocket} from 'websocket';\r\n\r\n\r\nimport {AppState} from '../../../../redux/store';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  scrollChatNomain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    height: '100% !important',\r\n  },\r\n  noMessage: {\r\n    fontSize: 18,\r\n    color: grey[500],\r\n  },\r\n}));\r\n\r\ninterface MessagesScreenProps {\r\n  selectedUser: any;\r\n}\r\n\r\nconst MessagesScreen: React.FC<MessagesScreenProps> = ({selectedUser}) => {\r\n  const accessToken = localStorage.getItem('token');\r\n  const client = new W3CWebSocket(\r\n    `ws://157.175.55.250:8001/ws/?token=${accessToken}`,\r\n  );\r\n  const [message, setMessage] = useState<string | undefined>('');\r\n  const [messages, setMessages] = useState<any>([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useAuthUser();\r\n\r\n  let _scrollBarRef: any = null;\r\n  useEffect(() => {\r\n    // dispatch(getConnectionMessages(selectedUser.channelId));\r\n  }, [dispatch, selectedUser]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      messages &&\r\n      messages?.length > 0\r\n    ) {\r\n      if (_scrollBarRef) {\r\n        _scrollBarRef._container.scrollTop = 99999;\r\n      }\r\n    }\r\n  }, [messages, _scrollBarRef]);\r\n\r\n  useEffect(() => {\r\n    function connect() {\r\n\r\n      const sendNotif = () => {\r\n        const data = { 'action': 'subscribe' };\r\n        if (client.readyState == 1) {\r\n            client.send(JSON.stringify(data));\r\n        }\r\n    };\r\n\r\n\r\n      client.onopen = function () {\r\n        console.log('chatroom Connected');\r\n        sendNotif();\r\n      };\r\n      client.onerror = function () {\r\n        console.log('chatroom error');\r\n        setTimeout(function () {\r\n          sendNotif();\r\n        }, 1000);\r\n      };\r\n\r\n      client.onmessage = function (message: any) {\r\n        const msg = JSON.parse(message.data);\r\n        setMessages((prev: any) => [...prev, msg]);\r\n        // console.log(msg);\r\n      };\r\n\r\n      client.onclose = function (e) {\r\n        console.log({e});\r\n        if (e.wasClean == true) {\r\n          console.log(\r\n            'chatroom is closed. Reconnect will be attempted in 2 second.',\r\n            e.reason,\r\n          );\r\n        } else {\r\n          setTimeout(function () {\r\n            connect();\r\n          }, 2000);\r\n        }\r\n      };\r\n      setTimeout(() => {\r\n        console.log(client.readyState)\r\n      }, 2000);\r\n    }\r\n\r\n    connect();\r\n  }, [])\r\n\r\n\r\n\r\n  const sendFileMessage = (fileMessage: any) => {\r\n    // const data: any = {\r\n    //   ...fileMessage,\r\n    //   time: moment().format('llll'),\r\n    // };\r\n    // dispatch(onSendMessage(selectedUser.channelId, data));\r\n  };\r\n\r\n  const onSend = (message: string) => {\r\n    // const data: any = {\r\n    //   message,\r\n    //   message_type: MessageType.TEXT,\r\n    //   sender: 'sender_id',\r\n    //   time: moment().format('llll'),\r\n    // };\r\n\r\n    // if (isEdit) {\r\n    //   data.edited = true;\r\n    //   dispatch(onEditMessage(selectedUser.channelId, data));\r\n    //   setMessage('');\r\n    //   setIsEdit(false);\r\n    // } else {\r\n    //   dispatch(onSendMessage(selectedUser.channelId, data));\r\n    //   setMessage('');\r\n    // }\r\n\r\n \r\n    const data = {action: 'send-message', message: {message}};\r\n    client.send(JSON.stringify(data));\r\n    // console.log({message})\r\n  };\r\n\r\n  const onClickEditMessage = (data: any) => {\r\n    // if (data.message_type === MessageType.TEXT) {\r\n    //   setIsEdit(true);\r\n    //   setMessage(data.message);\r\n    // }\r\n  };\r\n\r\n  const deleteMessage = (messageId: number) => {\r\n    // dispatch(onDeleteMessage(selectedUser.channelId, messageId));\r\n  };\r\n\r\n  const deleteConversation = () => {\r\n    // dispatch(onDeleteConversation(selectedUser.channelId));\r\n  };\r\n\r\n  const appsContentStyles = useAppsContentStyles({\r\n    isDetailView: false,\r\n    fullView: false,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Box style={{minWidth: '70%'}} display='flex' height={1} flexDirection='column'>\r\n      <AppsHeader>\r\n        <Header\r\n          selectedUser={selectedUser}\r\n          deleteConversation={deleteConversation}\r\n        />\r\n      </AppsHeader>\r\n\r\n      {messages && user ? (\r\n        <PerfectScrollbar\r\n          ref={ref => {\r\n            _scrollBarRef = ref;\r\n          }}\r\n          className={appsContentStyles.appsContentContainer}>\r\n          <MessagesList\r\n            userMessages={messages}\r\n            authUser={user}\r\n            selectedUser={selectedUser}\r\n            onClickEditMessage={onClickEditMessage}\r\n            deleteMessage={deleteMessage}\r\n          />\r\n        </PerfectScrollbar>\r\n      ) : (\r\n        <Box\r\n          className={clsx(classes.scrollChatNomain, 'scroll-chat-nomain')}\r\n          component='span'>\r\n          <Box component='span' className={classes.noMessage}>\r\n            <IntlMessages id='chatApp.sayHi' /> {selectedUser.name}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <AppsFooter mt='auto'>\r\n        <AddNewMessage\r\n          currentMessage={message}\r\n          sendFileMessage={sendFileMessage}\r\n          onSendMessage={onSend}\r\n        />\r\n      </AppsFooter>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessagesScreen;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\AddNewMessage.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\MessagesList.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\Header.tsx",["1510","1511","1512","1513","1514","1515","1516"],"import React, {useState} from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Checkbox, IconButton, makeStyles} from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ConfirmationDialog from '../../../../@crema/core/ConfirmationDialog';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .user-info': {\r\n      width: '100%',\r\n    },\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\ninterface HeaderProps {\r\n  selectedUser: any;\r\n  deleteConversation: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({selectedUser, deleteConversation}) => {\r\n  const [isMoreIcon, onOpenMoreIcon] = useState(null);\r\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n  const onViewMoreOpen = (event: any) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const toggleDeleteDialog = () => {\r\n    setDeleteDialogOpen(!isDeleteDialogOpen);\r\n  };\r\n\r\n  const onDeleteConversation = () => {\r\n    deleteConversation();\r\n    toggleDeleteDialog();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box width={1} display='flex' alignItems='center' className={classes.root}>\r\n      <UserInfo user={selectedUser} showStatus={true} />\r\n      {/* <Box ml='auto' display='flex' alignItems='center'>\r\n        <Box mr={{sm: 4}} component='span' color='text.disabled'>\r\n          <Checkbox icon={<StarBorderIcon />} checkedIcon={<StarIcon />} />\r\n        </Box>\r\n\r\n        <Tooltip title={<IntlMessages id='common.more' />}>\r\n          <Box ml={2} component='span' color='text.disabled'>\r\n            <IconButton onClick={onViewMoreOpen}>\r\n              <MoreVertIcon className={classes.pointer} />\r\n            </IconButton>\r\n          </Box>\r\n        </Tooltip>\r\n      </Box> */}\r\n\r\n      <Menu\r\n        anchorEl={isMoreIcon}\r\n        open={Boolean(isMoreIcon)}\r\n        onClose={onViewMoreClose}>\r\n        <MenuItem onClick={toggleDeleteDialog}>\r\n          <IntlMessages id='chatApp.deleteConversation' />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <IntlMessages id='chatApp.mute' />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <IntlMessages id='chatApp.hide' />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      {isDeleteDialogOpen ? (\r\n        <ConfirmationDialog\r\n          open={isDeleteDialogOpen}\r\n          onDeny={setDeleteDialogOpen}\r\n          onConfirm={onDeleteConversation}\r\n          title={<IntlMessages id='chatApp.deleteTitle' />}\r\n          dialogTitle={<IntlMessages id='chatApp.deleteContent' />}\r\n        />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsContainer\\AppsFooter.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\SenderMessageItem.tsx",["1517","1518","1519","1520","1521","1522","1523","1524","1525"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport useStyles from './MessageItem.style';\r\nimport IntlMessages from '../../../../@crema/utility/IntlMessages';\r\nimport {getFileSize} from '../../../../@crema/utility/Utils';\r\nimport Moment from 'react-moment';\r\n\r\nconst getMessage = (item: any, classes: any) => {\r\n  return (\r\n    <Box component='p' mb={1} ml={3}>\r\n      {item?.message?.message}\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface SenderMessageItemProps {\r\n  item: any;\r\n  authUser: any;\r\n  onClickEditMessage: (item: any) => void;\r\n  deleteMessage: (id: any) => void;\r\n}\r\n\r\nconst SenderMessageItem: React.FC<SenderMessageItemProps> = ({\r\n  authUser,\r\n  item,\r\n  onClickEditMessage,\r\n  deleteMessage,\r\n}) => {\r\n  const [isMoreIcon, onOpenMoreIcon] = React.useState(null);\r\n\r\n  const onViewMoreOpen = (event: any) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const getUserAvatar = () => {\r\n    const name = authUser.displayName;\r\n    if (name) {\r\n      return name.charAt(0).toUpperCase();\r\n    }\r\n    if (authUser.email) {\r\n      return authUser.email.charAt(0).toUpperCase();\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.messageItemRoot, 'right')}\r\n      display='flex'\r\n      justifyContent={'flex-end'}>\r\n      <Box className={classes.messageChatRoot}>\r\n        <Box\r\n          className={clsx(classes.messageTime, 'message-time')}\r\n          component='span'>\r\n          <Moment date={item?.time} fromNow />\r\n        </Box>\r\n\r\n        <Box display='flex' flexDirection='row' justifyContent='flex-end'>\r\n          {/* {item.message_type === 'TEXT' && item.media && (\r\n            <Box className='pointer' component='span' mt='auto'>\r\n              <a href={item.media!.url} download={item.media!.file_name}>\r\n                <img alt='' src={'/assets/images/icon-download.svg'} />\r\n              </a>\r\n            </Box>\r\n          )} */}\r\n          <Box className={classes.messageChat} ml='auto'>\r\n            {authUser.profile_photo ? (\r\n              <Avatar\r\n                className={classes.profilePic}\r\n                src={authUser?.profile_photo}\r\n              />\r\n            ) : (\r\n              <Avatar className={classes.profilePic}>{getUserAvatar()}</Avatar>\r\n            )}\r\n            <Box className='message-info'>\r\n              {getMessage(item, classes)}\r\n\r\n              {item.edited && (\r\n                <Box className={classes.editRoot}>\r\n                  <EditIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box className={classes.arrowIcon}>\r\n        {/* <Box\r\n          ml={2}\r\n          className={classes.textPointer}\r\n          component='span'\r\n          color='text.disabled'>\r\n          <MoreVertIcon onClick={onViewMoreOpen} />\r\n        </Box> */}\r\n\r\n        {/* <Menu\r\n          anchorEl={isMoreIcon}\r\n          open={Boolean(isMoreIcon)}\r\n          onClose={onViewMoreClose}>\r\n          {item.message_type === 'TEXT' ? (\r\n            <MenuItem\r\n              onClick={() => {\r\n                onViewMoreClose();\r\n                onClickEditMessage(item);\r\n              }}>\r\n              <IntlMessages id='common.edit' />\r\n            </MenuItem>\r\n          ) : null}\r\n          <MenuItem\r\n            onClick={() => {\r\n              onViewMoreClose();\r\n              deleteMessage(item.id);\r\n            }}>\r\n            <IntlMessages id='common.delete' />\r\n          </MenuItem>\r\n        </Menu> */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SenderMessageItem;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\ReceiverMessageItem.tsx",["1526","1527"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport clsx from 'clsx';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport useStyles from './MessageItem.style';\r\nimport {getFileSize} from '../../../../@crema/utility/Utils';\r\nimport Moment from 'react-moment';\r\nimport { ConvertBuffer } from 'lib';\r\n\r\n\r\nconst getMessage = (item: any, classes: any) => {\r\n  return (\r\n    <Box component='p' mb={1} ml={3}>\r\n      {item?.message?.message}\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface ReceiverMessageItemProps {\r\n  selectedUser: any;\r\n  item: any;\r\n}\r\n\r\nconst ReceiverMessageItem: React.FC<ReceiverMessageItemProps> = ({\r\n  selectedUser,\r\n  item,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  console.log(ConvertBuffer(item?.user?.profile_photo))\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.messageItemRoot, 'left')}\r\n      display='flex'\r\n      justifyContent={'flex-start'}>\r\n      <Box className={classes.messageChatRoot}>\r\n        <Box\r\n          className={clsx(classes.messageTime, 'message-time')}\r\n          component='span'>\r\n          <Moment date={item?.time} fromNow />\r\n        </Box>\r\n        <Box display='flex' flexDirection='row'>\r\n          <Box className={classes.messageChat}>\r\n            {item?.user?.profile_photo ? (\r\n              <Avatar\r\n                className={classes.profilePic}\r\n                src={ConvertBuffer(item?.user?.profile_photo)}\r\n              />\r\n            ) : (\r\n              <Avatar className={classes.profilePic}>\r\n                {item?.user?.username?.charAt(0).toUpperCase()}\r\n              </Avatar>\r\n            )}\r\n            <Box className='message-info'>\r\n              {getMessage(item, classes)}\r\n\r\n              {item.edited && (\r\n                <Box className={classes.editRoot}>\r\n                  <EditIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n          {/* {item.message_type === 'TEXT' ? null : (\r\n            <Box className='pointer' component='span' mt='auto'>\r\n              <a href={item.media!.url} download={item.media!.file_name}>\r\n                <img alt='' src={'/assets/images/icon-download.svg'} />\r\n              </a>\r\n            </Box>\r\n          )} */}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReceiverMessageItem;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\UserInfo.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Chat\\ChatContent\\MessagesScreen\\MessageItem.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\ConfirmationDialog\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\gate\\index.ts",["1528"],"\r\nimport jwtAxios, { file } from '@crema/services/auth/jwt-auth/jwt-api';\r\n\r\n\r\nconst Common = {\r\n  paginateApi: ({url}: any) => jwtAxios.get(url),\r\n}\r\n\r\n\r\nconst Signals = {\r\n  getSignals: () => jwtAxios.get('signals/'),\r\n  getSiganlsById: (id: any) => jwtAxios.get(`signals/${id}/`),\r\n  reqParticipate: ({id}: any) => jwtAxios.post(`/signals/${id}/participate/`),\r\n};\r\n\r\nconst Websites = {\r\n  getWbsites: () => jwtAxios.get('websites/'), \r\n};\r\n\r\nconst Analyzes = {\r\n  getAnalyzes: () => jwtAxios.get('analyses/'), \r\n  postAnalyze: (data: any) => jwtAxios.post(`analyses/`,data),\r\n};\r\n\r\nconst User = {\r\n  getUser: () => jwtAxios.get('user/'), \r\n  updateUser: (data: any) => jwtAxios.put('user/', data), \r\n  getSubscriptions: () => jwtAxios.get('subscriptions/'),\r\n  reqSubscription: (data: any) => jwtAxios.post('subscriptions/', data),\r\n};\r\n\r\nconst Plans = {\r\n  getPlans: () => jwtAxios.get('plans/'), \r\n};\r\n\r\nconst tickets = {\r\n  createTicket: (data:any) => jwtAxios.post(`tickets/`,data),\r\n  tickets: () => jwtAxios.get<any[] | undefined>(`tickets/?limit=3&offset=0`),\r\n  ticket: (id: number) => jwtAxios.get(`/tickets/${id}/?name=tickets-detail`),\r\n  messages: (ticketId: any) => jwtAxios.get(`/messages/?ticket=${ticketId}`),\r\n  sendMessages: (data: any) => file(`/messages/`,data,\"post\"),\r\n  sendTextMessages: (data: any) => jwtAxios.post(`/messages/`,data),\r\n  complateTicket: ({id,data}: any) => file(`/tickets/${id}/?name=tickets-detail`,data,\"put\"),\r\n}\r\n\r\nconst Comments = {\r\n  postCommnet : (data: any) => jwtAxios.post(`comments/`,data),\r\n  actionCommnet : (data: any) => jwtAxios.post(`comments/${data.id}/${data.action}`),\r\n}\r\n\r\nconst Orders = {\r\n  getProducts: () => jwtAxios.get('shop/products/'), \r\n  searchProducts: (data: any) => jwtAxios.get(`shop/products/?search=${data}`), \r\n  buyProduct: (data:any) => jwtAxios.post(`shop/orders/`,data),\r\n  getOrders: () => jwtAxios.get('shop/orders/'), \r\n}\r\n\r\nconst Promotions = {\r\n  getPromotions: () => jwtAxios.get('promotions/'), \r\n}\r\n\r\nconst Withdraws = {\r\n  getWithdraws: () => jwtAxios.get('withdraws/'),\r\n  reqWithdraws: (data: any) => jwtAxios.post('withdraws/', data),\r\n};\r\n\r\nconst Table = {\r\n  getTableData: () => jwtAxios.get('tables/'),\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  ...Common,\r\n  ...Signals,\r\n  ...Websites,\r\n  ...Analyzes,\r\n  ...User,\r\n  ...Plans,\r\n  ...tickets,\r\n  ...Comments,\r\n  ...Orders,\r\n  ...Promotions,\r\n  ...Withdraws,\r\n  ...Table,\r\n};\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\index.tsx",["1529","1530","1531","1532","1533","1534","1535"],"import React, { useState } from 'react';\r\nimport AppCard from '../../@crema/core/AppCard';\r\nimport {useIntl} from 'react-intl';\r\nimport AppSelect from '../../@crema/core/AppSelect';\r\nimport AnalyzesTable from './AnalyzesTable';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Modal from 'components/UI/Modal';\r\nimport NewAnalyze from './NewAnalyze';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate/index';\r\nimport { showError } from 'lib';\r\nimport { queryClient } from 'App';\r\nimport AnalyzeDetail from './AnalyzeDetail';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\n\r\n\r\ninterface AnalyzesRequestsProps {\r\n  data: any;\r\n}\r\n\r\nconst AnalyzesRequests: React.FC<AnalyzesRequestsProps> = ({data}) => {\r\n  const {messages} = useIntl();\r\n  const {\r\n    mutate: newAnalyze,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.postAnalyze);\r\n  const [analyzeDetailData, setAnalyzeDetailData] = useState<any>(null);\r\n  const [showModal, setShowModal] = useState<any>(false);\r\n  const [showDetailModal, setShowDetailModal] = useState<any>(false);\r\n  const isMobile= useCheckMobileScreen();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n  const handleSelectionType = (data: unknown) => {\r\n    console.log('data: ', data);\r\n  };\r\n  const classes = useStyles();\r\n  \r\n  const onNewAnalyzeRequest = (data: any) => {\r\n     console.log('formrrr', data);\r\n     newAnalyze(\r\n      { title: data.title, description: data.description},\r\n      {\r\n          onSuccess: (d: any) => {\r\n              console.log(d);\r\n              queryClient.invalidateQueries('analyzes'); \r\n              setShowModal(false);\r\n          },\r\n          onError: (d: any) => {\r\n              console.log(d);\r\n              showError(d.data, { color: 'red', gravity: 'bottom', position: 'left' });\r\n          },\r\n      },\r\n  );\r\n  }\r\n\r\n  const onTableRowClickHandler = (data: any) => {\r\n    console.log('table data', data);\r\n    setAnalyzeDetailData(data);\r\n    setShowDetailModal(true);\r\n  }\r\n\r\n  return (\r\n    <AppCard\r\n      contentStyle={{paddingLeft: 0, paddingRight: 0}}\r\n      title='Analyze Requests'\r\n      action={\r\n        // <AppSelect\r\n        //   menus={[\r\n        //     messages['dashboard.thisWeek'],\r\n        //     messages['dashboard.lastWeeks'],\r\n        //     messages['dashboard.lastMonth'],\r\n        //   ]}\r\n        //   defaultValue={messages['dashboard.thisWeek']}\r\n        //   onChange={handleSelectionType}\r\n        // />\r\n\r\n        <Fab\r\n          size='small'\r\n          color='primary'\r\n          aria-label='add'\r\n          title='New Analyze Request'\r\n          className={classes.margin}>\r\n          <AddIcon onClick={() => setShowModal(true)} />\r\n        </Fab>\r\n      }>\r\n      <AnalyzesTable onTableRowClick={onTableRowClickHandler} analyzesData={data} />\r\n      <Modal\r\n        visible={showModal}\r\n        maxWidth='sm'\r\n        onClose={() => setShowModal(false)}\r\n        modalTitle='New Analyze Request'>\r\n        <NewAnalyze handleSubmit={onNewAnalyzeRequest} />\r\n      </Modal>\r\n\r\n      <Modal\r\n        visible={showDetailModal}\r\n        maxWidth='md'\r\n        isFullScreen={isMobile}\r\n        onClose={() => setShowDetailModal(false)}\r\n        modalTitle={analyzeDetailData?.title}>\r\n        <AnalyzeDetail data={analyzeDetailData} />\r\n      </Modal>\r\n    </AppCard>\r\n  );\r\n};\r\n\r\nexport default AnalyzesRequests;\r\n\r\n\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppTableContainer\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppMenu\\index.tsx",["1536"],"import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Box} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst options = ['View More'];\r\n\r\ninterface AppMenuProps {}\r\n\r\nconst AppMenu: React.FC<AppMenuProps> = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <IconButton\r\n        style={{height: 30, width: 30}}\r\n        aria-label='more'\r\n        onClick={handleClick}>\r\n        {/* <MoreVertIcon /> */}\r\n      </IconButton>\r\n      <Menu\r\n        id='long-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}>\r\n        {options.map(option => (\r\n          <MenuItem\r\n            key={option}\r\n            selected={option === 'Pyxis'}\r\n            onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppMenu;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Modal\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Signals\\SihnalDetails\\index.tsx",["1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548"],"import { Divider } from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Review from 'components/Reviews';\r\nimport React, {FC, useState} from 'react';\r\nimport styles from './styles.module.css';\r\nimport {\r\n  Magnifier,\r\n  MOUSE_ACTIVATION,\r\n  TOUCH_ACTIVATION\r\n} from \"react-image-magnifiers\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport gate from 'gate';\r\nimport { queryClient } from 'App';\r\nimport { showError } from 'lib';\r\n\r\n\r\nconst SignalDetails: FC<any> = ({signal}) => {\r\n  const [expanded, setExpanded] = useState<boolean>(true);\r\n  const {\r\n    mutate: newComment,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.postCommnet);\r\n  const {data, isLoading: signalLoading}: any = useQuery(\r\n    'signal-id',\r\n    () => gate.getSiganlsById(signal?.id),\r\n    {\r\n      retry: 1,\r\n    },\r\n  );\r\n  const signalData = data && data?.data;\r\n  \r\n  const onPostNewComment = (data: any) => {\r\n    console.log('comment data', data);\r\n    newComment(\r\n      { title: data.title, description: data.description, signal: signalData?.id},\r\n      {\r\n          onSuccess: (d: any) => {\r\n              console.log(d);\r\n              queryClient.invalidateQueries('signal-id'); \r\n          },\r\n          onError: (d: any) => {\r\n              console.log(d);\r\n              showError(d.data, { color: 'red', gravity: 'bottom', position: 'left' });\r\n          },\r\n      },\r\n  );\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <a href={signalData?.image} target='_blank'>\r\n        <img\r\n          className={styles.image}\r\n          src={signalData?.image}\r\n          alt={signalData?.title}\r\n        />\r\n      </a>\r\n      <div style={{margin: '2rem 0'}}>\r\n        <Accordion expanded={expanded} onClick={() => setExpanded(!expanded)}>\r\n          <AccordionSummary\r\n            style={{marginTop: '1.5rem'}}\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel1a-content'\r\n            id='panel1a-header'>\r\n            <Typography style={{fontSize: '22px', fontWeight: 'bold'}}>\r\n              Description\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography className={styles.desc}>\r\n              {signalData?.description}\r\n            </Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </div>\r\n      <Review\r\n        isLoading={signalLoading}\r\n        handleSubmitNewComment={onPostNewComment}\r\n        comments={signalData?.comments}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignalDetails;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Reviews\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Reviews\\ReviewCell.tsx",["1549","1550","1551","1552"],"import React, { FC } from 'react';\r\nimport {Box} from '@material-ui/core';\r\nimport {Fonts} from '../../shared/constants/AppEnums';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Moment from 'react-moment';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate';\r\nimport { showError } from 'lib';\r\nimport { queryClient } from 'App';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  logo: {\r\n    height: 50,\r\n    width: 50,\r\n    overflow: 'hidden',\r\n  },\r\n}));\r\n\r\nconst ReviewCell: FC<any> = ({item}) => {\r\n  const {\r\n    mutate: actionCommnet,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.actionCommnet);\r\n  console.log({item});\r\n  \r\n  const classes = useStyles();\r\n\r\n  const onLikeComment = () => {\r\n    if(!item.user_liked) {\r\n      actionCommnet(\r\n        {id: item?.id, action: 'like'},\r\n        {\r\n          onSuccess: (d: any) => {\r\n            console.log(d);\r\n            queryClient.invalidateQueries('signal-id');\r\n          },\r\n          onError: (d: any) => {\r\n            console.log(d);\r\n            showError(d.data, {\r\n              color: 'red',\r\n              gravity: 'bottom',\r\n              position: 'left',\r\n            });\r\n          },\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  const onDislikeComment = () => {\r\n    if(!item.user_disliked) {\r\n      actionCommnet(\r\n        {id: item?.id, action: 'dislike'},\r\n        {\r\n          onSuccess: (d: any) => {\r\n            console.log(d);\r\n            queryClient.invalidateQueries('signal-id');\r\n          },\r\n          onError: (d: any) => {\r\n            console.log(d);\r\n            showError(d.data, {\r\n              color: 'red',\r\n              gravity: 'bottom',\r\n              position: 'left',\r\n            });\r\n          },\r\n        },\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      display='flex'\r\n      className='item-hover'\r\n      alignItems='center'\r\n      px={4}\r\n      py={3}\r\n      justifyContent='space-between'>\r\n      <Box display='flex'>\r\n        <Avatar\r\n          className={classes.logo}\r\n          alt='user image'\r\n          src={item?.user?.profile_photo}\r\n        />\r\n\r\n        <Box flex={1} ml={4}>\r\n          <Box\r\n            component='h3'\r\n            color='text.primary'\r\n            display='flex'\r\n            mb={2}\r\n            fontWeight={Fonts.BOLD}\r\n            alignItems='center'\r\n            fontSize={14}>\r\n            <Box\r\n              component='span'\r\n              color='white'\r\n              bgcolor='#388E3C'\r\n              width={34}\r\n              mr={2}\r\n              px={2}\r\n              display='flex'\r\n              alignItems='center'\r\n              height={18}\r\n              borderRadius={10}\r\n              fontSize={12}>\r\n              5 <StarRateIcon style={{fontSize: 16}} />\r\n            </Box>\r\n            {item?.user?.username}\r\n          </Box>\r\n          <Box component='p' fontSize={14} color='text.secondary'>\r\n            {item?.description}\r\n          </Box>\r\n          <Box component='p' fontSize={12} color='text.hint'>\r\n            <Moment date={item?.created_at} fromNow />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display='flex'\r\n        position='absolute'\r\n        bottom={2}\r\n        right={2}\r\n        flexDirection='row'\r\n        color='#737989'\r\n        alignItems='center'\r\n        fontSize={14}>\r\n        <IconButton\r\n          onClick={onLikeComment}\r\n          style={{marginRight: 5, height: 25, width: 25}}>\r\n          <ThumbUpAltIcon\r\n            style={{fontSize: 16, color: item?.user_liked && '#0A8FDC'}}\r\n          />\r\n        </IconButton>\r\n        {item?.likes_count}\r\n        <IconButton\r\n          onClick={onDislikeComment}\r\n          style={{marginRight: 5, marginLeft: 15, height: 25, width: 25}}>\r\n          <ThumbDownIcon\r\n            style={{fontSize: 16, color: item?.user_disliked && '#F04F47'}}\r\n          />\r\n        </IconButton>\r\n        {item?.dislikes_count}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default ReviewCell;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppCircularProgress\\index.tsx",[],["1553","1554"],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppLinearProgress\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\NewAnalyze\\index.tsx",["1555"],"import IntlMessages from '@crema/utility/IntlMessages';\r\nimport {Box, Button, TextField} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {CremaTheme} from 'types/AppContextPropsType';\r\nimport { Fonts } from 'shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 24,\r\n    },\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.REGULAR,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  btnRootFull: {\r\n    width: '100%',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 16,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 32,\r\n    },\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\nconst validationSchema = yup.object({\r\n  title: yup.string().required('title required'),\r\n  description: yup.string().required('description required'),\r\n});\r\n\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst NewAnalyze = (props: any) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            title: '',\r\n            description: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting}) => {\r\n            setSubmitting(true);\r\n            props.handleSubmit(data);\r\n            setSubmitting(false);\r\n          }}>\r\n          {({isSubmitting}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  placeholder='Title'\r\n                  name='title'\r\n                  label='Title'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 3, lg: 4}}>\r\n                <MyTextField\r\n                  placeholder='Description'\r\n                  label='Description'\r\n                  name='description'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                  multiline\r\n                  rows=\"5\"\r\n                />\r\n              </Box>\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  type='submit'\r\n                  disabled={isSubmitting}\r\n                  className={classes.btnRoot}>\r\n                  Send Request\r\n                </Button>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewAnalyze;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\lib\\index.ts",["1556"],"import jwtAxios from '@crema/services/auth/jwt-auth/jwt-api';\r\nimport Toastify from 'toastify-js';\r\n\r\nexport const isEmpty = (obj: any) => {\r\n  if (obj === null || obj === '' || obj === undefined) return true;\r\n  if (!Object.entries(obj).length) return true;\r\n  return false;\r\n};\r\n\r\nexport const showError = (\r\n  data: any,\r\n  config = {gravity: 'bottom', position: 'center', color: '#ff4154'},\r\n) => {\r\n  if (data) {\r\n    Object.keys(data).forEach((key) => {\r\n      Toastify({\r\n        text: data[key],\r\n        duration: 3000,\r\n        newWindow: true,\r\n        close: true,\r\n        gravity: config?.gravity, // `top` or `bottom`\r\n        position: config?.position, // `left`, `center` or `right`\r\n        backgroundColor: config?.color,\r\n        stopOnFocus: true, // Prevents dismissing of toast on hover\r\n      }).showToast();\r\n    });\r\n  } else return;\r\n};\r\n\r\nexport const showMessage = (\r\n  data: any,\r\n  config = {gravity: 'top', position: 'right', color: '#6A4CCD'},\r\n) => {\r\n  if (data) {\r\n    Toastify({\r\n      text: data,\r\n      duration: 3000,\r\n      newWindow: true,\r\n      close: true,\r\n      gravity: config?.gravity, // `top` or `bottom`\r\n      position: config?.position, // `left`, `center` or `right`\r\n      backgroundColor: config?.color,\r\n      stopOnFocus: true, // Prevents dismissing of toast on hover\r\n    }).showToast();\r\n  } else return;\r\n};\r\n\r\n\r\nexport const ConvertBuffer = (buffer: any) => {\r\n  const host = 'http://157.175.55.250:8001';\r\n  return host + buffer;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\UserDetail\\index.tsx",["1557","1558","1559","1560"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {Scrollbar} from '../../../@crema';\r\nimport Box from '@material-ui/core/Box';\r\nimport ContactActions from './ContactActions';\r\nimport PersonalDetails from './PersonalDetails';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport { useGetUser } from 'hooks/hooks';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  dialogBox: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      maxWidth: 600,\r\n      width: '100%',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n      fontWeight: Fonts.LIGHT,\r\n    },\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  avatar: {\r\n    width: 55,\r\n    height: 55,\r\n    marginBottom: 8,\r\n  },\r\n  borderBottomClass: {\r\n    borderBottom: `1px solid ${grey[300]}`,\r\n  },\r\n}));\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {children?: React.ReactElement<any, any>},\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nconst UserDetail: React.FC<any> = ({\r\n  isShowDetail,\r\n  onShowDetail,\r\n  onOpenEditUser,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const classes = useStyles();\r\n\r\n  const {data, isFetching}: any = useGetUser();\r\n\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isShowDetail}\r\n        onClose={() => onShowDetail(false)}\r\n        TransitionComponent={Transition}\r\n        aria-labelledby='simple-modal-title'\r\n        aria-describedby='simple-modal-description'\r\n        className={classes.dialogBox}>\r\n        <Scrollbar>\r\n          <Box p={5} className={classes.borderBottomClass}>\r\n            <ContactActions\r\n              onOpenEditUser={onOpenEditUser}\r\n              // user={contact!}\r\n            />\r\n            <Box\r\n              mt={{sm: -3}}\r\n              display='flex'\r\n              flexDirection='column'\r\n              alignItems='center'>\r\n              {data && data?.data?.profile_photo ? (\r\n                <Avatar className={classes.avatar} src={data?.data?.profile_photo} />\r\n              ) : (\r\n                <Avatar className={classes.avatar}>\r\n                  {data?.data?.username?.toUpperCase()}\r\n                </Avatar>\r\n              )}\r\n              <Box component='h4' fontWeight={Fonts.MEDIUM}>\r\n                {data?.data?.username}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box py={5} pl={{xs: 8, lg: 8, lx: 10}}>\r\n            <Scrollbar style={{maxHeight: 400}}>\r\n              <PersonalDetails userData={data && data?.data} />\r\n            </Scrollbar>\r\n          </Box>\r\n        </Scrollbar>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDetail;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\UserDetail\\ContactActions.tsx",["1561","1562"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AppsStarredIcon from '../../../@crema/core/AppsStarredIcon';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst ContactActions: React.FC<any> = ({\r\n  onOpenEditUser,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display='flex' justifyContent='flex-end' alignItems='center'>\r\n      <Box ml={2}>\r\n        <EditIcon\r\n          className={classes.pointer}\r\n          onClick={onOpenEditUser}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactActions;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\UserDetail\\PersonalDetails.tsx",["1563","1564","1565"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport UserIcon from '@material-ui/icons/Person';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport UserInfo from 'components/Chat/ChatContent/MessagesScreen/UserInfo';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  borderBottomClass: {\r\n    borderBottom: `1px solid ${grey[300]}`,\r\n  },\r\n  iconRoot: {\r\n    fontSize: 16,\r\n    color: 'grey.600',\r\n  },\r\n}));\r\n\r\nconst PersonalDetails: React.FC<any> = ({userData}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box\r\n      pr={{xs: 5, lg: 8, xl: 10}}\r\n      pb={5}\r\n      className={classes.borderBottomClass}>\r\n      <Box component='h6' mb={2} fontWeight={Fonts.MEDIUM} fontSize={16}>\r\n        <IntlMessages id='contactApp.personalDetails' />\r\n      </Box>\r\n\r\n      <Box px={{xs: 5, lg: 8, xl: 10}}>\r\n        <Box mb={2} display='flex' alignItems='center'>\r\n          <UserIcon className={classes.iconRoot} />\r\n          <Box ml={2} color='text.secondary' fontSize={14}>\r\n            {userData?.first_name} {userData?.last_name}\r\n          </Box>\r\n        </Box>\r\n        <Box mb={2} display='flex' alignItems='center'>\r\n          {' '}\r\n          <EmailIcon className={classes.iconRoot} />{' '}\r\n          <Box ml={2} fontSize={14} color='text.secondary'>\r\n            {userData?.email}\r\n          </Box>\r\n        </Box>\r\n\r\n        {userData?.promotion_code && (\r\n          <Box mb={2} display='flex' alignItems='center'>\r\n            <PeopleIcon className={classes.iconRoot} />\r\n            <Box ml={2} color='text.secondary' fontSize={14}>\r\n              {userData?.promotion_code}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PersonalDetails;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsStarredIcon\\index.tsx",[],["1566","1567"],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\EditUser\\index.tsx",["1568","1569","1570","1571","1572","1573","1574"],"import React, {useState} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Scrollbar} from '../../../@crema';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport AddContactForm from './EditUserForm';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {makeStyles} from '@material-ui/core/styles/index';\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport {useIntl} from 'react-intl';\r\nimport EditUserForm from './EditUserForm';\r\nimport { useGetUser } from 'hooks/hooks';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate/index';\r\nimport { queryClient } from 'App';\r\nimport { showError } from 'lib';\r\nimport { loadJWTUser } from 'redux/actions';\r\nimport jwtAxios from '@crema/services/auth/jwt-auth/jwt-api';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  dialogBox: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      maxWidth: 600,\r\n      width: '100%',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n      fontWeight: Fonts.LIGHT,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {children?: React.ReactElement<any, any>},\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nconst EditUser: React.FC<any> = ({\r\n  isEditUser,\r\n  handleEditUserClose,\r\n  onUpdateContact,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    mutate: updateUser,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.updateUser);\r\n  const [percent, setPercent] = useState<any>(0);\r\n\r\n  const {data, isFetching}: any = useGetUser();\r\n  const selectContact = data?.data;\r\n\r\n\r\n  const classes = useStyles();\r\n  const {messages} = useIntl();\r\n  const validationSchema = yup.object({\r\n    username: yup\r\n      .string()\r\n      .required(messages['validation.nameRequired'] as string),\r\n    first_name: yup.string(),\r\n    last_name: yup.string(),\r\n    email: yup\r\n      .string()\r\n      .email(messages['validation.emailFormat'] as string)\r\n      .required(messages['validation.emailRequired'] as string),\r\n    // promotion_code: yup.string(),\r\n  });\r\n\r\n  const onUploadPhotoHandler = async(photo: any) => {\r\n    console.log('photo', photo);\r\n    let formData = new FormData();\r\n    formData.append('profile_photo', photo);\r\n\r\n    try {\r\n      const res = await jwtAxios.put('/user/profile-photo/',formData, {\r\n        headers : {\r\n          'Content-Type':'multipart/form-data'\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const {loaded, total} = progressEvent;\r\n          let prercentage = Math.floor( (loaded * 100) / total);\r\n          console.log(`${loaded} kb of ${total}kb | ${prercentage}%`)\r\n          if( prercentage < 100 ) {\r\n            setPercent(prercentage)\r\n          }\r\n        }\r\n      });\r\n      console.log('upload photo succedd', res.data)\r\n      setPercent(100);\r\n      queryClient.invalidateQueries('user');\r\n      await loadJWTUser(dispatch);\r\n    } catch (error) {\r\n      console.log('upload photo failed', error)\r\n      showError(error.data, {\r\n        color: 'red',\r\n        gravity: 'bottom',\r\n        position: 'left',\r\n      });\r\n    }\r\n     setTimeout(() => {\r\n       setPercent(0);\r\n     }, 1000);\r\n  };\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      open={isEditUser}\r\n      onClose={() => handleEditUserClose()}\r\n      aria-labelledby='simple-modal-title'\r\n      TransitionComponent={Transition}\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Scrollbar>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            username: selectContact ? selectContact.username : '',\r\n            first_name: selectContact ? selectContact.first_name : '',\r\n            last_name: selectContact ? selectContact.last_name : '',\r\n            email: selectContact ? selectContact.email : '',\r\n            promotion_code: selectContact ? selectContact.promotion_code : '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting, resetForm}) => {\r\n            setSubmitting(true);\r\n            console.log(data);\r\n            updateUser(data, {\r\n              onSuccess: (d: any) => {\r\n                console.log(d);\r\n                queryClient.invalidateQueries('user');\r\n                loadJWTUser(dispatch);\r\n              },\r\n              onError: (d: any) => {\r\n                console.log(d);\r\n                showError(d.data, {\r\n                  color: 'red',\r\n                  gravity: 'bottom',\r\n                  position: 'left',\r\n                });\r\n              },\r\n            });\r\n            handleEditUserClose();\r\n            resetForm();\r\n            setSubmitting(false);\r\n          }}>\r\n          {({values, setFieldValue}) => (\r\n            <EditUserForm\r\n              setUserImage={onUploadPhotoHandler}\r\n              values={values}\r\n              userImage={selectContact?.profile_photo}\r\n              setFieldValue={setFieldValue}\r\n              handleEditUserClose={handleEditUserClose}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Scrollbar>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\user-profile\\EditUser\\EditUserForm.tsx",["1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586"],"import React, {useEffect} from 'react';\r\nimport {Box, Button, Select} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Field, Form, useField} from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useSelector} from 'react-redux';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {useIntl} from 'react-intl';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Scrollbar from '../../../@crema/core/Scrollbar';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {KeyboardDatePicker} from '@material-ui/pickers';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\nimport {AppState} from '../../../redux/store';\r\nimport { CompassCalibrationOutlined } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  avatar: {\r\n    width: 55,\r\n    height: 55,\r\n    marginBottom: 8,\r\n    cursor: 'pointer',\r\n  },\r\n  myTextField: {\r\n    width: '100%',\r\n    marginBottom: 16,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 24,\r\n    },\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n  },\r\n  fieldRoot: {\r\n    width: '100%',\r\n    padding: 16,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  widthFull: {\r\n    width: '100%',\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\nexport const MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst EditUserForm: React.FC<any> = ({\r\n  values,\r\n  setUserImage,\r\n  userImage,\r\n  setFieldValue,\r\n  handleEditUserClose,\r\n}) => {\r\n  const inputLabel = React.useRef<any>(null);\r\n\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles) => {\r\n      setUserImage(acceptedFiles[0]);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLabelWidth(90);\r\n  }, []);\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n \r\n\r\n  return (\r\n    <Form className='' noValidate autoComplete='off'>\r\n      <Box\r\n        p={5}\r\n        display='flex'\r\n        flexDirection='column'\r\n        alignItems='center'\r\n        borderBottom={`1px solid ${grey[300]}`}>\r\n        <Box {...getRootProps({className: 'dropzone'})}>\r\n          <input {...getInputProps()} />\r\n          <label htmlFor='icon-button-file'>\r\n            <Avatar\r\n              className={classes.avatar}\r\n              src={userImage ? userImage : '/assets/images/placeholder.jpg'}\r\n            />\r\n          </label>\r\n        </Box>\r\n        <Box component='h4' fontWeight={Fonts.MEDIUM}>\r\n          {values?.username}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Scrollbar style={{maxHeight: 600}}>\r\n        <Box py={5} px={{xs: 5, lg: 8, xl: 10}}>\r\n          <Box pb={5} mb={5} borderBottom={`1px solid ${grey[300]}`}>\r\n            <Box\r\n              component='h6'\r\n              mb={{xs: 4, xl: 6}}\r\n              fontSize={16}\r\n              fontWeight={Fonts.MEDIUM}>\r\n              <IntlMessages id='contactApp.personalDetails' />\r\n            </Box>\r\n\r\n            <Box px={{md: 5, lg: 8, xl: 10}}>\r\n              <MyTextField\r\n                className={classes.myTextField}\r\n                variant='outlined'\r\n                label='User Name'\r\n                name='username'\r\n              />\r\n\r\n              <MyTextField\r\n                className={classes.myTextField}\r\n                variant='outlined'\r\n                label='First Name'\r\n                name='first_name'\r\n              />\r\n\r\n              <MyTextField\r\n                className={classes.myTextField}\r\n                variant='outlined'\r\n                label='Last Name'\r\n                name='last_name'\r\n              />\r\n\r\n              <MyTextField\r\n                className={classes.myTextField}\r\n                variant='outlined'\r\n                label={<IntlMessages id='common.email' />}\r\n                name='email'\r\n              />\r\n\r\n              <MyTextField\r\n                className={classes.myTextField}\r\n                variant='outlined'\r\n                label='Promotion Code'\r\n                name='promotion_code'\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box px={8} py={4} bgcolor='grey.300'>\r\n          <Button\r\n            className={classes.btnRoot}\r\n            color='primary'\r\n            variant='contained'\r\n            type='submit'>\r\n            <IntlMessages id='common.save' />\r\n          </Button>\r\n          <Button\r\n            className={classes.btnRoot}\r\n            color='primary'\r\n            onClick={handleEditUserClose}>\r\n            <IntlMessages id='common.cancel' />\r\n          </Button>\r\n        </Box>\r\n      </Scrollbar>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditUserForm;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzeDetail\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\subscription\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\subscription\\SubscriptionPage.tsx",["1587"],"import React from 'react';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport { useGetPlans, useGetSubscriptions } from 'hooks/hooks';\r\nimport Subscriptions from 'components/Subscriptions';\r\n\r\nconst SubscriptionPage = () => {\r\n  const {data}: any = useGetPlans();\r\n\r\n  console.log('plans', data)\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <Subscriptions data={data && data?.data} />\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default SubscriptionPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Subscriptions\\index.tsx",["1588"],"import AppGrid from '@crema/core/AppGrid';\r\nimport ListEmptyResult from '@crema/core/AppList/ListEmptyResult';\r\nimport {useGetPlans, useGetSubscriptions} from 'hooks/hooks';\r\nimport React, {FC} from 'react';\r\nimport PlanCard from './PlanCard';\r\n\r\nconst Subscriptions: FC<any> = ({data}) => {\r\n  const {data: userSubscriptions}: any = useGetSubscriptions();\r\n\r\n  return (\r\n    <>\r\n      <AppGrid\r\n        delay={200}\r\n        responsive={{\r\n          xs: 1,\r\n          sm: 2,\r\n          md: 3,\r\n          lg: 4,\r\n          xl: 4,\r\n        }}\r\n        data={data}\r\n        renderRow={(item) => (\r\n          <PlanCard\r\n            userSubscriptionData={userSubscriptions && userSubscriptions?.data}\r\n            item={item}\r\n            key={item.id}\r\n          />\r\n        )}\r\n        ListEmptyComponent={\r\n          <ListEmptyResult content='No item found' loading={false} />\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subscriptions;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Subscriptions\\PlanCard\\index.tsx",["1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport {Button, Checkbox, makeStyles} from '@material-ui/core';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport {green} from '@material-ui/core/colors';\r\nimport clsx from 'clsx';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\nimport { useGetSubscriptions } from 'hooks/hooks';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate';\r\nimport { queryClient } from 'App';\r\nimport { showError } from 'lib';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n  lineThrough: {\r\n    textDecoration: 'line-through',\r\n  },\r\n  textBase: {\r\n    fontSize: 16,\r\n  },\r\n  textSm: {\r\n    fontSize: 14,\r\n  },\r\n  textXs: {\r\n    fontSize: 12,\r\n  },\r\n  textRes: {\r\n    fontSize: 12,\r\n    [theme.breakpoints.up('xl')]: {\r\n      fontSize: 14,\r\n    },\r\n  },\r\n  truncate: {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  btn: {\r\n    fontWeight: Fonts.MEDIUM,\r\n    padding: '4px 12px',\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst PlanCard: React.FC<any> = ({item, userSubscriptionData}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    mutate: reqSubscription,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.reqSubscription);\r\n\r\n\r\n  const isAlreadySubscribed = () => {\r\n      return userSubscriptionData\r\n        ?.map((i: any) => i.plan)\r\n        ?.includes(item?.id);\r\n  }\r\n\r\n  const onSubscribeHandler = () => {\r\n    reqSubscription(\r\n        {plan: item.id},\r\n        {\r\n          onSuccess: (d: any) => {\r\n            console.log(d);\r\n            queryClient.invalidateQueries('user-plans');\r\n          },\r\n          onError: (d: any) => {\r\n            console.log(d);\r\n            showError(d.data, {\r\n              color: 'red',\r\n              gravity: 'bottom',\r\n              position: 'left',\r\n            });\r\n          },\r\n        },\r\n      );\r\n  }\r\n\r\n  const classes = useStyles();\r\n  console.log(isAlreadySubscribed());\r\n  console.log({userSubscriptionData});\r\n\r\n  return (\r\n    <Box\r\n      p={5}\r\n      m={2}\r\n      className='pointer item-hover'\r\n      onClick={() => {\r\n        // dispatch(setCurrentProduct(item));\r\n        // history.push('/ecommerce/product_detail/' + item.id);\r\n      }}\r\n      clone>\r\n      <Card>\r\n        <Box mt={2} mb={5} display='flex' justifyContent='center'>\r\n          <img width={60} height={60} src={item?.icon} alt='watch' />\r\n        </Box>\r\n\r\n        <Box\r\n          mb={1}\r\n          display='flex'\r\n          justifyContent='center'\r\n          color='text.primary'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={22}\r\n          component='h3'\r\n          className={classes.truncate}>\r\n          {item?.display_name}\r\n        </Box>\r\n\r\n        <Box\r\n          mb={1}\r\n          mt={3}\r\n          display='flex'\r\n          justifyContent='center'\r\n          color='text.primary'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={70}\r\n          component='h1'\r\n          className={classes.truncate}>\r\n          {item?.price} $\r\n        </Box>\r\n\r\n        <Box\r\n          mb={5}\r\n          mt={1}\r\n          display='flex'\r\n          justifyContent='center'\r\n          color='text.primary'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={18}\r\n          component='h1'\r\n          className={classes.truncate}>\r\n          for {item?.days} days\r\n        </Box>\r\n        <hr></hr>\r\n\r\n        <Box\r\n          mb={1}\r\n          mt={1}\r\n          display='flex'\r\n          justifyContent='center'\r\n          color='text.primary'\r\n          fontWeight={Fonts.BOLD}\r\n          fontSize={15}\r\n          component='h1'\r\n          className={classes.truncate}>\r\n          {item?.description}\r\n        </Box>\r\n\r\n        {isAlreadySubscribed() ? (\r\n          <Button\r\n            variant='contained'\r\n            fullWidth={true}\r\n            style={{marginTop: '1rem', background: '#00AA45', color: '#fff'}}>\r\n            Already Subscribed\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={onSubscribeHandler}\r\n            color='primary'\r\n            variant='contained'\r\n            fullWidth={true}\r\n            style={{marginTop: '1rem'}}>\r\n            Subscribe Now\r\n          </Button>\r\n        )}\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PlanCard;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\index.tsx",["1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport AddNewMessage from './AddNewMessage';\r\nimport MessagesList from './MessagesList';\r\nimport {useAuthUser} from '../../../@crema/utility/AppHooks';\r\nimport moment from 'moment';\r\nimport Header from './Header';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport AppsHeader from '../../../@crema/core/AppsContainer/AppsHeader';\r\nimport {useAppsContentStyles} from '../../../@crema/core/AppsContainer/AppsContent';\r\nimport AppsFooter from '../../../@crema/core/AppsContainer/AppsFooter';\r\n\r\nimport {AppState} from '../../../redux/store';\r\nimport { queryClient } from 'App';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  scrollChatNomain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    height: '100% !important',\r\n  },\r\n  noMessage: {\r\n    fontSize: 18,\r\n    color: grey[500],\r\n  },\r\n}));\r\n\r\ninterface MessagesScreenProps {\r\n  selectedUser?: any;\r\n  ticketNumber: any;\r\n  handleShowMessage?: any;\r\n  showBackBtn?: boolean;\r\n}\r\n\r\nconst MessagesScreen: React.FC<MessagesScreenProps> = ({\r\n  selectedUser,\r\n  ticketNumber,\r\n  handleShowMessage,\r\n  showBackBtn = false,\r\n}) => {\r\n  const [message, setMessage] = useState<string | undefined>('');\r\n  const { mutate: getMsg, data }: any = useMutation(gate.messages);\r\n  const tickets: any = queryClient.getQueryData('tickets');\r\n  const messagesEndRef: any = useRef();\r\n  const ticket = tickets && tickets?.data?.results?.filter((t: any) => t.id == ticketNumber);\r\n  const [text, setText] = useState('file');\r\n  const { mutate: sendMessage, isLoading: sendAttachmentLoadin } = useMutation(gate.sendMessages);\r\n  const { mutate: sendTextMessage } = useMutation(gate.sendTextMessages);\r\n\r\n  const { mutate: reqComplateTicket, isLoading: closeTicketLoading } = useMutation(\r\n      gate.complateTicket,\r\n  );\r\n  \r\n  const [files, setFiles] = useState<any>([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const userMessages = {\r\n    messageData: [\r\n      {\r\n        id: 1,\r\n        sender: 'sender_id',\r\n        message: 'Hello',\r\n        message_type: 'TEXT',\r\n        time: 'Fri, May 08, 2020 7:30 PM',\r\n      },\r\n\r\n      {\r\n        id: 2,\r\n        sender: 'sender_id',\r\n        message: 'How Are You',\r\n        message_type: 'TEXT',\r\n        time: 'Fri, May 08, 2020 7:30 PM',\r\n      },\r\n      {\r\n        id: 3,\r\n        sender: 33,\r\n        message: 'Well',\r\n        message_type: 'TEXT',\r\n        time: 'Fri, May 08, 2020 7:30 PM',\r\n      },\r\n      {\r\n        id: 4,\r\n        sender: 33,\r\n        message: 'Tnx Alot',\r\n        message_type: 'TEXT',\r\n        time: 'Fri, May 08, 2020 7:30 PM',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const user = useAuthUser();\r\n\r\n  let _scrollBarRef: any = null;\r\n\r\n  useEffect(() => {\r\n    getMsg(ticketNumber);\r\n}, [ticketNumber]);\r\n\r\n\r\nconsole.log({data});\r\nconst handleUploadChange = (e: any) => {\r\n  [...e.target.files]?.map((i) => {\r\n      setFiles([URL.createObjectURL(i)]);\r\n  });\r\n};\r\n\r\nconst handleCloseTicket = () => {\r\n  const formData: FormData = new FormData();\r\n  const bool: any = !ticket[0]?.complete;\r\n  formData.append('complete', bool);\r\n  reqComplateTicket(\r\n      { id: ticket[0]?.id, data: formData },\r\n      {\r\n          onSuccess: (data) => {\r\n              queryClient.prefetchQuery('message');\r\n              queryClient.prefetchQuery('tickets');\r\n          },\r\n      },\r\n  );\r\n};\r\n\r\nconst handleSetText = (e: any) => {\r\n  setText(e.target.value);\r\n};\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // if (\r\n    //   data &&\r\n    //   data?.data &&\r\n    //   data?.data.length > 0\r\n    // ) {\r\n    //   _scrollBarRef._container.scrollTop = 99999;\r\n    // }\r\n    _scrollBarRef._container.scrollTop = 99999;\r\n\r\n  }, [data, _scrollBarRef]);\r\n\r\n  const sendFileMessage = (fileMessage: any) => {\r\n    // const data: any = {\r\n    //   ...fileMessage,\r\n    //   time: moment().format('llll'),\r\n    // };\r\n    // dispatch(onSendMessage(selectedUser.channelId, data));\r\n\r\n    console.log(fileMessage)\r\n\r\n    let formData = new FormData();\r\n        fileMessage && formData.append('attachment', fileMessage);\r\n        formData.append('text', text);\r\n        formData.append('ticket', ticket[0].id);\r\n\r\n        sendMessage(formData, {\r\n            onSuccess: () => {\r\n                // reset();\r\n                getMsg(ticketNumber);\r\n                queryClient.prefetchQuery('tickets');\r\n                // scrollToBottom();\r\n                setFiles([]);\r\n            },\r\n            onError: (d: any) => {\r\n              console.log(d?.data)\r\n            }\r\n        });\r\n  };\r\n\r\n  const onSend = (message: string) => {\r\n    sendTextMessage(\r\n      {text: message, ticket: ticket[0].id},\r\n      {\r\n        onSuccess: () => {\r\n          // reset();\r\n          getMsg(ticketNumber);\r\n          queryClient.prefetchQuery('tickets');\r\n          // scrollToBottom();\r\n          setFiles([]);\r\n        },\r\n        onError: (d: any) => {\r\n          console.log(d?.data);\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  const onClickEditMessage = (data: any) => {\r\n    // if (data.message_type === MessageType.TEXT) {\r\n    //   setIsEdit(true);\r\n    //   setMessage(data.message);\r\n    // }\r\n  };\r\n\r\n  const deleteMessage = (messageId: number) => {\r\n    // dispatch(onDeleteMessage(selectedUser.channelId, messageId));\r\n  };\r\n\r\n  const deleteConversation = () => {\r\n    // dispatch(onDeleteConversation(selectedUser.channelId));\r\n  };\r\n\r\n  const appsContentStyles = useAppsContentStyles({\r\n    isDetailView: false,\r\n    fullView: false,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box\r\n      style={{minWidth: '70%'}}\r\n      display='flex'\r\n      height={1}\r\n      flexDirection='column'>\r\n      <AppsHeader>\r\n        <Header\r\n          onBackClick={handleShowMessage}\r\n          showBackBtn={showBackBtn}\r\n          selectedUser={selectedUser}\r\n          deleteConversation={deleteConversation}\r\n        />\r\n      </AppsHeader>\r\n\r\n      {userMessages && user ? (\r\n        <PerfectScrollbar\r\n          style={{marginBottom: '1rem'}}\r\n          ref={(ref) => {\r\n            _scrollBarRef = ref;\r\n          }}\r\n          className={appsContentStyles.appsContentContainer}>\r\n          <MessagesList\r\n            userMessages={data && data?.data}\r\n            authUser={user}\r\n            selectedUser={selectedUser}\r\n            onClickEditMessage={onClickEditMessage}\r\n            deleteMessage={deleteMessage}\r\n          />\r\n        </PerfectScrollbar>\r\n      ) : (\r\n        <Box\r\n          className={clsx(classes.scrollChatNomain, 'scroll-chat-nomain')}\r\n          component='span'>\r\n          <Box component='span' className={classes.noMessage}>\r\n            <IntlMessages id='chatApp.sayHi' /> {selectedUser.name}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* <AppsFooter mt='auto'> */}\r\n        <AddNewMessage\r\n          currentMessage={message}\r\n          sendFileMessage={sendFileMessage}\r\n          onSendMessage={onSend}\r\n          isLoading={sendAttachmentLoadin}\r\n        />\r\n      {/* </AppsFooter> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessagesScreen;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\AddNewMessage.tsx",["1620","1621"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {Box, IconButton, makeStyles} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {useIntl} from 'react-intl';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\nimport { Loader } from '@crema';\r\nimport SendingSpinner from 'components/UI/SendingSpinner';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  btnRoot: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    '& .MuiIconButton-label': {\r\n      width: 24,\r\n      height: 24,\r\n      paddingLeft: 3,\r\n    },\r\n  },\r\n}));\r\n\r\ninterface AddNewMessageProps {\r\n  sendFileMessage: (message: any) => void;\r\n  onSendMessage: (message: string) => void;\r\n  currentMessage: string | undefined;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst AddNewMessage: React.FC<AddNewMessageProps> = ({\r\n  sendFileMessage,\r\n  onSendMessage,\r\n  isLoading,\r\n  currentMessage = '',\r\n}) => {\r\n  const [message, setMessage] = useState<string>(currentMessage);\r\n  const inputRef = useRef<any>(null);\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    multiple: false,\r\n    onDrop: acceptedFiles => {\r\n      const file = acceptedFiles[0];\r\n\r\n      sendFileMessage(file);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMessage(currentMessage);\r\n  }, [currentMessage]);\r\n  \r\n\r\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter') {\r\n      onClickSendMessage();\r\n    }\r\n  };\r\n\r\n  const onClickSendMessage = () => {\r\n    if (message) {\r\n      onSendMessage(message);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const {messages} = useIntl();\r\n\r\n  return (\r\n    <Box display='flex'>\r\n      <TextField\r\n        multiline\r\n        style={{width: '200%'}}\r\n        variant='outlined'\r\n        placeholder={messages['chatApp.sendMessagePlaceholder'] as string}\r\n        value={message}\r\n        onChange={(event) => {\r\n          if (event.target.value !== '\\n') setMessage(event.target.value);\r\n        }}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <Box ml={2} display='flex' flexDirection='row' alignItems='center'>\r\n        <IconButton\r\n          className={classes.btnRoot}\r\n          onClick={onClickSendMessage}\r\n          style={{height: 40, width: 40, marginRight: 10}}>\r\n          <SendIcon />\r\n        </IconButton>\r\n        {message === '' ? (\r\n          <Box\r\n            {...getRootProps({\r\n              className: clsx('dropzone'),\r\n            })}>\r\n            {isLoading ? (\r\n              <SendingSpinner />\r\n            ) : (\r\n              <IconButton style={{height: 40, width: 40}}>\r\n                <input {...getInputProps()} />\r\n                <AttachFileIcon />\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddNewMessage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\MessagesList.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\Header.tsx",["1622","1623","1624","1625","1626","1627","1628","1629"],"import React, {useState} from 'react';\r\nimport UserInfo from './UserInfo';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Checkbox, IconButton, makeStyles} from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ConfirmationDialog from '../../../@crema/core/ConfirmationDialog';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { NavigateBefore } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    '& .user-info': {\r\n      width: '100%',\r\n    },\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\ninterface HeaderProps {\r\n  showBackBtn?: boolean;\r\n  onBackClick? : any\r\n  selectedUser?: any;\r\n  deleteConversation: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({selectedUser, deleteConversation, showBackBtn, onBackClick}) => {\r\n  const [isMoreIcon, onOpenMoreIcon] = useState(null);\r\n  const [isDeleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n  const onViewMoreOpen = (event: any) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const toggleDeleteDialog = () => {\r\n    setDeleteDialogOpen(!isDeleteDialogOpen);\r\n  };\r\n\r\n  const onDeleteConversation = () => {\r\n    deleteConversation();\r\n    toggleDeleteDialog();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box width={1} display='flex' alignItems='center' className={classes.root}>\r\n      {showBackBtn && (\r\n        <NavigateBefore style={{cursor: 'pointer'}} onClick={onBackClick} />\r\n      )}\r\n      {/* <UserInfo user={selectedUser} showStatus={true} /> */}\r\n      <Box ml='auto' display='flex' alignItems='center'>\r\n        {/* <Box mr={{sm: 4}} component='span' color='text.disabled'>\r\n          <Checkbox icon={<StarBorderIcon />} checkedIcon={<StarIcon />} />\r\n        </Box>\r\n\r\n        <Tooltip title={<IntlMessages id='common.more' />}>\r\n          <Box ml={2} component='span' color='text.disabled'>\r\n            <IconButton onClick={onViewMoreOpen}>\r\n              <MoreVertIcon className={classes.pointer} />\r\n            </IconButton>\r\n          </Box>\r\n        </Tooltip> */}\r\n      </Box>\r\n\r\n      <Menu\r\n        anchorEl={isMoreIcon}\r\n        open={Boolean(isMoreIcon)}\r\n        onClose={onViewMoreClose}>\r\n        <MenuItem onClick={toggleDeleteDialog}>\r\n          <IntlMessages id='chatApp.deleteConversation' />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <IntlMessages id='chatApp.mute' />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <IntlMessages id='chatApp.hide' />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      {isDeleteDialogOpen ? (\r\n        <ConfirmationDialog\r\n          open={isDeleteDialogOpen}\r\n          onDeny={setDeleteDialogOpen}\r\n          onConfirm={onDeleteConversation}\r\n          title={<IntlMessages id='chatApp.deleteTitle' />}\r\n          dialogTitle={<IntlMessages id='chatApp.deleteContent' />}\r\n        />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\ReceiverMessageItem.tsx",["1630","1631","1632"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport clsx from 'clsx';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport useStyles from './MessageItem.style';\r\nimport {getFileSize} from '../../../@crema/utility/Utils';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst getMessage = (item: any, classes: any) => {\r\n  if (item?.text && !item?.attachment) {\r\n    return (\r\n      <Box component='p' mb={1} ml={3}>\r\n        {item?.text}\r\n      </Box>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <Box display='flex' flexWrap='nowrap'>\r\n        <img alt='' src={'/assets/images/icon-docs-dark.svg'} />\r\n        <Box component='span' display='inline-block' ml={2}>\r\n          <Box>{item?.text}</Box>\r\n          {/* <Box>{getFileSize(item?.media?.file_size)}</Box> */}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n};\r\n\r\ninterface ReceiverMessageItemProps {\r\n  selectedUser: any;\r\n  item: any;\r\n}\r\n\r\nconst ReceiverMessageItem: React.FC<ReceiverMessageItemProps> = ({\r\n  selectedUser,\r\n  item,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.messageItemRoot, 'left')}\r\n      display='flex'\r\n      justifyContent={'flex-start'}>\r\n      <Box className={classes.messageChatRoot}>\r\n        <Box\r\n          className={clsx(classes.messageTime, 'message-time')}\r\n          component='span'>\r\n          <Moment date={item?.created_at} fromNow />\r\n        </Box>\r\n        <Box display='flex' flexDirection='row'>\r\n          <Box className={classes.messageChat}>\r\n            {selectedUser?.image ? (\r\n              <Avatar\r\n                className={classes.profilePic}\r\n                src={selectedUser?.image}\r\n              />\r\n            ) : (\r\n              <Avatar className={classes.profilePic}>\r\n                {selectedUser?.name.charAt(0).toUpperCase()}\r\n              </Avatar>\r\n            )}\r\n            <Box className='message-info'>\r\n              {getMessage(item, classes)}\r\n\r\n              {item.edited && (\r\n                <Box className={classes.editRoot}>\r\n                  <EditIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n          {item?.text && !item?.attachment ? null : (\r\n            <Box className='pointer' component='span' mt='auto'>\r\n              <a href={item?.attachment} download={item?.attachment}>\r\n                <img alt='' src={'/assets/images/icon-download.svg'} />\r\n              </a>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReceiverMessageItem;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\SenderMessageItem.tsx",["1633","1634","1635","1636","1637"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport useStyles from './MessageItem.style';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {getFileSize} from '../../../@crema/utility/Utils';\r\nimport Moment from 'react-moment';\r\n\r\nconst getMessage = (item: any, classes: any) => {\r\n  if (item?.text && !item?.attachment) {\r\n    return (\r\n      <Box component='p' mb={1} ml={3}>\r\n        {item?.text}\r\n      </Box>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <Box display='flex' flexWrap='nowrap'>\r\n        <img alt='' src={'/assets/images/icon-docs-dark.svg'} />\r\n        <Box component='span' display='inline-block' ml={2}>\r\n          <Box>{item?.text}</Box>\r\n          {/* <Box>{getFileSize(item?.media?.file_size)}</Box> */}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n  //  else if (item.media) {\r\n  //   return (\r\n  //     <Box className={classes.mediaWrapper}>\r\n  //       {item.media.mime_type.startsWith('video') ? (\r\n  //         <Box display='flex'>\r\n  //           <video src={item.media.url} />\r\n  //           <PlayCircleOutlineIcon className={classes.videoIcon} />\r\n  //         </Box>\r\n  //       ) : (\r\n  //         <img alt='' src={item.media.url} />\r\n  //       )}\r\n  //     </Box>\r\n  //   );\r\n  // }\r\n};\r\n\r\ninterface SenderMessageItemProps {\r\n  item: any;\r\n  authUser: any;\r\n  onClickEditMessage: (item: any) => void;\r\n  deleteMessage: (id: any) => void;\r\n}\r\n\r\nconst SenderMessageItem: React.FC<SenderMessageItemProps> = ({\r\n  authUser,\r\n  item,\r\n  onClickEditMessage,\r\n  deleteMessage,\r\n}) => {\r\n  const [isMoreIcon, onOpenMoreIcon] = React.useState(null);\r\n\r\n  const onViewMoreOpen = (event: any) => {\r\n    onOpenMoreIcon(event.currentTarget);\r\n  };\r\n\r\n  const onViewMoreClose = () => {\r\n    onOpenMoreIcon(null);\r\n  };\r\n\r\n  const getUserAvatar = () => {\r\n    const name = authUser.displayName;\r\n    if (name) {\r\n      return name.charAt(0).toUpperCase();\r\n    }\r\n    if (authUser.email) {\r\n      return authUser.email.charAt(0).toUpperCase();\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={clsx(classes.messageItemRoot, 'right')}\r\n      display='flex'\r\n      justifyContent={'flex-end'}>\r\n      <Box className={classes.messageChatRoot}>\r\n        <Box\r\n          className={clsx(classes.messageTime, 'message-time')}\r\n          component='span'>\r\n          <Moment date={item?.created_at} fromNow />\r\n        </Box>\r\n\r\n        <Box display='flex' flexDirection='row' justifyContent='flex-end'>\r\n          {item?.text && !item?.attachment ? null : (\r\n            <Box className='pointer' component='span' mt='auto'>\r\n              <a href={item?.attachment} download={item?.attachment}>\r\n                <img alt='' src={'/assets/images/icon-download.svg'} />\r\n              </a>\r\n            </Box>\r\n          )}\r\n          <Box className={classes.messageChat} ml='auto'>\r\n            {authUser?.profile_photo ? (\r\n              <Avatar\r\n                className={classes.profilePic}\r\n                src={authUser?.profile_photo}\r\n              />\r\n            ) : (\r\n              <Avatar className={classes.profilePic}>{getUserAvatar()}</Avatar>\r\n            )}\r\n            <Box className='message-info'>\r\n              {getMessage(item, classes)}\r\n\r\n              {item.edited && (\r\n                <Box className={classes.editRoot}>\r\n                  <EditIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box className={classes.arrowIcon}>\r\n        <Box\r\n          ml={2}\r\n          className={classes.textPointer}\r\n          component='span'\r\n          color='text.disabled'>\r\n          {/* <MoreVertIcon onClick={onViewMoreOpen} /> */}\r\n        </Box>\r\n\r\n        <Menu\r\n          anchorEl={isMoreIcon}\r\n          open={Boolean(isMoreIcon)}\r\n          onClose={onViewMoreClose}>\r\n          {item.message_type === 'TEXT' ? (\r\n            <MenuItem\r\n              onClick={() => {\r\n                onViewMoreClose();\r\n                onClickEditMessage(item);\r\n              }}>\r\n              <IntlMessages id='common.edit' />\r\n            </MenuItem>\r\n          ) : null}\r\n          <MenuItem\r\n            onClick={() => {\r\n              onViewMoreClose();\r\n              deleteMessage(item.id);\r\n            }}>\r\n            <IntlMessages id='common.delete' />\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SenderMessageItem;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\UserInfo.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\MessagesScreen\\MessageItem.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Reviews\\AddNewComment.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\hooks\\isMobile.ts",["1638"],"import React, {useEffect, useState} from 'react';\r\n\r\nconst useCheckMobileScreen = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const handleWindowSizeChange = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowSizeChange);\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowSizeChange);\r\n    };\r\n  }, []);\r\n\r\n  return width <= 768;\r\n};\r\n\r\nexport default useCheckMobileScreen;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\SendingSpinner\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\orders\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\orders\\OrdersPage.tsx",["1639"],"import React from 'react';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport Products from 'components/Shop';\r\nimport { useGetOrders } from 'hooks/hooks';\r\nimport { Loader } from '@crema';\r\n\r\nconst ShopPage = () => {\r\n  const {data, isFetching}: any = useGetOrders();\r\n\r\n  console.log('products', data)\r\n  return (\r\n    <>\r\n      {isFetching ? <Loader /> : <Products isOrder loding={isFetching} products={data && data?.data} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\TableItem.tsx",["1640","1641","1642","1643","1644","1645"],"import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './TableItem.style';\r\nimport AppMenu from '../../../@crema/core/AppMenu';\r\nimport moment from 'moment';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\n\r\ninterface TableItemProps {\r\n  data: any;\r\n  onTableRowClick?: any;\r\n}\r\n\r\nconst TableItem: React.FC<TableItemProps> = ({data, onTableRowClick}) => {\r\n  const classes = useStyles();\r\n  const isMobile = useCheckMobileScreen();\r\n\r\n  return (\r\n    <TableRow\r\n      onClick={() => onTableRowClick(data)}\r\n      key={data?.id}\r\n      className={`${classes.tableRow} item-hover pointer`}>\r\n      {Object.keys(data)\r\n        ?.map((key) => [Number(key), data[key]])\r\n        ?.slice(1)\r\n        ?.map((item) => (\r\n          <TableCell\r\n            style={{\r\n              whiteSpace: 'pre-line',\r\n              color:\r\n                item[1] === 'CONFIRMED'\r\n                  ? 'green'\r\n                  : item[1] === 'DECLINED'\r\n                  ? 'red'\r\n                  : item[1] === 'PENDING'\r\n                  ? '#F1CD15'\r\n                  : '#000',\r\n            }}\r\n            align='left'\r\n            className={classes.tableCell}>\r\n            {item[1]}\r\n          </TableCell>\r\n        ))}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\TableHeading.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\UI\\Table\\TableItem.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\Pages\\AmountRequestsPage.tsx",["1646","1647"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport { Loader } from '@crema';\r\nimport CustomTable from 'components/UI/Table';\r\nimport { Button, Card, Typography } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport Modal from 'components/UI/Modal';\r\nimport AmountRequst from './AmountRequest';\r\nimport { useAuthUser } from '@crema/utility/AppHooks';\r\nimport { useGetUser, useGetWithdraws } from 'hooks/hooks';\r\nimport moment from 'moment';\r\n\r\nconst AnalyzePage = () => {\r\n  const {data}: any = useGetWithdraws();\r\n  const {data: userData}: any = useGetUser();\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n\r\n\r\n  const tableHeadingFileds = [\r\n    {\r\n      name: 'Date',\r\n    },\r\n    {\r\n      name: 'Amount',\r\n    },\r\n    {\r\n      name: 'Status',\r\n    },\r\n    {\r\n      name: 'Description',\r\n    },\r\n  ];\r\n\r\n  const sampleData = data?.data.map((item: any) => (\r\n    {\r\n      id: item?.id,\r\n      created_at : moment(item?.created_at).format('MMMM, Do, YYYY, h:mm'),\r\n      amount: item?.amount,\r\n      status: item?.status,\r\n      reason: item?.reason,\r\n    }\r\n  ) )\r\n\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <>\r\n        <Card style={{marginBottom: '2rem', padding: '2rem'}}>\r\n          <Box\r\n            display={{xs: 'block', sm: 'flex', md: 'flex'}}\r\n            alignItems='center'\r\n            justifyContent='space-between'>\r\n            <Box>\r\n              <Typography style={{marginBottom: '.8rem'}} variant='h5'>\r\n                Your Balance : {userData?.data?.balance} ₿\r\n              </Typography>\r\n            </Box>\r\n            <Button\r\n              onClick={() => setShowModal(true)}\r\n              variant='contained'\r\n              color='primary'>\r\n              Request\r\n            </Button>\r\n          </Box>\r\n        </Card>\r\n        <Card>\r\n          <CustomTable\r\n            tableData={sampleData}\r\n            tableHeadingFileds={tableHeadingFileds}\r\n          />\r\n        </Card>\r\n        <Modal\r\n          visible={showModal}\r\n          onClose={() => setShowModal(false)}\r\n          maxWidth='xs'\r\n          modalTitle='Amount Request'>\r\n          <AmountRequst handleCloseModal={() => setShowModal(false)} />\r\n        </Modal>\r\n      </>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default AnalyzePage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\Pages\\PromotionsPage.tsx",["1648","1649","1650","1651","1652","1653"],"import React from 'react';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport {useGetAnalyzes, useGetPromotions} from 'hooks/hooks';\r\nimport { Loader } from '@crema';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport CustomTable from 'components/UI/Table';\r\nimport { Box, Card, Input, TextField, Typography } from '@material-ui/core';\r\nimport { showMessage } from 'lib';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\nimport moment from 'moment';\r\nimport { useAuthUser } from '@crema/utility/AppHooks';\r\n\r\nconst AnalyzePage = () => {\r\n  const {data, isFetching}: any = useGetPromotions();\r\n  const user = useAuthUser();\r\n\r\n  console.log('promotions', data);\r\n\r\n  const EstimatedIncome = data?.data\r\n    .map((item: any) => item?.income)\r\n    ?.reduce((a: any, b: any) => a + b, 0);\r\n\r\n  const totlaPromotions = data?.data.length;  \r\n\r\n  \r\n\r\n  const tableHeadingFileds = [\r\n    {\r\n      name: 'Date',\r\n    },\r\n    {\r\n      name: 'User Name',\r\n    },\r\n    {\r\n      name: 'Status',\r\n    },\r\n    {\r\n      name: 'Income',\r\n    },\r\n  ];\r\n\r\n  const generatedData = data?.data.map((item: any) => ({\r\n    id: item?.id,\r\n    created_at: moment(item?.created_at).format('MMMM, Do, YYYY, h:mm'),\r\n    username: item?.client?.username,\r\n    status: item?.status,\r\n    income: `${item?.income}$`,\r\n  }));\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  const copyToClipBoard = async (copyMe: any) => {\r\n    try {\r\n        await navigator.clipboard.writeText(copyMe);\r\n        showMessage('Copied!');\r\n    } catch (err) {\r\n      showMessage('Failed to copy!', {gravity: 'top', position: 'right', color: '#ff4154'});\r\n    }\r\n};\r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <>\r\n        <Card style={{marginBottom: '2rem', padding: '2rem'}}>\r\n          <Box\r\n            display={{ xs: \"block\", sm: \"flex\", md: \"flex\" }}\r\n            alignItems='center'\r\n            justifyContent='space-between'>\r\n            <Box mb={{ xs: 4  }}>\r\n              <Typography style={{marginBottom: '.8rem'}} variant='h5'>\r\n                Estimated income : {EstimatedIncome} $\r\n              </Typography>\r\n              <Typography variant='subtitle1'>\r\n                number of promotions : {totlaPromotions}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              onClick={(e: any) => copyToClipBoard(e.target.value)}\r\n              value= {user?.promotion_code}\r\n              label=\"Promotion Code\"\r\n            />\r\n          </Box>\r\n        </Card>\r\n        <Card>\r\n          <CustomTable\r\n            tableData={generatedData}\r\n            tableHeadingFileds={tableHeadingFileds}\r\n          />\r\n        </Card>\r\n      </>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default AnalyzePage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\TableHeading.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\TableItem.tsx",["1654","1655","1656"],"import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport useStyles from './TableItem.style';\nimport AppMenu from '../../../@crema/core/AppMenu';\nimport moment from 'moment';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Fonts} from '../../../shared/constants/AppEnums';\nimport useCheckMobileScreen from 'hooks/isMobile';\n\ninterface TableItemProps {\n  data: any;\n  onTableRowClick: any;\n}\n\nconst TableItem: React.FC<TableItemProps> = ({data, onTableRowClick}) => {\n  const classes = useStyles();\n  const isMobile = useCheckMobileScreen();\n\n  return (\n    <TableRow\n      onClick={() => onTableRowClick(data)}\n      key={data?.name}\n      className={`${classes.tableRow} item-hover pointer`}>\n      <TableCell\n        style={{whiteSpace: 'pre-line'}}\n        align='left'\n        className={classes.tableCell}>\n        {data?.title}\n      </TableCell>\n      <TableCell\n        style={{whiteSpace: 'pre-line'}}\n        align='left'\n        className={classes.tableCell}>\n        {isMobile\n          ? data?.description?.substring(0, 10)\n          : data?.description?.substring(0, 50)}{' '}\n        ...\n      </TableCell>\n      <TableCell\n        style={{whiteSpace: 'pre-line'}}\n        align='left'\n        className={classes.tableCell}>\n        {moment(data?.created_at).format('MMMM, Do, YYYY, h:mm:ss')}\n      </TableCell>\n      <TableCell align='right'>\n        <AppMenu />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default TableItem;\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Analyzes\\AnalyzesTable\\TableItem.style.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\table\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\modules\\table\\TablePage.tsx",["1657","1658","1659","1660","1661","1662","1663","1664"],"import React from 'react';\r\nimport AppAnimate from '../../@crema/core/AppAnimate';\r\nimport {useGetTableData} from 'hooks/hooks';\r\nimport { Loader } from '@crema';\r\nimport AppCard from '@crema/core/AppCard';\r\nimport CustomTable from 'components/UI/Table';\r\nimport { Box, Card, Input, TextField, Typography } from '@material-ui/core';\r\nimport { showMessage } from 'lib';\r\n\r\n\r\nconst TablePage = () => {\r\n  const {data, isFetching}: any = useGetTableData();\r\n  console.log('table data', data);\r\n\r\n\r\n  const tableHeadingFileds = [\r\n    {\r\n      name: 'Open Date',\r\n    },\r\n    {\r\n      name: 'Change Date',\r\n    },\r\n    {\r\n      name: 'Pairs',\r\n    },\r\n    {\r\n      name: 'Type',\r\n    },\r\n    \r\n    {\r\n      name: 'Change',\r\n    },\r\n    {\r\n      name: 'Note',\r\n    },\r\n  ];\r\n\r\n \r\n  return (\r\n    <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n      <>\r\n        <Card>\r\n          <CustomTable\r\n            tableData={data && data?.data}\r\n            tableHeadingFileds={tableHeadingFileds}\r\n          />\r\n        </Card>\r\n      </>\r\n    </AppAnimate>\r\n  );\r\n};\r\n\r\nexport default TablePage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\modules\\promotions\\Pages\\AmountRequest\\index.tsx",["1665","1666","1667","1668"],"import React from 'react';\r\nimport {Box, Button, TextField} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {CremaTheme} from 'types/AppContextPropsType';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\nimport { useMutation } from 'react-query';\r\nimport gate from 'gate';\r\nimport { queryClient } from 'App';\r\nimport { showError, showMessage } from 'lib';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  formRoot: {\r\n    // width: '50%',\r\n    textAlign: 'left',\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 24,\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.REGULAR,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  btnRootFull: {\r\n    width: '100%',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 16,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 32,\r\n    },\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  amount: yup.string().required('amount required'),\r\n  address: yup.string().required('address required'),\r\n\r\n});\r\n\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst AmountRequst = (props: any) => {\r\n  const classes = useStyles(props);\r\n\r\n  const isMobile = useCheckMobileScreen();\r\n\r\n  const WIDTH = isMobile ? '80%' : '90%';\r\n  const {\r\n    mutate: reqWithdraws,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.reqWithdraws);\r\n\r\n  const reqestWithdraws = (data: any) => {\r\n    console.log('rregisterd data', data);\r\n    \r\n    reqWithdraws(data, {\r\n      onSuccess: (d: any) => {\r\n        console.log(d);\r\n        showMessage('Your Request Submitted Successfully');\r\n        queryClient.invalidateQueries('withdraws');\r\n        queryClient.invalidateQueries('user');\r\n        props.handleCloseModal();\r\n      },\r\n      onError: (d: any) => {\r\n        console.log(d?.response?.data);\r\n        showError(d?.response?.data, {\r\n          color: 'red',\r\n          gravity: 'bottom',\r\n          position: 'left',\r\n        });\r\n        props.handleCloseModal();\r\n\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      mt={4}\r\n      //   flexDirection={{xs: 'row', md: 'row'}}\r\n      alignItems={{xs: 'center', md: 'flex-start'}}\r\n      justifyContent='center'>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          amount: '',\r\n          address: '',\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(data, {setSubmitting, resetForm}) => {\r\n            setSubmitting(true);\r\n            reqestWithdraws(data);\r\n            setSubmitting(false);\r\n            resetForm();\r\n        }}>\r\n        {({isSubmitting}) => (\r\n          <Form\r\n            style={{width: WIDTH}}\r\n            className={classes.formRoot}\r\n            noValidate\r\n            autoComplete='off'>\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                placeholder='Amount'\r\n                name='amount'\r\n                type= 'number'\r\n                label='Amount'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={{xs: 5, xl: 8}}>\r\n              <MyTextField\r\n                placeholder='Address'\r\n                name='address'\r\n                label='Address'\r\n                variant='outlined'\r\n                className={classes.myTextFieldRoot}\r\n              />\r\n            </Box>\r\n\r\n            <Box mb={6}>\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                type='submit'\r\n                // disabled={isSubmitting}\r\n                className={classes.btnRoot}>\r\n                Send Request\r\n              </Button>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AmountRequst;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\Skeleton\\ChatListSkeleton.tsx",[],["1669","1670"],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\index.tsx",["1671","1672"],"import React, {useEffect} from 'react';\r\nimport ProductImage from './ProductImage';\r\nimport AppCard from '../../../../@crema/core/AppCard';\r\nimport Header from './Header';\r\nimport ProductView from './ProductView';\r\nimport GridContainer from '../../../../@crema/core/GridContainer';\r\nimport {InfoView} from '../../../../@crema';\r\n\r\ninterface ProductDetailProps {\r\n    product: any;\r\n    isOrder?: boolean;\r\n}\r\n\r\nconst ProductDetail: React.FC<ProductDetailProps> = ({product, isOrder}) => {\r\n  return (\r\n    <>\r\n      <AppCard>\r\n        <Header product={product} />\r\n        <GridContainer>\r\n          <ProductImage product={product} isOrder={isOrder} />\r\n          <ProductView product={product} />\r\n        </GridContainer>\r\n      </AppCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\Header.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\ProductView\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\Shop\\ProductListing\\ProductDetails\\ProductImage\\index.tsx",["1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683"],"import React, {useState} from 'react';\r\nimport {Button, Checkbox, makeStyles} from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {CremaTheme} from '../../../../../types/AppContextPropsType';\r\nimport {useMutation} from 'react-query';\r\nimport gate from 'gate';\r\nimport {showError, showMessage} from 'lib';\r\n\r\nconst useStyles = makeStyles((theme: CremaTheme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    borderRadius: '20px',\r\n    marginBottom: 20,\r\n    /*\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },*/ '& .BrainhubCarousel__container': {\r\n      // border: '1px solid #acacac',\r\n      marginLeft: 10,\r\n\r\n      borderRadius: 10,\r\n      maxWidth: 450,\r\n      [theme.breakpoints.down('sm')]: {\r\n        maxWidth: 300,\r\n        marginBottom: 20,\r\n      },\r\n      '& .BrainhubCarousel': {\r\n        height: '100%',\r\n      },\r\n    },\r\n    '& .BrainhubCarousel__dots': {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none',\r\n      },\r\n      '& .BrainhubCarousel__thumbnail': {\r\n        opacity: 1,\r\n        backgroundColor: 'transparent',\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n        border: '1px solid #A0A5B9',\r\n        '&.BrainhubCarousel__thumbnail--selected': {\r\n          border: `solid 2px #7c7c7c`,\r\n        },\r\n      },\r\n      flexDirection: 'column',\r\n      '& img': {\r\n        height: 80,\r\n      },\r\n    },\r\n  },\r\n  favoriteButton: {\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n    zIndex: 2,\r\n  },\r\n}));\r\n\r\ninterface ProductImageSlideProps {\r\n  product: any;\r\n  isOrder?: boolean;\r\n}\r\n\r\nconst ProductImage: React.FC<ProductImageSlideProps> = ({product, isOrder}) => {\r\n  const accessToken = localStorage.getItem('token');\r\n  const classes = useStyles();\r\n  const {\r\n    mutate: buyProduct,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    error,\r\n  }: any = useMutation(gate.buyProduct);\r\n\r\n  const onBuyItemHandler = () => {\r\n    console.log('productID', product?.id);\r\n    buyProduct(\r\n      {product: product?.id},\r\n      {\r\n        onSuccess: (d: any) => {\r\n          console.log(d);\r\n          showMessage('You Successfully Bought The Item');\r\n        },\r\n        onError: (d: any) => {\r\n          console.log(d);\r\n          showError(d.data, {\r\n            color: 'red',\r\n            gravity: 'bottom',\r\n            position: 'left',\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid item sm={12} md={4}>\r\n      <Box className={classes.root}>\r\n        <img style={{borderRadius: '8px'}} src={product?.photo} alt='' />\r\n      </Box>\r\n      <Box\r\n        display='flex'\r\n        justifyContent='center'\r\n        pl={{xs: 0, md: 5, lg: 5, xl: 15}}>\r\n        {!isOrder ? (\r\n          <Button\r\n            onClick={onBuyItemHandler}\r\n            style={{width: 140}}\r\n            variant='contained'\r\n            color='primary'>\r\n            Buy Now\r\n          </Button>\r\n        ) : (\r\n          <Button style={{width: 140}} variant='contained' color='primary'>\r\n            <a href={`${product?.file}/?token=${accessToken}`} target='_blank'>\r\n              Download\r\n            </a>\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductImage;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\index.tsx",["1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport TicketsTable from './TicketsTable';\r\nimport AppsContainer from '../../../@crema/core/AppsContainer';\r\nimport {useIntl} from 'react-intl';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Button, Hidden} from '@material-ui/core';\r\nimport AppsHeader from '../../../@crema/core/AppsContainer/AppsHeader';\r\nimport AppsContent from '../../../@crema/core/AppsContainer/AppsContent';\r\nimport AppsPagination from '../../../@crema/core/AppsPagination';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppAnimate from '../../../@crema/core/AppAnimate';\r\nimport InfoView from '../../../@crema/core/InfoView';\r\nimport {AppState} from '../../../redux/store';\r\nimport Modal from 'components/UI/Modal';\r\nimport useCheckMobileScreen from 'hooks/isMobile';\r\nimport CreateTicket from '../createTicket';\r\nimport {\r\n  NavigateBefore,\r\n  NavigateNext,\r\n  NavigateNextRounded,\r\n} from '@material-ui/icons';\r\nimport {useMutation} from 'react-query';\r\nimport gate from 'gate';\r\nimport {queryClient} from 'App';\r\n\r\nconst TicketsSection = ({tickets, onRowClick}: any) => {\r\n  const prevPageRef = useRef<number>(0);\r\n  const [page, setPage] = useState<number>(0);\r\n  const [search, setSearchQuery] = useState<string>('');\r\n  const tableCount = tickets?.data?.count;\r\n  const prevUrl = tickets?.data?.previous;\r\n  const nextUrl = tickets?.data?.next;\r\n  const [showModal, setShowModal] = useState<any>(false);\r\n  const isMobile = useCheckMobileScreen();\r\n  const {mutate: paginateData} = useMutation(gate.paginateApi);\r\n\r\n  const onPrevHandler = () => {\r\n    paginateData(\r\n      {url: prevUrl},\r\n      {\r\n        onSuccess: (data) => {\r\n          queryClient.setQueryData('tickets', data);\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  const onNextHandler = () => {\r\n    paginateData(\r\n      {url: nextUrl},\r\n      {\r\n        onSuccess: (data) => {\r\n          queryClient.setQueryData('tickets', data);\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppAnimate animation='transition.slideUpIn' delay={200}>\r\n        <AppsContainer title='Tickets' fullView>\r\n          <AppsHeader>\r\n            <Box\r\n              display='flex'\r\n              flexDirection='row'\r\n              alignItems='center'\r\n              width={1}>\r\n              <Button\r\n                onClick={() => setShowModal(true)}\r\n                variant='contained'\r\n                color='primary'>\r\n                Create Ticket\r\n              </Button>\r\n              <Box\r\n                display='flex'\r\n                flexDirection='row'\r\n                alignItems='center'\r\n                ml='auto'>\r\n                <Hidden xsDown>\r\n                  {/* <AppsPagination\r\n                    rowsPerPage={3}\r\n                    count={tableCount}\r\n                    page={page}\r\n                    onPageChange={onPageChange}\r\n                  /> */}\r\n\r\n                  <Button\r\n                    disabled={!prevUrl}\r\n                    onClick={onPrevHandler}\r\n                    style={{borderRadius: '8px'}}>\r\n                    <NavigateBefore />\r\n                  </Button>\r\n                  <Button\r\n                    disabled={!nextUrl}\r\n                    onClick={onNextHandler}\r\n                    style={{borderRadius: '8px'}}>\r\n                    <NavigateNext />\r\n                  </Button>\r\n                </Hidden>\r\n              </Box>\r\n            </Box>\r\n          </AppsHeader>\r\n\r\n          <AppsContent\r\n            style={{\r\n              paddingTop: 10,\r\n              paddingBottom: 10,\r\n            }}>\r\n            <TicketsTable\r\n              tickets={tickets?.data?.results}\r\n              onRowClick={onRowClick}\r\n            />\r\n          </AppsContent>\r\n\r\n          <Hidden smUp>\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n              <Button\r\n                disabled={!prevUrl}\r\n                onClick={onPrevHandler}\r\n                style={{borderRadius: '8px'}}>\r\n                <NavigateBefore />\r\n              </Button>\r\n              <Button\r\n                disabled={!nextUrl}\r\n                onClick={onNextHandler}\r\n                style={{borderRadius: '8px'}}>\r\n                <NavigateNext />\r\n              </Button>\r\n            </div>\r\n          </Hidden>\r\n        </AppsContainer>\r\n      </AppAnimate>\r\n      <Modal\r\n        visible={showModal}\r\n        isFullScreen={isMobile}\r\n        maxWidth='xs'\r\n        modalTitle='Create New Ticket'\r\n        onClose={() => setShowModal(false)}>\r\n        <CreateTicket back={() => setShowModal(false)} />\r\n      </Modal>\r\n\r\n      <InfoView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicketsSection;\r\n","D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\index.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\@crema\\core\\AppsPagination\\index.tsx",[],["1698","1699"],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\TableItem.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\TableHeading.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\OrderActions.tsx",[],"D:\\Projects\\Real\\forex-dashboard\\src\\components\\help-desk\\tickets-section\\TicketsTable\\TableItem.style.tsx",[],{"ruleId":"1700","replacedBy":"1701"},{"ruleId":"1702","replacedBy":"1703"},{"ruleId":"1704","severity":1,"message":"1705","line":4,"column":22,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":34},{"ruleId":"1704","severity":1,"message":"1705","line":4,"column":22,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":34},{"ruleId":"1704","severity":1,"message":"1708","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1709","line":14,"column":8,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1710","line":16,"column":8,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1711","line":18,"column":8,"nodeType":"1706","messageId":"1707","endLine":18,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1712","line":99,"column":9,"nodeType":"1706","messageId":"1707","endLine":99,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1713","line":22,"column":3,"nodeType":"1706","messageId":"1707","endLine":22,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1714","line":23,"column":3,"nodeType":"1706","messageId":"1707","endLine":23,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1715","line":24,"column":3,"nodeType":"1706","messageId":"1707","endLine":24,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1716","line":25,"column":3,"nodeType":"1706","messageId":"1707","endLine":25,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1708","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1710","line":14,"column":8,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1709","line":16,"column":8,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1717","line":19,"column":8,"nodeType":"1706","messageId":"1707","endLine":19,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1718","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":10,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1720","line":3,"column":8,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1721","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1722","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1723","line":14,"column":10,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1724","line":14,"column":16,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1725","line":16,"column":13,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1726","line":16,"column":21,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1727","line":4,"column":9,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":20},{"ruleId":"1728","severity":1,"message":"1729","line":109,"column":6,"nodeType":"1730","endLine":109,"endColumn":17,"suggestions":"1731"},{"ruleId":"1704","severity":1,"message":"1732","line":116,"column":10,"nodeType":"1706","messageId":"1707","endLine":116,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1733","line":60,"column":10,"nodeType":"1706","messageId":"1707","endLine":60,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1734","line":71,"column":9,"nodeType":"1706","messageId":"1707","endLine":71,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1735","line":89,"column":9,"nodeType":"1706","messageId":"1707","endLine":89,"endColumn":23},{"ruleId":"1736","severity":1,"message":"1737","line":94,"column":34,"nodeType":"1738","messageId":"1739","endLine":94,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1740","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1741","line":7,"column":3,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":6},{"ruleId":"1704","severity":1,"message":"1742","line":8,"column":3,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":8},{"ruleId":"1704","severity":1,"message":"1743","line":9,"column":3,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1744","line":12,"column":8,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1745","line":37,"column":32,"nodeType":"1706","messageId":"1707","endLine":37,"endColumn":41},{"ruleId":"1704","severity":1,"message":"1746","line":38,"column":9,"nodeType":"1706","messageId":"1707","endLine":38,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1747","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":14},{"ruleId":"1748","severity":1,"message":"1749","line":21,"column":48,"nodeType":"1750","messageId":"1751","endLine":21,"endColumn":50},{"ruleId":"1704","severity":1,"message":"1752","line":23,"column":30,"nodeType":"1706","messageId":"1707","endLine":23,"endColumn":51},{"ruleId":"1700","replacedBy":"1753"},{"ruleId":"1702","replacedBy":"1754"},{"ruleId":"1704","severity":1,"message":"1718","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1755","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1756","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1719","line":6,"column":20,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1757","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1747","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1745","line":10,"column":17,"nodeType":"1706","messageId":"1707","endLine":10,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1757","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1758","line":3,"column":9,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1759","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1760","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1761","line":4,"column":22,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":33},{"ruleId":"1704","severity":1,"message":"1762","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1763","line":12,"column":8,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1764","line":13,"column":14,"nodeType":"1706","messageId":"1707","endLine":13,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1765","line":16,"column":9,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1766","line":17,"column":10,"nodeType":"1706","messageId":"1707","endLine":17,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1767","line":33,"column":9,"nodeType":"1706","messageId":"1707","endLine":33,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1768","line":35,"column":10,"nodeType":"1706","messageId":"1707","endLine":35,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1769","line":1,"column":27,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":35},{"ruleId":"1704","severity":1,"message":"1770","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1771","line":17,"column":8,"nodeType":"1706","messageId":"1707","endLine":17,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1772","line":18,"column":8,"nodeType":"1706","messageId":"1707","endLine":18,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1773","line":19,"column":8,"nodeType":"1706","messageId":"1707","endLine":19,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1761","line":20,"column":22,"nodeType":"1706","messageId":"1707","endLine":20,"endColumn":33},{"ruleId":"1704","severity":1,"message":"1765","line":22,"column":9,"nodeType":"1706","messageId":"1707","endLine":22,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1767","line":31,"column":9,"nodeType":"1706","messageId":"1707","endLine":31,"endColumn":17},{"ruleId":"1700","replacedBy":"1774"},{"ruleId":"1702","replacedBy":"1775"},{"ruleId":"1700","replacedBy":"1776"},{"ruleId":"1702","replacedBy":"1777"},{"ruleId":"1704","severity":1,"message":"1778","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1779","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1780","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1767","line":23,"column":9,"nodeType":"1706","messageId":"1707","endLine":23,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1781","line":3,"column":8,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1782","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1783","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1784","line":6,"column":17,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1785","line":17,"column":9,"nodeType":"1706","messageId":"1707","endLine":17,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1767","line":62,"column":9,"nodeType":"1706","messageId":"1707","endLine":62,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1786","line":63,"column":9,"nodeType":"1706","messageId":"1707","endLine":63,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1787","line":66,"column":5,"nodeType":"1706","messageId":"1707","endLine":66,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":67,"column":5,"nodeType":"1706","messageId":"1707","endLine":67,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":68,"column":5,"nodeType":"1706","messageId":"1707","endLine":68,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":69,"column":5,"nodeType":"1706","messageId":"1707","endLine":69,"endColumn":10},{"ruleId":"1790","severity":1,"message":"1791","line":187,"column":61,"nodeType":"1792","endLine":187,"endColumn":76},{"ruleId":"1704","severity":1,"message":"1781","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1782","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1783","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1793","line":7,"column":9,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1784","line":7,"column":17,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1794","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1795","line":10,"column":9,"nodeType":"1706","messageId":"1707","endLine":10,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1796","line":14,"column":9,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":13},{"ruleId":"1704","severity":1,"message":"1797","line":16,"column":8,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":13},{"ruleId":"1704","severity":1,"message":"1765","line":17,"column":10,"nodeType":"1706","messageId":"1707","endLine":17,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1767","line":60,"column":9,"nodeType":"1706","messageId":"1707","endLine":60,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1798","line":61,"column":10,"nodeType":"1706","messageId":"1707","endLine":61,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1786","line":62,"column":9,"nodeType":"1706","messageId":"1707","endLine":62,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1799","line":63,"column":10,"nodeType":"1706","messageId":"1707","endLine":63,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1800","line":63,"column":26,"nodeType":"1706","messageId":"1707","endLine":63,"endColumn":43},{"ruleId":"1704","severity":1,"message":"1787","line":66,"column":5,"nodeType":"1706","messageId":"1707","endLine":66,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":67,"column":5,"nodeType":"1706","messageId":"1707","endLine":67,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":68,"column":5,"nodeType":"1706","messageId":"1707","endLine":68,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":69,"column":5,"nodeType":"1706","messageId":"1707","endLine":69,"endColumn":10},{"ruleId":"1704","severity":1,"message":"1801","line":74,"column":9,"nodeType":"1706","messageId":"1707","endLine":74,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1759","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1802","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1718","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1757","line":3,"column":8,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1803","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1804","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1757","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1802","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1781","line":3,"column":8,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1782","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1783","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1784","line":6,"column":17,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1794","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1795","line":9,"column":9,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1805","line":10,"column":8,"nodeType":"1706","messageId":"1707","endLine":10,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1796","line":13,"column":9,"nodeType":"1706","messageId":"1707","endLine":13,"endColumn":13},{"ruleId":"1704","severity":1,"message":"1767","line":51,"column":9,"nodeType":"1706","messageId":"1707","endLine":51,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1786","line":52,"column":9,"nodeType":"1706","messageId":"1707","endLine":52,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1799","line":53,"column":10,"nodeType":"1706","messageId":"1707","endLine":53,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1800","line":53,"column":26,"nodeType":"1706","messageId":"1707","endLine":53,"endColumn":43},{"ruleId":"1806","severity":1,"message":"1807","line":85,"column":13,"nodeType":"1808","endLine":85,"endColumn":55},{"ruleId":"1809","severity":1,"message":"1810","line":107,"column":11,"nodeType":"1808","endLine":107,"endColumn":47},{"ruleId":"1790","severity":1,"message":"1791","line":107,"column":31,"nodeType":"1792","endLine":107,"endColumn":46},{"ruleId":"1704","severity":1,"message":"1718","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1803","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1804","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1718","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1811","line":5,"column":25,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":37},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1727","line":2,"column":9,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1758","line":4,"column":9,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1759","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1761","line":3,"column":9,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1805","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1765","line":8,"column":9,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1761","line":3,"column":22,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":33},{"ruleId":"1704","severity":1,"message":"1812","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1765","line":20,"column":9,"nodeType":"1706","messageId":"1707","endLine":20,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1813","line":46,"column":19,"nodeType":"1706","messageId":"1707","endLine":46,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1814","line":48,"column":10,"nodeType":"1706","messageId":"1707","endLine":48,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1815","line":48,"column":18,"nodeType":"1706","messageId":"1707","endLine":48,"endColumn":27},{"ruleId":"1748","severity":1,"message":"1749","line":75,"column":31,"nodeType":"1750","messageId":"1751","endLine":75,"endColumn":33},{"ruleId":"1748","severity":1,"message":"1749","line":100,"column":24,"nodeType":"1750","messageId":"1751","endLine":100,"endColumn":26},{"ruleId":"1728","severity":1,"message":"1816","line":117,"column":6,"nodeType":"1730","endLine":117,"endColumn":8,"suggestions":"1817"},{"ruleId":"1704","severity":1,"message":"1784","line":4,"column":9,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1780","line":4,"column":19,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1818","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1819","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1781","line":11,"column":8,"nodeType":"1706","messageId":"1707","endLine":11,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1820","line":12,"column":8,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1821","line":34,"column":9,"nodeType":"1706","messageId":"1707","endLine":34,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1822","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1823","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1819","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1824","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1794","line":11,"column":8,"nodeType":"1706","messageId":"1707","endLine":11,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1825","line":12,"column":9,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1826","line":36,"column":10,"nodeType":"1706","messageId":"1707","endLine":36,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1821","line":38,"column":9,"nodeType":"1706","messageId":"1707","endLine":38,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1827","line":42,"column":9,"nodeType":"1706","messageId":"1707","endLine":42,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1824","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1825","line":8,"column":9,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":20},{"ruleId":"1828","severity":1,"message":"1829","line":73,"column":1,"nodeType":"1830","endLine":86,"endColumn":3},{"ruleId":"1704","severity":1,"message":"1831","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1832","line":24,"column":10,"nodeType":"1706","messageId":"1707","endLine":24,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1787","line":27,"column":5,"nodeType":"1706","messageId":"1707","endLine":27,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":28,"column":5,"nodeType":"1706","messageId":"1707","endLine":28,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":29,"column":5,"nodeType":"1706","messageId":"1707","endLine":29,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":30,"column":5,"nodeType":"1706","messageId":"1707","endLine":30,"endColumn":10},{"ruleId":"1704","severity":1,"message":"1833","line":45,"column":9,"nodeType":"1706","messageId":"1707","endLine":45,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1819","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1834","line":1,"column":10,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1835","line":11,"column":3,"nodeType":"1706","messageId":"1707","endLine":11,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1836","line":12,"column":3,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1837","line":13,"column":3,"nodeType":"1706","messageId":"1707","endLine":13,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1796","line":15,"column":10,"nodeType":"1706","messageId":"1707","endLine":15,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1787","line":26,"column":5,"nodeType":"1706","messageId":"1707","endLine":26,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":27,"column":5,"nodeType":"1706","messageId":"1707","endLine":27,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":28,"column":5,"nodeType":"1706","messageId":"1707","endLine":28,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":29,"column":5,"nodeType":"1706","messageId":"1707","endLine":29,"endColumn":10},{"ruleId":"1809","severity":1,"message":"1810","line":58,"column":7,"nodeType":"1808","endLine":58,"endColumn":51},{"ruleId":"1790","severity":1,"message":"1791","line":58,"column":35,"nodeType":"1792","endLine":58,"endColumn":50},{"ruleId":"1806","severity":1,"message":"1807","line":59,"column":9,"nodeType":"1808","endLine":63,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1787","line":27,"column":5,"nodeType":"1706","messageId":"1707","endLine":27,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":28,"column":5,"nodeType":"1706","messageId":"1707","endLine":28,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":29,"column":5,"nodeType":"1706","messageId":"1707","endLine":29,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":30,"column":5,"nodeType":"1706","messageId":"1707","endLine":30,"endColumn":10},{"ruleId":"1700","replacedBy":"1838"},{"ruleId":"1702","replacedBy":"1839"},{"ruleId":"1704","severity":1,"message":"1794","line":1,"column":8,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1840","line":1,"column":8,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1769","line":1,"column":27,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":35},{"ruleId":"1704","severity":1,"message":"1767","line":51,"column":9,"nodeType":"1706","messageId":"1707","endLine":51,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1841","line":55,"column":16,"nodeType":"1706","messageId":"1707","endLine":55,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1842","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1843","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1844","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1845","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1846","line":12,"column":8,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":16},{"ruleId":"1700","replacedBy":"1847"},{"ruleId":"1702","replacedBy":"1848"},{"ruleId":"1704","severity":1,"message":"1849","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1787","line":52,"column":5,"nodeType":"1706","messageId":"1707","endLine":52,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":53,"column":5,"nodeType":"1706","messageId":"1707","endLine":53,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":54,"column":5,"nodeType":"1706","messageId":"1707","endLine":54,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":55,"column":5,"nodeType":"1706","messageId":"1707","endLine":55,"endColumn":10},{"ruleId":"1704","severity":1,"message":"1850","line":57,"column":10,"nodeType":"1706","messageId":"1707","endLine":57,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1841","line":59,"column":16,"nodeType":"1706","messageId":"1707","endLine":59,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1851","line":2,"column":22,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1852","line":4,"column":9,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1761","line":6,"column":9,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1853","line":13,"column":9,"nodeType":"1706","messageId":"1707","endLine":13,"endColumn":27},{"ruleId":"1704","severity":1,"message":"1854","line":14,"column":8,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1855","line":15,"column":8,"nodeType":"1706","messageId":"1707","endLine":15,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1823","line":16,"column":8,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1765","line":19,"column":9,"nodeType":"1706","messageId":"1707","endLine":19,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1856","line":20,"column":10,"nodeType":"1706","messageId":"1707","endLine":20,"endColumn":36},{"ruleId":"1704","severity":1,"message":"1857","line":73,"column":9,"nodeType":"1706","messageId":"1707","endLine":73,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1858","line":75,"column":10,"nodeType":"1706","messageId":"1707","endLine":75,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1832","line":88,"column":10,"nodeType":"1706","messageId":"1707","endLine":88,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1859","line":3,"column":23,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":42},{"ruleId":"1704","severity":1,"message":"1860","line":3,"column":9,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1781","line":3,"column":8,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1782","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1783","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1784","line":6,"column":17,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1794","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1795","line":9,"column":9,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1805","line":10,"column":8,"nodeType":"1706","messageId":"1707","endLine":10,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1859","line":15,"column":10,"nodeType":"1706","messageId":"1707","endLine":15,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1767","line":58,"column":9,"nodeType":"1706","messageId":"1707","endLine":58,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1786","line":59,"column":9,"nodeType":"1706","messageId":"1707","endLine":59,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1787","line":62,"column":5,"nodeType":"1706","messageId":"1707","endLine":62,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":63,"column":5,"nodeType":"1706","messageId":"1707","endLine":63,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":64,"column":5,"nodeType":"1706","messageId":"1707","endLine":64,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":65,"column":5,"nodeType":"1706","messageId":"1707","endLine":65,"endColumn":10},{"ruleId":"1704","severity":1,"message":"1727","line":3,"column":9,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1761","line":3,"column":22,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":33},{"ruleId":"1704","severity":1,"message":"1812","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1861","line":16,"column":8,"nodeType":"1706","messageId":"1707","endLine":16,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1765","line":18,"column":9,"nodeType":"1706","messageId":"1707","endLine":18,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1813","line":50,"column":19,"nodeType":"1706","messageId":"1707","endLine":50,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1862","line":53,"column":9,"nodeType":"1706","messageId":"1707","endLine":53,"endColumn":28},{"ruleId":"1748","severity":1,"message":"1749","line":54,"column":77,"nodeType":"1750","messageId":"1751","endLine":54,"endColumn":79},{"ruleId":"1704","severity":1,"message":"1863","line":59,"column":49,"nodeType":"1706","messageId":"1707","endLine":59,"endColumn":67},{"ruleId":"1704","severity":1,"message":"1864","line":63,"column":10,"nodeType":"1706","messageId":"1707","endLine":63,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1814","line":64,"column":10,"nodeType":"1706","messageId":"1707","endLine":64,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1815","line":64,"column":18,"nodeType":"1706","messageId":"1707","endLine":64,"endColumn":27},{"ruleId":"1728","severity":1,"message":"1865","line":106,"column":4,"nodeType":"1730","endLine":106,"endColumn":18,"suggestions":"1866"},{"ruleId":"1704","severity":1,"message":"1867","line":110,"column":7,"nodeType":"1706","messageId":"1707","endLine":110,"endColumn":25},{"ruleId":"1736","severity":1,"message":"1737","line":111,"column":32,"nodeType":"1738","messageId":"1739","endLine":111,"endColumn":34},{"ruleId":"1704","severity":1,"message":"1868","line":116,"column":7,"nodeType":"1706","messageId":"1707","endLine":116,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1869","line":131,"column":7,"nodeType":"1706","messageId":"1707","endLine":131,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1870","line":10,"column":10,"nodeType":"1706","messageId":"1707","endLine":10,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1871","line":38,"column":9,"nodeType":"1706","messageId":"1707","endLine":38,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1846","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1784","line":4,"column":9,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1780","line":4,"column":19,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1818","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1819","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1781","line":11,"column":8,"nodeType":"1706","messageId":"1707","endLine":11,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1820","line":12,"column":8,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1821","line":37,"column":9,"nodeType":"1706","messageId":"1707","endLine":37,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1824","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1825","line":8,"column":9,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":20},{"ruleId":"1809","severity":1,"message":"1810","line":79,"column":15,"nodeType":"1808","endLine":79,"endColumn":70},{"ruleId":"1704","severity":1,"message":"1819","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1824","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":29},{"ruleId":"1704","severity":1,"message":"1825","line":12,"column":9,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1821","line":65,"column":9,"nodeType":"1706","messageId":"1707","endLine":65,"endColumn":23},{"ruleId":"1809","severity":1,"message":"1810","line":101,"column":15,"nodeType":"1808","endLine":101,"endColumn":70},{"ruleId":"1704","severity":1,"message":"1872","line":1,"column":8,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":13},{"ruleId":"1704","severity":1,"message":"1757","line":2,"column":8,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":18},{"ruleId":"1704","severity":1,"message":"1718","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1873","line":6,"column":8,"nodeType":"1706","messageId":"1707","endLine":6,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1812","line":7,"column":8,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1874","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1875","line":9,"column":9,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1746","line":19,"column":9,"nodeType":"1706","messageId":"1707","endLine":19,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1870","line":4,"column":10,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1876","line":10,"column":10,"nodeType":"1706","messageId":"1707","endLine":10,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1877","line":3,"column":9,"nodeType":"1706","messageId":"1707","endLine":3,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1870","line":4,"column":10,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1878","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1742","line":7,"column":21,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1879","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1841","line":14,"column":16,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1718","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":11},{"ruleId":"1704","severity":1,"message":"1874","line":8,"column":8,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1875","line":9,"column":9,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1870","line":4,"column":10,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1878","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":15},{"ruleId":"1704","severity":1,"message":"1718","line":7,"column":10,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":13},{"ruleId":"1704","severity":1,"message":"1742","line":7,"column":21,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1880","line":7,"column":28,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":37},{"ruleId":"1704","severity":1,"message":"1881","line":7,"column":39,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":49},{"ruleId":"1704","severity":1,"message":"1882","line":8,"column":10,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":21},{"ruleId":"1704","severity":1,"message":"1841","line":12,"column":16,"nodeType":"1706","messageId":"1707","endLine":12,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1787","line":91,"column":5,"nodeType":"1706","messageId":"1707","endLine":91,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":92,"column":5,"nodeType":"1706","messageId":"1707","endLine":92,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":93,"column":5,"nodeType":"1706","messageId":"1707","endLine":93,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":94,"column":5,"nodeType":"1706","messageId":"1707","endLine":94,"endColumn":10},{"ruleId":"1700","replacedBy":"1883"},{"ruleId":"1702","replacedBy":"1884"},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1885","line":7,"column":9,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1769","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":24},{"ruleId":"1704","severity":1,"message":"1784","line":2,"column":17,"nodeType":"1706","messageId":"1707","endLine":2,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1782","line":4,"column":8,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":26},{"ruleId":"1704","severity":1,"message":"1783","line":5,"column":8,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":28},{"ruleId":"1704","severity":1,"message":"1727","line":7,"column":9,"nodeType":"1706","messageId":"1707","endLine":7,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1886","line":8,"column":9,"nodeType":"1706","messageId":"1707","endLine":8,"endColumn":19},{"ruleId":"1704","severity":1,"message":"1787","line":75,"column":5,"nodeType":"1706","messageId":"1707","endLine":75,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1788","line":76,"column":5,"nodeType":"1706","messageId":"1707","endLine":76,"endColumn":12},{"ruleId":"1704","severity":1,"message":"1745","line":77,"column":5,"nodeType":"1706","messageId":"1707","endLine":77,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1789","line":78,"column":5,"nodeType":"1706","messageId":"1707","endLine":78,"endColumn":10},{"ruleId":"1790","severity":1,"message":"1791","line":121,"column":64,"nodeType":"1792","endLine":121,"endColumn":79},{"ruleId":"1704","severity":1,"message":"1719","line":1,"column":16,"nodeType":"1706","messageId":"1707","endLine":1,"endColumn":25},{"ruleId":"1704","severity":1,"message":"1758","line":4,"column":9,"nodeType":"1706","messageId":"1707","endLine":4,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1727","line":5,"column":9,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1761","line":5,"column":22,"nodeType":"1706","messageId":"1707","endLine":5,"endColumn":33},{"ruleId":"1704","severity":1,"message":"1887","line":9,"column":8,"nodeType":"1706","messageId":"1707","endLine":9,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1880","line":11,"column":8,"nodeType":"1706","messageId":"1707","endLine":11,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1765","line":14,"column":9,"nodeType":"1706","messageId":"1707","endLine":14,"endColumn":17},{"ruleId":"1704","severity":1,"message":"1888","line":21,"column":3,"nodeType":"1706","messageId":"1707","endLine":21,"endColumn":22},{"ruleId":"1704","severity":1,"message":"1889","line":28,"column":9,"nodeType":"1706","messageId":"1707","endLine":28,"endColumn":20},{"ruleId":"1704","severity":1,"message":"1723","line":29,"column":10,"nodeType":"1706","messageId":"1707","endLine":29,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1724","line":29,"column":16,"nodeType":"1706","messageId":"1707","endLine":29,"endColumn":23},{"ruleId":"1704","severity":1,"message":"1890","line":30,"column":10,"nodeType":"1706","messageId":"1707","endLine":30,"endColumn":16},{"ruleId":"1704","severity":1,"message":"1891","line":30,"column":18,"nodeType":"1706","messageId":"1707","endLine":30,"endColumn":32},{"ruleId":"1704","severity":1,"message":"1892","line":31,"column":9,"nodeType":"1706","messageId":"1707","endLine":31,"endColumn":19},{"ruleId":"1700","replacedBy":"1893"},{"ruleId":"1702","replacedBy":"1894"},"no-native-reassign",["1895"],"no-negated-in-lhs",["1896"],"@typescript-eslint/no-unused-vars","'ThemeSetting' is defined but never used.","Identifier","unusedVar","'LanguageSwitcher' is defined but never used.","'HeaderMessages' is defined but never used.","'SearchBar' is defined but never used.","'AppLogo' is defined but never used.","'onGoToProfileHandler' is assigned a value but never used.","'TelegramShareButton' is defined but never used.","'TelegramIcon' is defined but never used.","'WhatsappShareButton' is defined but never used.","'WhatsappIcon' is defined but never used.","'grey' is defined but never used.","'Box' is defined but never used.","'useEffect' is defined but never used.","'Tickets' is defined but never used.","'CreateTicket' is defined but never used.","'MessageCard' is defined but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWindowDimensions'. Either include it or remove the dependency array.","ArrayExpression",["1897"],"'useMutation' is defined but never used.","'text' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'scrollToBottom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'BackIcon' is defined but never used.","'Fab' is defined but never used.","'Input' is defined but never used.","'TextareaAutosize' is defined but never used.","'AddIcon' is defined but never used.","'isLoading' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'styles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setIsShowClosedTicket' is assigned a value but never used.",["1895"],["1896"],"'classNames' is defined but never used.","'SignalCard' is defined but never used.","'AppAnimate' is defined but never used.","'useIntl' is defined but never used.","'AppsContainer' is defined but never used.","'ProductsSidebar' is defined but never used.","'useSelector' is defined but never used.","'BitcoinPic' is defined but never used.","'AppsContent' is defined but never used.","'fade' is defined but never used.","'AppState' is defined but never used.","'useGetProducts' is defined but never used.","'dispatch' is assigned a value but never used.","'theme' is assigned a value but never used.","'useState' is defined but never used.","'PriceSelector' is defined but never used.","'AppGrid' is defined but never used.","'ColorCell' is defined but never used.","'RatingCell' is defined but never used.",["1895"],["1896"],["1895"],["1896"],"'ListIcon' is defined but never used.","'AppsIcon' is defined but never used.","'IconButton' is defined but never used.","'StarBorderIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'FavoriteOutlinedIcon' is defined but never used.","'Checkbox' is defined but never used.","'queryClient' is defined but never used.","'history' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'isError' is assigned a value but never used.","'error' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Button' is defined but never used.","'IntlMessages' is defined but never used.","'green' is defined but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'id' is assigned a value but never used.","'isParticipated' is assigned a value but never used.","'setIsParticipated' is assigned a value but never used.","'onParticipateHandler' is assigned a value but never used.","'Bitcoin' is defined but never used.","'HelpDesk' is defined but never used.","'Products' is defined but never used.","'clsx' is defined but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'W3CWebSocket' is defined but never used.","'moment' is defined but never used.","'setMessage' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'setIsEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.",["1898"],"'Tooltip' is defined but never used.","'MoreVertIcon' is defined but never used.","'StarIcon' is defined but never used.","'onViewMoreOpen' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'PlayCircleOutlineIcon' is defined but never used.","'getFileSize' is defined but never used.","'isMoreIcon' is assigned a value but never used.","'onViewMoreClose' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'AppSelect' is defined but never used.","'messages' is assigned a value but never used.","'handleSelectionType' is assigned a value but never used.","'Divider' is defined but never used.","'Magnifier' is defined but never used.","'MOUSE_ACTIVATION' is defined but never used.","'TOUCH_ACTIVATION' is defined but never used.",["1895"],["1896"],"'jwtAxios' is defined but never used.","'isFetching' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'AppsStarredIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'CakeIcon' is defined but never used.","'UserInfo' is defined but never used.",["1895"],["1896"],"'AddContactForm' is defined but never used.","'percent' is assigned a value but never used.","'Select' is defined but never used.","'Field' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'CompassCalibrationOutlined' is defined but never used.","'inputLabel' is assigned a value but never used.","'labelWidth' is assigned a value but never used.","'useGetSubscriptions' is defined but never used.","'useGetPlans' is defined but never used.","'AppsFooter' is defined but never used.","'messagesEndRef' is assigned a value but never used.","'closeTicketLoading' is assigned a value but never used.","'files' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMsg'. Either include it or remove the dependency array.",["1899"],"'handleUploadChange' is assigned a value but never used.","'handleCloseTicket' is assigned a value but never used.","'handleSetText' is assigned a value but never used.","'Loader' is defined but never used.","'inputRef' is assigned a value but never used.","'React' is defined but never used.","'AppMenu' is defined but never used.","'Avatar' is defined but never used.","'Fonts' is defined but never used.","'useAuthUser' is defined but never used.","'useGetAnalyzes' is defined but never used.","'AppCard' is defined but never used.","'useCheckMobileScreen' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'showMessage' is defined but never used.",["1895"],["1896"],"'InfoView' is defined but never used.","'useHistory' is defined but never used.","'AppsPagination' is defined but never used.","'NavigateNextRounded' is defined but never used.","'prevPageRef' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","'tableCount' is assigned a value but never used.",["1895"],["1896"],"no-global-assign","no-unsafe-negation",{"desc":"1900","fix":"1901"},{"desc":"1902","fix":"1903"},{"desc":"1904","fix":"1905"},"Update the dependencies array to be: [getWindowDimensions, hasWindow]",{"range":"1906","text":"1907"},"Update the dependencies array to be: [client]",{"range":"1908","text":"1909"},"Update the dependencies array to be: [getMsg, ticketNumber]",{"range":"1910","text":"1911"},[2429,2440],"[getWindowDimensions, hasWindow]",[3355,3357],"[client]",[3198,3212],"[getMsg, ticketNumber]"]